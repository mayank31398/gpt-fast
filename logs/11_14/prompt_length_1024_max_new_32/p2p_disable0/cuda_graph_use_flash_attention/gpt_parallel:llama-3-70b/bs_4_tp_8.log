W1118 21:45:41.123000 3639335 site-packages/torch/distributed/run.py:793] 
W1118 21:45:41.123000 3639335 site-packages/torch/distributed/run.py:793] *****************************************
W1118 21:45:41.123000 3639335 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1118 21:45:41.123000 3639335 site-packages/torch/distributed/run.py:793] *****************************************
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
flash_kv_decode is set to True
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
our world size=8
Using device=cuda
Loading model ...
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8rank: 1, global_rank: 1, world_size: 8, global_world_size: 8

rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
GPTParallel(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=8448, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.40 seconds
CUDA_GRAPH are activate
Prefill latency: 0.19110895041376352 sec
Decode latency: 0.5069150980561972 sec
Compilation time: 0.70 seconds
Compilation time: 0.75 secondsCompilation time: 0.74 seconds

Compilation time: 0.76 seconds
Compilation time: 0.72 seconds
Compilation time: 0.76 secondsCompilation time: 0.71 seconds

Compilation time: 0.70 seconds
Prefill latency: 0.1868741880171001 sec
Decode latency: 0.5069275619462132 sec
Prefill latency: 0.1880170051008463 sec
Decode latency: 0.5073639350011945 sec
Prefill latency: 0.1871392377652228 sec
Decode latency: 0.5065077380277216 sec
Prefill latency: 0.1881331200711429 sec
Decode latency: 0.506207702215761 sec
Prefill latency: 0.18737095082178712 sec
Decode latency: 0.5070812851190567 sec
Time for inference 1: 0.70 sec total, 184.13 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3538.22 GB/s
FLOPS achieved: 116.76 TF/s

Prefill latency: 0.18786286795511842 sec
Decode latency: 0.50637680105865 sec
Time for inference 2: 0.69 sec total, 184.22 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3539.86 GB/s
FLOPS achieved: 116.82 TF/s

Prefill latency: 0.1875124122016132 sec
Decode latency: 0.5071447510272264 sec
Time for inference 3: 0.70 sec total, 184.11 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3537.83 GB/s
FLOPS achieved: 116.75 TF/s

Prefill latency: 0.18755381973460317 sec
Decode latency: 0.5068904599174857 sec
Time for inference 4: 0.70 sec total, 184.17 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3538.92 GB/s
FLOPS achieved: 116.78 TF/s

Prefill latency: 0.18792427890002728 sec
Decode latency: 0.5070179589092731 sec
Time for inference 5: 0.70 sec total, 184.06 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3536.70 GB/s
FLOPS achieved: 116.71 TF/s

Prefill latency: 0.18753871973603964 sec
Decode latency: 0.5070038358680904 sec
Time for inference 6: 0.70 sec total, 184.17 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3538.83 GB/s
FLOPS achieved: 116.78 TF/s

Prefill latency: 0.18726638006046414 sec
Decode latency: 0.506759244017303 sec
Time for inference 7: 0.69 sec total, 184.30 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3541.31 GB/s
FLOPS achieved: 116.86 TF/s

Prefill latency: 0.18754187505692244 sec
Decode latency: 0.5061285789124668 sec
Time for inference 8: 0.69 sec total, 184.39 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3543.04 GB/s
FLOPS achieved: 116.92 TF/s

Prefill latency: 0.18716362677514553 sec
Decode latency: 0.5070943692699075 sec
Time for inference 9: 0.69 sec total, 184.23 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3540.08 GB/s
FLOPS achieved: 116.82 TF/s

Prefill latency: 0.18679325701668859 sec
Decode latency: 0.5071332869119942 sec
Time for inference 10: 0.69 sec total, 184.33 tokens/sec
Decode latency: 0.51 sec
Prefill latency: 0.19 sec
Bandwidth achieved: 3542.07 GB/s
FLOPS achieved: 116.89 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 32
Average decode latency: 0.5069 sec
Average prefill latency: 0.1875 sec
Average tokens/sec: 184.21
Memory used: 28.52 GB
Done. we are killing the process
[rank0]:[W1118 21:46:08.012507761 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
