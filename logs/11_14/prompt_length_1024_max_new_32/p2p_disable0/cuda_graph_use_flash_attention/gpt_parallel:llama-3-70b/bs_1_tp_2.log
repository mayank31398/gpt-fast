W1118 21:43:29.252000 3636580 site-packages/torch/distributed/run.py:793] 
W1118 21:43:29.252000 3636580 site-packages/torch/distributed/run.py:793] *****************************************
W1118 21:43:29.252000 3636580 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1118 21:43:29.252000 3636580 site-packages/torch/distributed/run.py:793] *****************************************
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
flash_kv_decode is set to True
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
our world size=2
Using device=cuda
Loading model ...
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
GPTParallel(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.33 seconds
CUDA_GRAPH are activate
Prefill latency: 0.15722332382574677 sec
Decode latency: 1.0132844457402825 sec
Compilation time: 1.19 seconds
Compilation time: 1.17 seconds
Prefill latency: 0.15693082194775343 sec
Decode latency: 1.0123890950344503 sec
Prefill latency: 0.1573122190311551 sec
Decode latency: 1.012285710312426 sec
Prefill latency: 0.1565858838148415 sec
Decode latency: 1.01197669794783 sec
Prefill latency: 0.15702590998262167 sec
Decode latency: 1.0118457153439522 sec
Prefill latency: 0.1572538991458714 sec
Decode latency: 1.0121306097134948 sec
Time for inference 1: 1.17 sec total, 27.35 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1929.78 GB/s
FLOPS achieved: 63.68 TF/s

Prefill latency: 0.15852937195450068 sec
Decode latency: 1.0120588829740882 sec
Time for inference 2: 1.17 sec total, 27.32 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1927.52 GB/s
FLOPS achieved: 63.61 TF/s

Prefill latency: 0.15785722993314266 sec
Decode latency: 1.012455658055842 sec
Time for inference 3: 1.17 sec total, 27.33 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1928.24 GB/s
FLOPS achieved: 63.63 TF/s

Prefill latency: 0.15843147737905383 sec
Decode latency: 1.011915158946067 sec
Time for inference 4: 1.17 sec total, 27.33 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1928.36 GB/s
FLOPS achieved: 63.64 TF/s

Prefill latency: 0.15650541195645928 sec
Decode latency: 1.012054376769811 sec
Time for inference 5: 1.17 sec total, 27.37 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1931.24 GB/s
FLOPS achieved: 63.73 TF/s

Prefill latency: 0.15685162600129843 sec
Decode latency: 1.0123183941468596 sec
Time for inference 6: 1.17 sec total, 27.36 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1930.20 GB/s
FLOPS achieved: 63.70 TF/s

Prefill latency: 0.15536754205822945 sec
Decode latency: 1.0118479221127927 sec
Time for inference 7: 1.17 sec total, 27.40 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1933.44 GB/s
FLOPS achieved: 63.80 TF/s

Prefill latency: 0.16003654012456536 sec
Decode latency: 1.0119998129084706 sec
Time for inference 8: 1.17 sec total, 27.29 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1925.56 GB/s
FLOPS achieved: 63.54 TF/s

Prefill latency: 0.15754150273278356 sec
Decode latency: 1.0121765709482133 sec
Time for inference 9: 1.17 sec total, 27.35 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1929.34 GB/s
FLOPS achieved: 63.67 TF/s

Prefill latency: 0.1562426509335637 sec
Decode latency: 1.0115461638197303 sec
Time for inference 10: 1.17 sec total, 27.39 tokens/sec
Decode latency: 1.01 sec
Prefill latency: 0.16 sec
Bandwidth achieved: 1932.47 GB/s
FLOPS achieved: 63.77 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 32
Average decode latency: 1.0121 sec
Average prefill latency: 0.1575 sec
Average tokens/sec: 27.35
Memory used: 75.72 GB
Done. we are killing the process
[rank0]:[W1118 21:43:56.122803927 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
