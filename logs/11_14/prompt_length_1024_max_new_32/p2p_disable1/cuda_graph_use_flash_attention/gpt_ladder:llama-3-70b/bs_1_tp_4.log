W1119 16:53:21.190000 3017862 site-packages/torch/distributed/run.py:793] 
W1119 16:53:21.190000 3017862 site-packages/torch/distributed/run.py:793] *****************************************
W1119 16:53:21.190000 3017862 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1119 16:53:21.190000 3017862 site-packages/torch/distributed/run.py:793] *****************************************
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
flash_kv_decode is set to True
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
our world size=4
Using device=cuda
Loading model ...
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
GPTLadder(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.37 seconds
CUDA_GRAPH are activate
[rank1]:[W1119 16:53:29.627531777 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
[rank2]:[W1119 16:53:29.639116318 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
[rank3]:[W1119 16:53:29.533720925 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.0977752017788589 sec
Decode latency: 0.6459367559291422 sec
Compilation time: 0.78 seconds
Compilation time: 0.85 seconds
Compilation time: 0.74 seconds
Compilation time: 0.75 seconds
Prefill latency: 0.09736650087870657 sec
Decode latency: 0.6458180490881205 sec
Prefill latency: 0.0967922150157392 sec
Decode latency: 0.6456997799687088 sec
Prefill latency: 0.09706070297397673 sec
Decode latency: 0.6459213588386774 sec
Prefill latency: 0.09710748516954482 sec
Decode latency: 0.6456493739970028 sec
Prefill latency: 0.09721837495453656 sec
Decode latency: 0.64580256678164 sec
Time for inference 1: 0.74 sec total, 43.03 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.33 GB/s
FLOPS achieved: 51.59 TF/s

Prefill latency: 0.09706370998173952 sec
Decode latency: 0.6459806829225272 sec
Time for inference 2: 0.74 sec total, 43.03 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.26 GB/s
FLOPS achieved: 51.59 TF/s

Prefill latency: 0.0970406630076468 sec
Decode latency: 0.6462121549993753 sec
Time for inference 3: 0.74 sec total, 43.02 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1562.98 GB/s
FLOPS achieved: 51.58 TF/s

Prefill latency: 0.09746031207032502 sec
Decode latency: 0.6457468231674284 sec
Time for inference 4: 0.74 sec total, 43.02 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.01 GB/s
FLOPS achieved: 51.58 TF/s

Prefill latency: 0.09710499295033514 sec
Decode latency: 0.6459832130931318 sec
Time for inference 5: 0.74 sec total, 43.03 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.29 GB/s
FLOPS achieved: 51.59 TF/s

Prefill latency: 0.09692050004377961 sec
Decode latency: 0.6457670300733298 sec
Time for inference 6: 0.74 sec total, 43.05 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1564.16 GB/s
FLOPS achieved: 51.62 TF/s

Prefill latency: 0.09695607284083962 sec
Decode latency: 0.6459594829939306 sec
Time for inference 7: 0.74 sec total, 43.04 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.73 GB/s
FLOPS achieved: 51.60 TF/s

Prefill latency: 0.09727201098576188 sec
Decode latency: 0.6458199289627373 sec
Time for inference 8: 0.74 sec total, 43.03 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.25 GB/s
FLOPS achieved: 51.59 TF/s

Prefill latency: 0.09720705100335181 sec
Decode latency: 0.6458096678834409 sec
Time for inference 9: 0.74 sec total, 43.03 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1563.18 GB/s
FLOPS achieved: 51.59 TF/s

Prefill latency: 0.0973102948628366 sec
Decode latency: 0.6460126480087638 sec
Time for inference 10: 0.74 sec total, 43.01 tokens/sec
Decode latency: 0.65 sec
Prefill latency: 0.10 sec
Bandwidth achieved: 1562.71 GB/s
FLOPS achieved: 51.57 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 32
Average decode latency: 0.6459 sec
Average prefill latency: 0.0972 sec
Average tokens/sec: 43.03
Memory used: 42.72 GB
Done. we are killing the process
[rank0]:[W1119 16:53:41.247864362 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
