W1113 11:33:26.920000 1334383 site-packages/torch/distributed/run.py:793] 
W1113 11:33:26.920000 1334383 site-packages/torch/distributed/run.py:793] *****************************************
W1113 11:33:26.920000 1334383 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1113 11:33:26.920000 1334383 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=3072, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.00 seconds
CUDA_GRAPH are activate
Prefill latency: 0.307811489328742 sec
Decode latency: 2.0933612436056137 sec
Compilation time: 2.40 seconds
Compilation time: 2.41 seconds
Prefill latency: 0.3089618869125843 sec
Decode latency: 2.0920956805348396 sec
Prefill latency: 0.3077829238027334 sec
Decode latency: 2.092281587421894 sec
Prefill latency: 0.30817955173552036 sec
Decode latency: 2.091864103451371 sec
Prefill latency: 0.3088481221348047 sec
Decode latency: 2.0912936348468065 sec
Prefill latency: 0.30759877525269985 sec
Decode latency: 2.0922402404248714 sec
Time for inference 1: 2.40 sec total, 1706.28 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13702.33 GB/s
FLOPS achieved: 68.51 TF/s

Prefill latency: 0.30854071117937565 sec
Decode latency: 2.0918899346143007 sec
Time for inference 2: 2.40 sec total, 1705.87 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13699.01 GB/s
FLOPS achieved: 68.50 TF/s

Prefill latency: 0.30805801786482334 sec
Decode latency: 2.091718878597021 sec
Time for inference 3: 2.40 sec total, 1706.17 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13701.43 GB/s
FLOPS achieved: 68.51 TF/s

Prefill latency: 0.30771548114717007 sec
Decode latency: 2.091911720111966 sec
Time for inference 4: 2.40 sec total, 1706.33 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13702.71 GB/s
FLOPS achieved: 68.51 TF/s

Prefill latency: 0.30710206739604473 sec
Decode latency: 2.092265758663416 sec
Time for inference 5: 2.40 sec total, 1706.55 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13704.48 GB/s
FLOPS achieved: 68.52 TF/s

Prefill latency: 0.3091740757226944 sec
Decode latency: 2.091143548488617 sec
Time for inference 6: 2.40 sec total, 1705.94 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13699.58 GB/s
FLOPS achieved: 68.50 TF/s

Prefill latency: 0.30766601487994194 sec
Decode latency: 2.091436991468072 sec
Time for inference 7: 2.40 sec total, 1706.80 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13706.54 GB/s
FLOPS achieved: 68.53 TF/s

Prefill latency: 0.3080506455153227 sec
Decode latency: 2.0927412882447243 sec
Time for inference 8: 2.40 sec total, 1705.61 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13696.95 GB/s
FLOPS achieved: 68.48 TF/s

Prefill latency: 0.30818855203688145 sec
Decode latency: 2.0918281208723783 sec
Time for inference 9: 2.40 sec total, 1706.17 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13701.41 GB/s
FLOPS achieved: 68.51 TF/s

Prefill latency: 0.30764870159327984 sec
Decode latency: 2.0914346873760223 sec
Time for inference 10: 2.40 sec total, 1706.77 tokens/sec
Decode latency: 2.09 sec
Prefill latency: 0.31 sec
Bandwidth achieved: 13706.27 GB/s
FLOPS achieved: 68.53 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 256
Average decode latency: 2.0919 sec
Average prefill latency: 0.3080 sec
Average tokens/sec: 1706.25
Memory used: 31.22 GB
Done. we are killing the process
[rank0]:[W1113 11:34:13.308772771 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
