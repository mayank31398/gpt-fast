flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.20 seconds
CUDA_GRAPH are activate
Prefill latency: 0.12947084195911884 sec
Decode latency: 2.3243179749697447 sec
Compilation time: 2.45 seconds
Prefill latency: 0.12975996918976307 sec
Decode latency: 2.3094705250114202 sec
Prefill latency: 0.13024385273456573 sec
Decode latency: 2.3255945779383183 sec
Prefill latency: 0.12955224700272083 sec
Decode latency: 2.3251718766987324 sec
Prefill latency: 0.13015639781951904 sec
Decode latency: 2.2604408264160156 sec
Prefill latency: 0.12924853339791298 sec
Decode latency: 2.3234318122267723 sec
Time for inference 1: 2.45 sec total, 417.41 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6265.22 GB/s
FLOPS achieved: 31.33 TF/s

Prefill latency: 0.1299194972962141 sec
Decode latency: 2.3252908047288656 sec
Time for inference 2: 2.46 sec total, 416.97 tokens/sec
Decode latency: 2.33 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6258.71 GB/s
FLOPS achieved: 31.29 TF/s

Prefill latency: 0.1306528989225626 sec
Decode latency: 2.3264816515147686 sec
Time for inference 3: 2.46 sec total, 416.63 tokens/sec
Decode latency: 2.33 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6253.60 GB/s
FLOPS achieved: 31.27 TF/s

Prefill latency: 0.1306476928293705 sec
Decode latency: 2.319587541744113 sec
Time for inference 4: 2.45 sec total, 417.81 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6271.21 GB/s
FLOPS achieved: 31.36 TF/s

Prefill latency: 0.1303559336811304 sec
Decode latency: 2.3249082434922457 sec
Time for inference 5: 2.46 sec total, 416.95 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6258.29 GB/s
FLOPS achieved: 31.29 TF/s

Prefill latency: 0.13003477826714516 sec
Decode latency: 2.325362643226981 sec
Time for inference 6: 2.46 sec total, 416.93 tokens/sec
Decode latency: 2.33 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6258.04 GB/s
FLOPS achieved: 31.29 TF/s

Prefill latency: 0.13050684332847595 sec
Decode latency: 2.324973735958338 sec
Time for inference 7: 2.46 sec total, 416.92 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6257.97 GB/s
FLOPS achieved: 31.29 TF/s

Prefill latency: 0.13010407611727715 sec
Decode latency: 2.3173258528113365 sec
Time for inference 8: 2.45 sec total, 418.30 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6278.61 GB/s
FLOPS achieved: 31.39 TF/s

Prefill latency: 0.13154428265988827 sec
Decode latency: 2.311140948906541 sec
Time for inference 9: 2.44 sec total, 419.11 tokens/sec
Decode latency: 2.31 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6290.79 GB/s
FLOPS achieved: 31.45 TF/s

Prefill latency: 0.13006562367081642 sec
Decode latency: 2.3237167857587337 sec
Time for inference 10: 2.45 sec total, 417.21 tokens/sec
Decode latency: 2.32 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6262.20 GB/s
FLOPS achieved: 31.31 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 256
Average decode latency: 2.3222 sec
Average prefill latency: 0.1303 sec
Average tokens/sec: 417.42
Memory used: 18.79 GB
[rank0]:[W1113 11:49:14.889453598 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1113 11:49:15.697059487 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
