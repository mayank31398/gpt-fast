flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.34 seconds
CUDA_GRAPH are activate
[rank0]:[W1113 12:06:35.122752171 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.1324929241091013 sec
Decode latency: 2.352739932015538 sec
Compilation time: 2.49 seconds
Prefill latency: 0.12999713607132435 sec
Decode latency: 2.3504042997956276 sec
Prefill latency: 0.13004535250365734 sec
Decode latency: 2.3504592049866915 sec
Prefill latency: 0.13223397359251976 sec
Decode latency: 2.351295555010438 sec
Prefill latency: 0.13310988061130047 sec
Decode latency: 2.3521812558174133 sec
Prefill latency: 0.13117513991892338 sec
Decode latency: 2.3344215154647827 sec
Time for inference 1: 2.47 sec total, 415.21 tokens/sec
Decode latency: 2.33 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6232.19 GB/s
FLOPS achieved: 31.16 TF/s

Prefill latency: 0.13202635198831558 sec
Decode latency: 2.2950058672577143 sec
Time for inference 2: 2.43 sec total, 421.81 tokens/sec
Decode latency: 2.30 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6331.35 GB/s
FLOPS achieved: 31.66 TF/s

Prefill latency: 0.1316509060561657 sec
Decode latency: 2.3497457075864077 sec
Time for inference 3: 2.48 sec total, 412.56 tokens/sec
Decode latency: 2.35 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6192.53 GB/s
FLOPS achieved: 30.96 TF/s

Prefill latency: 0.13096422143280506 sec
Decode latency: 2.347500443458557 sec
Time for inference 4: 2.48 sec total, 413.04 tokens/sec
Decode latency: 2.35 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6199.64 GB/s
FLOPS achieved: 31.00 TF/s

Prefill latency: 0.13049834407866 sec
Decode latency: 2.352546028792858 sec
Time for inference 5: 2.48 sec total, 412.28 tokens/sec
Decode latency: 2.35 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6188.31 GB/s
FLOPS achieved: 30.94 TF/s

Prefill latency: 0.1300321239978075 sec
Decode latency: 2.3423973191529512 sec
Time for inference 6: 2.47 sec total, 414.04 tokens/sec
Decode latency: 2.34 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6214.68 GB/s
FLOPS achieved: 31.07 TF/s

Prefill latency: 0.1312133837491274 sec
Decode latency: 2.3113516736775637 sec
Time for inference 7: 2.44 sec total, 419.12 tokens/sec
Decode latency: 2.31 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6290.93 GB/s
FLOPS achieved: 31.45 TF/s

Prefill latency: 0.13111605495214462 sec
Decode latency: 2.352259609848261 sec
Time for inference 8: 2.48 sec total, 412.24 tokens/sec
Decode latency: 2.35 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6187.72 GB/s
FLOPS achieved: 30.94 TF/s

Prefill latency: 0.13082623109221458 sec
Decode latency: 2.329872392117977 sec
Time for inference 9: 2.46 sec total, 416.05 tokens/sec
Decode latency: 2.33 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6244.79 GB/s
FLOPS achieved: 31.22 TF/s

Prefill latency: 0.13072897493839264 sec
Decode latency: 2.3139043916016817 sec
Time for inference 10: 2.45 sec total, 418.76 tokens/sec
Decode latency: 2.31 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6285.59 GB/s
FLOPS achieved: 31.43 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 256
Average decode latency: 2.3329 sec
Average prefill latency: 0.1310 sec
Average tokens/sec: 415.51
Memory used: 21.01 GB
Done. we are killing the process
[rank0]:[W1113 12:07:12.364047754 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
