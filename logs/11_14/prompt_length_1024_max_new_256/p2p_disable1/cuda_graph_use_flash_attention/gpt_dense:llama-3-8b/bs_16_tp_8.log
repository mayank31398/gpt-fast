W1113 12:05:18.177000 1441343 site-packages/torch/distributed/run.py:793] 
W1113 12:05:18.177000 1441343 site-packages/torch/distributed/run.py:793] *****************************************
W1113 12:05:18.177000 1441343 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1113 12:05:18.177000 1441343 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.72 seconds
CUDA_GRAPH are activate
Prefill latency: 0.15863965265452862 sec
Decode latency: 2.5445573441684246 sec
Compilation time: 2.71 secondsCompilation time: 2.71 seconds

Compilation time: 2.72 seconds
Compilation time: 2.71 seconds
Compilation time: 2.71 seconds
Compilation time: 2.70 secondsCompilation time: 2.72 seconds

Compilation time: 2.72 seconds
Prefill latency: 0.1526445858180523 sec
Decode latency: 2.5510191787034273 sec
Prefill latency: 0.15273282304406166 sec
Decode latency: 2.5190791487693787 sec
Prefill latency: 0.1530653815716505 sec
Decode latency: 2.5262891966849566 sec
Prefill latency: 0.15288113057613373 sec
Decode latency: 2.5289675258100033 sec
Prefill latency: 0.15456032566726208 sec
Decode latency: 2.5244623627513647 sec
Time for inference 1: 2.68 sec total, 1528.35 tokens/sec
Decode latency: 2.52 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4273.32 GB/s
FLOPS achieved: 21.37 TF/s

Prefill latency: 0.1525638960301876 sec
Decode latency: 2.507951285690069 sec
Time for inference 2: 2.66 sec total, 1538.95 tokens/sec
Decode latency: 2.51 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4302.95 GB/s
FLOPS achieved: 21.51 TF/s

Prefill latency: 0.15483637526631355 sec
Decode latency: 2.5328775104135275 sec
Time for inference 3: 2.69 sec total, 1523.36 tokens/sec
Decode latency: 2.53 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4259.37 GB/s
FLOPS achieved: 21.30 TF/s

Prefill latency: 0.15260160714387894 sec
Decode latency: 2.5149233993142843 sec
Time for inference 4: 2.67 sec total, 1535.04 tokens/sec
Decode latency: 2.51 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4292.01 GB/s
FLOPS achieved: 21.46 TF/s

Prefill latency: 0.1527351550757885 sec
Decode latency: 2.5118877962231636 sec
Time for inference 5: 2.67 sec total, 1536.65 tokens/sec
Decode latency: 2.51 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4296.53 GB/s
FLOPS achieved: 21.48 TF/s

Prefill latency: 0.1533046755939722 sec
Decode latency: 2.5222155582159758 sec
Time for inference 6: 2.68 sec total, 1530.37 tokens/sec
Decode latency: 2.52 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4278.96 GB/s
FLOPS achieved: 21.39 TF/s

Prefill latency: 0.15250063873827457 sec
Decode latency: 2.524503830820322 sec
Time for inference 7: 2.68 sec total, 1529.47 tokens/sec
Decode latency: 2.52 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4276.46 GB/s
FLOPS achieved: 21.38 TF/s

Prefill latency: 0.15334634855389595 sec
Decode latency: 2.513294268399477 sec
Time for inference 8: 2.67 sec total, 1535.47 tokens/sec
Decode latency: 2.51 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4293.22 GB/s
FLOPS achieved: 21.47 TF/s

Prefill latency: 0.15311736054718494 sec
Decode latency: 2.5448755249381065 sec
Time for inference 9: 2.70 sec total, 1517.67 tokens/sec
Decode latency: 2.54 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4243.46 GB/s
FLOPS achieved: 21.22 TF/s

Prefill latency: 0.15268310345709324 sec
Decode latency: 2.5204789880663157 sec
Time for inference 10: 2.67 sec total, 1531.71 tokens/sec
Decode latency: 2.52 sec
Prefill latency: 0.15 sec
Bandwidth achieved: 4282.73 GB/s
FLOPS achieved: 21.41 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 256
Average decode latency: 2.5217 sec
Average prefill latency: 0.1532 sec
Average tokens/sec: 1530.70
Memory used: 17.93 GB
Done. we are killing the process
[rank0]:[W1113 12:06:21.608159004 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
