flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=34816, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.54 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 08:39:08.238589610 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 2.1662660092115402 sec
Decode latency: 6.778643179684877 sec
Compilation time: 8.95 seconds
Prefill latency: 2.1717943251132965 sec
Decode latency: 6.7919617630541325 sec
Prefill latency: 2.1644915845245123 sec
Decode latency: 6.807084808126092 sec
Prefill latency: 2.165918316692114 sec
Decode latency: 6.84534895978868 sec
Prefill latency: 2.1705924551934004 sec
Decode latency: 6.708078829571605 sec
Prefill latency: 2.1640379950404167 sec
Decode latency: 6.838904632255435 sec
Time for inference 1: 9.00 sec total, 3639.15 tokens/sec
Decode latency: 6.84 sec
Prefill latency: 2.16 sec
Bandwidth achieved: 54622.10 GB/s
FLOPS achieved: 163.87 TF/s

Prefill latency: 2.1637859735637903 sec
Decode latency: 6.733214044943452 sec
Time for inference 2: 8.90 sec total, 3682.58 tokens/sec
Decode latency: 6.73 sec
Prefill latency: 2.16 sec
Bandwidth achieved: 55273.96 GB/s
FLOPS achieved: 165.82 TF/s

Prefill latency: 2.1761887166649103 sec
Decode latency: 6.859190482646227 sec
Time for inference 3: 9.04 sec total, 3626.16 tokens/sec
Decode latency: 6.86 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 54427.18 GB/s
FLOPS achieved: 163.28 TF/s

Prefill latency: 2.1809576228260994 sec
Decode latency: 6.70876600779593 sec
Time for inference 4: 8.89 sec total, 3685.56 tokens/sec
Decode latency: 6.71 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 55318.79 GB/s
FLOPS achieved: 165.96 TF/s

Prefill latency: 2.181216649711132 sec
Decode latency: 6.853586316108704 sec
Time for inference 5: 9.04 sec total, 3626.38 tokens/sec
Decode latency: 6.85 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 54430.49 GB/s
FLOPS achieved: 163.29 TF/s

Prefill latency: 2.180644126608968 sec
Decode latency: 6.741200746968389 sec
Time for inference 6: 8.92 sec total, 3672.31 tokens/sec
Decode latency: 6.74 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 55119.85 GB/s
FLOPS achieved: 165.36 TF/s

Prefill latency: 2.176989948377013 sec
Decode latency: 6.856428187340498 sec
Time for inference 7: 9.03 sec total, 3626.93 tokens/sec
Decode latency: 6.86 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 54438.73 GB/s
FLOPS achieved: 163.32 TF/s

Prefill latency: 2.176432516425848 sec
Decode latency: 6.863081531599164 sec
Time for inference 8: 9.04 sec total, 3624.49 tokens/sec
Decode latency: 6.86 sec
Prefill latency: 2.18 sec
Bandwidth achieved: 54402.14 GB/s
FLOPS achieved: 163.21 TF/s

Prefill latency: 2.174563955515623 sec
Decode latency: 6.825639177113771 sec
Time for inference 9: 9.00 sec total, 3640.34 tokens/sec
Decode latency: 6.83 sec
Prefill latency: 2.17 sec
Bandwidth achieved: 54639.93 GB/s
FLOPS achieved: 163.92 TF/s

Prefill latency: 2.17388647608459 sec
Decode latency: 6.715688720345497 sec
Time for inference 10: 8.89 sec total, 3685.61 tokens/sec
Decode latency: 6.72 sec
Prefill latency: 2.17 sec
Bandwidth achieved: 55319.53 GB/s
FLOPS achieved: 165.96 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 6.7996 sec
Average prefill latency: 2.1749 sec
Average tokens/sec: 3650.95
Memory used: 76.61 GB
Done. we are killing the process
[rank0]:[W1114 08:41:23.051733839 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
