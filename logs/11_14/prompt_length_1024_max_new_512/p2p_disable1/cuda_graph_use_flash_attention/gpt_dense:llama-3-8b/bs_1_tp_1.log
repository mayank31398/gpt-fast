flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.63 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 06:59:04.254894650 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.03389766626060009 sec
Decode latency: 4.389876959845424 sec
Compilation time: 4.43 seconds
Prefill latency: 0.03368007764220238 sec
Decode latency: 4.406221859157085 sec
Prefill latency: 0.03354634344577789 sec
Decode latency: 4.401288595050573 sec
Prefill latency: 0.03360643424093723 sec
Decode latency: 4.37866041995585 sec
Prefill latency: 0.033543236553668976 sec
Decode latency: 4.400240805000067 sec
Prefill latency: 0.03371761739253998 sec
Decode latency: 4.378326108679175 sec
Time for inference 1: 4.41 sec total, 116.02 tokens/sec
Decode latency: 4.38 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1741.43 GB/s
FLOPS achieved: 5.22 TF/s

Prefill latency: 0.03360839560627937 sec
Decode latency: 4.383704638108611 sec
Time for inference 2: 4.42 sec total, 115.88 tokens/sec
Decode latency: 4.38 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1739.36 GB/s
FLOPS achieved: 5.22 TF/s

Prefill latency: 0.03361598029732704 sec
Decode latency: 4.400468347594142 sec
Time for inference 3: 4.44 sec total, 115.44 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1732.78 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.033587515354156494 sec
Decode latency: 4.435806408524513 sec
Time for inference 4: 4.47 sec total, 114.53 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1719.09 GB/s
FLOPS achieved: 5.16 TF/s

Prefill latency: 0.033722035586833954 sec
Decode latency: 4.38361581787467 sec
Time for inference 5: 4.42 sec total, 115.88 tokens/sec
Decode latency: 4.38 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1739.36 GB/s
FLOPS achieved: 5.22 TF/s

Prefill latency: 0.03372251056134701 sec
Decode latency: 4.435113595798612 sec
Time for inference 6: 4.47 sec total, 114.55 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1719.32 GB/s
FLOPS achieved: 5.16 TF/s

Prefill latency: 0.033649763092398643 sec
Decode latency: 4.4356745686382055 sec
Time for inference 7: 4.47 sec total, 114.53 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1719.10 GB/s
FLOPS achieved: 5.16 TF/s

Prefill latency: 0.03373647667467594 sec
Decode latency: 4.405665103346109 sec
Time for inference 8: 4.44 sec total, 115.30 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1730.69 GB/s
FLOPS achieved: 5.19 TF/s

Prefill latency: 0.03370918333530426 sec
Decode latency: 4.40031904540956 sec
Time for inference 9: 4.43 sec total, 115.45 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1732.82 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03364909812808037 sec
Decode latency: 4.405349021777511 sec
Time for inference 10: 4.44 sec total, 115.32 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1730.90 GB/s
FLOPS achieved: 5.19 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.4064 sec
Average prefill latency: 0.0337 sec
Average tokens/sec: 115.29
Memory used: 17.45 GB
Done. we are killing the process
[rank0]:[W1114 07:00:11.085862276 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
