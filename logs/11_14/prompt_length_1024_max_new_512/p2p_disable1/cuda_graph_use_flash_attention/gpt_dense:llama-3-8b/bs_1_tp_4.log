W1114 07:01:25.818000 2728798 site-packages/torch/distributed/run.py:793] 
W1114 07:01:25.818000 2728798 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:01:25.818000 2728798 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:01:25.818000 2728798 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.09 seconds
CUDA_GRAPH are activate
Prefill latency: 0.019845930859446526 sec
Decode latency: 3.329181903973222 sec
Compilation time: 3.35 seconds
Compilation time: 3.36 seconds
Compilation time: 3.35 seconds
Compilation time: 3.35 seconds
Prefill latency: 0.01948253996670246 sec
Decode latency: 3.3231719583272934 sec
Prefill latency: 0.019468488171696663 sec
Decode latency: 3.3233212772756815 sec
Prefill latency: 0.019534334540367126 sec
Decode latency: 3.3257764652371407 sec
Prefill latency: 0.019465019926428795 sec
Decode latency: 3.3273614067584276 sec
Prefill latency: 0.019447574391961098 sec
Decode latency: 3.3263135347515345 sec
Time for inference 1: 3.35 sec total, 152.98 tokens/sec
Decode latency: 3.33 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 694.66 GB/s
FLOPS achieved: 2.08 TF/s

Prefill latency: 0.019408324733376503 sec
Decode latency: 3.325671238824725 sec
Time for inference 2: 3.35 sec total, 153.01 tokens/sec
Decode latency: 3.33 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 694.80 GB/s
FLOPS achieved: 2.08 TF/s

Prefill latency: 0.019502541050314903 sec
Decode latency: 3.324427204206586 sec
Time for inference 3: 3.34 sec total, 153.07 tokens/sec
Decode latency: 3.32 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 695.07 GB/s
FLOPS achieved: 2.09 TF/s

Prefill latency: 0.019522784277796745 sec
Decode latency: 3.32344701141119 sec
Time for inference 4: 3.34 sec total, 153.11 tokens/sec
Decode latency: 3.32 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 695.26 GB/s
FLOPS achieved: 2.09 TF/s

Prefill latency: 0.019519047811627388 sec
Decode latency: 3.3260210026055574 sec
Time for inference 5: 3.35 sec total, 152.99 tokens/sec
Decode latency: 3.33 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 694.70 GB/s
FLOPS achieved: 2.08 TF/s

Prefill latency: 0.019508812576532364 sec
Decode latency: 3.322782503440976 sec
Time for inference 6: 3.34 sec total, 153.14 tokens/sec
Decode latency: 3.32 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 695.39 GB/s
FLOPS achieved: 2.09 TF/s

Prefill latency: 0.019489243626594543 sec
Decode latency: 3.3232518155127764 sec
Time for inference 7: 3.34 sec total, 153.12 tokens/sec
Decode latency: 3.32 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 695.31 GB/s
FLOPS achieved: 2.09 TF/s

Prefill latency: 0.019431600347161293 sec
Decode latency: 3.3238727375864983 sec
Time for inference 8: 3.34 sec total, 153.10 tokens/sec
Decode latency: 3.32 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 695.20 GB/s
FLOPS achieved: 2.09 TF/s

Prefill latency: 0.01946040242910385 sec
Decode latency: 3.3274198044091463 sec
Time for inference 9: 3.35 sec total, 152.93 tokens/sec
Decode latency: 3.33 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 694.42 GB/s
FLOPS achieved: 2.08 TF/s

Prefill latency: 0.019531141966581345 sec
Decode latency: 3.326009126380086 sec
Time for inference 10: 3.35 sec total, 152.99 tokens/sec
Decode latency: 3.33 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 694.72 GB/s
FLOPS achieved: 2.08 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.3249 sec
Average prefill latency: 0.0195 sec
Average tokens/sec: 153.04
Memory used: 6.80 GB
Done. we are killing the process
[rank0]:[W1114 07:02:30.854032549 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
