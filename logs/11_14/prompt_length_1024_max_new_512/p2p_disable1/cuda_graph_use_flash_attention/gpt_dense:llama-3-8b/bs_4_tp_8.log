W1114 07:07:53.896000 2733886 site-packages/torch/distributed/run.py:793] 
W1114 07:07:53.896000 2733886 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:07:53.896000 2733886 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:07:53.896000 2733886 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.99 seconds
CUDA_GRAPH are activate
Prefill latency: 0.0870239045470953 sec
Decode latency: 4.438175357878208 sec
Compilation time: 4.50 seconds
Compilation time: 4.50 seconds
Compilation time: 4.51 seconds
Compilation time: 4.50 seconds
Compilation time: 4.51 seconds
Compilation time: 4.55 seconds
Compilation time: 4.54 seconds
Compilation time: 4.53 seconds
Prefill latency: 0.049876460805535316 sec
Decode latency: 4.419532455503941 sec
Prefill latency: 0.05330237187445164 sec
Decode latency: 4.416722122579813 sec
Prefill latency: 0.0499812550842762 sec
Decode latency: 4.4191602393984795 sec
Prefill latency: 0.050715742632746696 sec
Decode latency: 4.4204715602099895 sec
Prefill latency: 0.050230544060468674 sec
Decode latency: 4.441332438960671 sec
Time for inference 1: 4.49 sec total, 455.85 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1274.56 GB/s
FLOPS achieved: 3.82 TF/s

Prefill latency: 0.054131943732500076 sec
Decode latency: 4.414721032604575 sec
Time for inference 2: 4.47 sec total, 458.16 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1281.04 GB/s
FLOPS achieved: 3.84 TF/s

Prefill latency: 0.04985405504703522 sec
Decode latency: 4.427035588771105 sec
Time for inference 3: 4.48 sec total, 457.31 tokens/sec
Decode latency: 4.43 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1278.65 GB/s
FLOPS achieved: 3.84 TF/s

Prefill latency: 0.049437617883086205 sec
Decode latency: 4.414211185649037 sec
Time for inference 4: 4.46 sec total, 458.69 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1282.50 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.05033617839217186 sec
Decode latency: 4.418188724666834 sec
Time for inference 5: 4.47 sec total, 458.18 tokens/sec
Decode latency: 4.42 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1281.09 GB/s
FLOPS achieved: 3.84 TF/s

Prefill latency: 0.05058230459690094 sec
Decode latency: 4.437999323010445 sec
Time for inference 6: 4.49 sec total, 456.11 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1275.30 GB/s
FLOPS achieved: 3.83 TF/s

Prefill latency: 0.050156114622950554 sec
Decode latency: 4.430599752813578 sec
Time for inference 7: 4.48 sec total, 456.94 tokens/sec
Decode latency: 4.43 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1277.62 GB/s
FLOPS achieved: 3.83 TF/s

Prefill latency: 0.0543228667229414 sec
Decode latency: 4.4435756746679544 sec
Time for inference 8: 4.50 sec total, 455.20 tokens/sec
Decode latency: 4.44 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1272.76 GB/s
FLOPS achieved: 3.82 TF/s

Prefill latency: 0.05016483552753925 sec
Decode latency: 4.4133470505476 sec
Time for inference 9: 4.46 sec total, 458.71 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1282.57 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.05012981593608856 sec
Decode latency: 4.428474992513657 sec
Time for inference 10: 4.48 sec total, 457.17 tokens/sec
Decode latency: 4.43 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1278.28 GB/s
FLOPS achieved: 3.83 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.4269 sec
Average prefill latency: 0.0509 sec
Average tokens/sec: 457.23
Memory used: 7.46 GB
Done. we are killing the process
[rank0]:[W1114 07:09:24.880818917 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
