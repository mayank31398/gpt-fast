W1114 07:46:56.988000 2758981 site-packages/torch/distributed/run.py:793] 
W1114 07:46:56.988000 2758981 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:46:56.988000 2758981 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:46:56.988000 2758981 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.11 seconds
CUDA_GRAPH are activate
Prefill latency: 0.09632940404117107 sec
Decode latency: 3.1717229802161455 sec
Compilation time: 3.27 seconds
Compilation time: 3.22 secondsCompilation time: 3.23 seconds

Compilation time: 3.23 seconds
Prefill latency: 0.04967952519655228 sec
Decode latency: 3.1651800628751516 sec
Prefill latency: 0.049763273447752 sec
Decode latency: 3.1659460328519344 sec
Prefill latency: 0.0496522206813097 sec
Decode latency: 3.165879938751459 sec
Prefill latency: 0.049756404012441635 sec
Decode latency: 3.166502805426717 sec
Prefill latency: 0.049825021997094154 sec
Decode latency: 3.165477477014065 sec
Time for inference 1: 3.22 sec total, 636.77 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2891.48 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.049701230600476265 sec
Decode latency: 3.1673340778797865 sec
Time for inference 2: 3.22 sec total, 636.41 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2889.87 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.0496913380920887 sec
Decode latency: 3.1649939958006144 sec
Time for inference 3: 3.22 sec total, 636.89 tokens/sec
Decode latency: 3.16 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2892.01 GB/s
FLOPS achieved: 8.68 TF/s

Prefill latency: 0.04971389286220074 sec
Decode latency: 3.1647895853966475 sec
Time for inference 4: 3.22 sec total, 636.93 tokens/sec
Decode latency: 3.16 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2892.20 GB/s
FLOPS achieved: 8.68 TF/s

Prefill latency: 0.04972214624285698 sec
Decode latency: 3.167354293167591 sec
Time for inference 5: 3.22 sec total, 636.43 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2889.94 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.049717824906110764 sec
Decode latency: 3.1663453709334135 sec
Time for inference 6: 3.22 sec total, 636.62 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2890.80 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.04973314702510834 sec
Decode latency: 3.166068024933338 sec
Time for inference 7: 3.22 sec total, 636.69 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2891.13 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.04970148019492626 sec
Decode latency: 3.166805537417531 sec
Time for inference 8: 3.22 sec total, 636.52 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2890.37 GB/s
FLOPS achieved: 8.67 TF/s

Prefill latency: 0.0496574230492115 sec
Decode latency: 3.1651825588196516 sec
Time for inference 9: 3.22 sec total, 636.88 tokens/sec
Decode latency: 3.17 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2891.97 GB/s
FLOPS achieved: 8.68 TF/s

Prefill latency: 0.049687812104821205 sec
Decode latency: 3.1649136543273926 sec
Time for inference 10: 3.22 sec total, 636.84 tokens/sec
Decode latency: 3.16 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 2891.81 GB/s
FLOPS achieved: 8.68 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.1659 sec
Average prefill latency: 0.0497 sec
Average tokens/sec: 636.70
Memory used: 9.11 GB
Done. we are killing the process
[rank0]:[W1114 07:47:58.989720277 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
