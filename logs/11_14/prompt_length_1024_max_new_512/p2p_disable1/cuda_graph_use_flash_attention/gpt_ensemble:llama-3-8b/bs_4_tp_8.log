W1114 07:48:01.480000 2759713 site-packages/torch/distributed/run.py:793] 
W1114 07:48:01.480000 2759713 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:48:01.480000 2759713 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:48:01.480000 2759713 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.30 seconds
CUDA_GRAPH are activate
Prefill latency: 0.04597500525414944 sec
Decode latency: 3.375130794942379 sec
Compilation time: 3.42 seconds
Compilation time: 3.42 seconds
Compilation time: 3.43 seconds
Compilation time: 3.42 seconds
Compilation time: 3.42 seconds
Compilation time: 3.42 seconds
Compilation time: 3.44 seconds
Compilation time: 3.44 seconds
Prefill latency: 0.039772458374500275 sec
Decode latency: 3.3855398446321487 sec
Prefill latency: 0.04301375523209572 sec
Decode latency: 3.379981664940715 sec
Prefill latency: 0.03988637216389179 sec
Decode latency: 3.373292675241828 sec
Prefill latency: 0.04015112482011318 sec
Decode latency: 3.3808240592479706 sec
Prefill latency: 0.04006996750831604 sec
Decode latency: 3.3782963510602713 sec
Time for inference 1: 3.42 sec total, 598.89 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1674.52 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.03958151489496231 sec
Decode latency: 3.3735354226082563 sec
Time for inference 2: 3.41 sec total, 599.82 tokens/sec
Decode latency: 3.37 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1677.13 GB/s
FLOPS achieved: 5.03 TF/s

Prefill latency: 0.03968318551778793 sec
Decode latency: 3.376539805904031 sec
Time for inference 3: 3.42 sec total, 599.30 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1675.66 GB/s
FLOPS achieved: 5.03 TF/s

Prefill latency: 0.0398713443428278 sec
Decode latency: 3.383473463356495 sec
Time for inference 4: 3.42 sec total, 598.11 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1672.33 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.04074465297162533 sec
Decode latency: 3.3831678051501513 sec
Time for inference 5: 3.43 sec total, 597.92 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1671.80 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.039901867508888245 sec
Decode latency: 3.3813692796975374 sec
Time for inference 6: 3.42 sec total, 598.42 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1673.19 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.0400505643337965 sec
Decode latency: 3.376670541241765 sec
Time for inference 7: 3.42 sec total, 599.24 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1675.50 GB/s
FLOPS achieved: 5.03 TF/s

Prefill latency: 0.04022067412734032 sec
Decode latency: 3.3780813310295343 sec
Time for inference 8: 3.42 sec total, 598.96 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1674.71 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.03966799937188625 sec
Decode latency: 3.381200358271599 sec
Time for inference 9: 3.42 sec total, 598.33 tokens/sec
Decode latency: 3.38 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1672.97 GB/s
FLOPS achieved: 5.02 TF/s

Prefill latency: 0.04021367244422436 sec
Decode latency: 3.37087688036263 sec
Time for inference 10: 3.41 sec total, 600.23 tokens/sec
Decode latency: 3.37 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1678.27 GB/s
FLOPS achieved: 5.03 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.3783 sec
Average prefill latency: 0.0400 sec
Average tokens/sec: 598.92
Memory used: 6.39 GB
Done. we are killing the process
[rank0]:[W1114 07:49:14.619474168 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
