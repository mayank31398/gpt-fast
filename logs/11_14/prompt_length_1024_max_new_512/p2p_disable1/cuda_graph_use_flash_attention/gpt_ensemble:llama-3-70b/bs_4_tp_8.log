W1114 06:26:47.183000 2365019 site-packages/torch/distributed/run.py:793] 
W1114 06:26:47.183000 2365019 site-packages/torch/distributed/run.py:793] *****************************************
W1114 06:26:47.183000 2365019 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 06:26:47.183000 2365019 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=1280, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.45 seconds
CUDA_GRAPH are activate
Prefill latency: 0.24368681944906712 sec
Decode latency: 10.493677973747253 sec
Compilation time: 10.71 seconds
Compilation time: 10.76 seconds
Compilation time: 10.74 seconds
Compilation time: 10.76 seconds
Compilation time: 10.74 seconds
Compilation time: 10.74 seconds
Compilation time: 10.76 seconds
Compilation time: 10.71 seconds
Prefill latency: 0.2149706007912755 sec
Decode latency: 10.470473097637296 sec
Prefill latency: 0.2095526112243533 sec
Decode latency: 10.48926345910877 sec
Prefill latency: 0.21236478444188833 sec
Decode latency: 10.46177950501442 sec
Prefill latency: 0.2087733643129468 sec
Decode latency: 10.486284363083541 sec
Prefill latency: 0.20942215342074633 sec
Decode latency: 10.489378821104765 sec
Time for inference 1: 10.70 sec total, 191.40 tokens/sec
Decode latency: 10.49 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3678.11 GB/s
FLOPS achieved: 11.03 TF/s

Prefill latency: 0.20767738949507475 sec
Decode latency: 10.46208592504263 sec
Time for inference 2: 10.67 sec total, 191.92 tokens/sec
Decode latency: 10.46 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3688.11 GB/s
FLOPS achieved: 11.06 TF/s

Prefill latency: 0.21035013254731894 sec
Decode latency: 10.47351635247469 sec
Time for inference 3: 10.69 sec total, 191.67 tokens/sec
Decode latency: 10.47 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3683.21 GB/s
FLOPS achieved: 11.05 TF/s

Prefill latency: 0.210069895721972 sec
Decode latency: 10.496478867717087 sec
Time for inference 4: 10.71 sec total, 191.26 tokens/sec
Decode latency: 10.50 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3675.42 GB/s
FLOPS achieved: 11.03 TF/s

Prefill latency: 0.21076496597379446 sec
Decode latency: 10.483471711166203 sec
Time for inference 5: 10.70 sec total, 191.48 tokens/sec
Decode latency: 10.48 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3679.64 GB/s
FLOPS achieved: 11.04 TF/s

Prefill latency: 0.21080991812050343 sec
Decode latency: 10.477971760556102 sec
Time for inference 6: 10.69 sec total, 191.58 tokens/sec
Decode latency: 10.48 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3681.54 GB/s
FLOPS achieved: 11.04 TF/s

Prefill latency: 0.21131569426506758 sec
Decode latency: 10.501703975722194 sec
Time for inference 7: 10.71 sec total, 191.15 tokens/sec
Decode latency: 10.50 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3673.19 GB/s
FLOPS achieved: 11.02 TF/s

Prefill latency: 0.20837832801043987 sec
Decode latency: 10.467447250150144 sec
Time for inference 8: 10.68 sec total, 191.81 tokens/sec
Decode latency: 10.47 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3685.99 GB/s
FLOPS achieved: 11.06 TF/s

Prefill latency: 0.21080576814711094 sec
Decode latency: 10.495947645045817 sec
Time for inference 9: 10.71 sec total, 191.26 tokens/sec
Decode latency: 10.50 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3675.39 GB/s
FLOPS achieved: 11.03 TF/s

Prefill latency: 0.20994133315980434 sec
Decode latency: 10.465308122336864 sec
Time for inference 10: 10.68 sec total, 191.82 tokens/sec
Decode latency: 10.47 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3686.21 GB/s
FLOPS achieved: 11.06 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 10.4813 sec
Average prefill latency: 0.2100 sec
Average tokens/sec: 191.54
Memory used: 28.55 GB
Done. we are killing the process
[rank0]:[W1114 06:29:45.731174707 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
