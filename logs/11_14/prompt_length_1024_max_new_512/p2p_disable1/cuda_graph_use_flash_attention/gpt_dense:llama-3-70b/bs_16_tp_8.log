W1114 08:31:29.255000 2396739 site-packages/torch/distributed/run.py:793] 
W1114 08:31:29.255000 2396739 site-packages/torch/distributed/run.py:793] *****************************************
W1114 08:31:29.255000 2396739 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 08:31:29.255000 2396739 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=1280, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.29 seconds
CUDA_GRAPH are activate
Prefill latency: 0.9236201178282499 sec
Decode latency: 15.180840047076344 sec
Compilation time: 16.09 seconds
Compilation time: 16.16 seconds
Compilation time: 16.15 seconds
Compilation time: 16.15 seconds
Compilation time: 16.08 seconds
Compilation time: 16.16 secondsCompilation time: 16.16 seconds

Compilation time: 16.11 seconds
Prefill latency: 0.8757121535018086 sec
Decode latency: 15.180524576455355 sec
Prefill latency: 0.8728524893522263 sec
Decode latency: 15.163047703914344 sec
Prefill latency: 0.8749003848060966 sec
Decode latency: 15.147962220944464 sec
Prefill latency: 0.8745391108095646 sec
Decode latency: 15.175656085833907 sec
Prefill latency: 0.8739795992150903 sec
Decode latency: 15.168526452034712 sec
Time for inference 1: 16.04 sec total, 510.59 tokens/sec
Decode latency: 15.17 sec
Prefill latency: 0.87 sec
Bandwidth achieved: 9811.87 GB/s
FLOPS achieved: 29.44 TF/s

Prefill latency: 0.8760483264923096 sec
Decode latency: 15.215270821936429 sec
Time for inference 2: 16.09 sec total, 509.04 tokens/sec
Decode latency: 15.22 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9782.19 GB/s
FLOPS achieved: 29.35 TF/s

Prefill latency: 0.873612355440855 sec
Decode latency: 15.176040868274868 sec
Time for inference 3: 16.05 sec total, 510.36 tokens/sec
Decode latency: 15.18 sec
Prefill latency: 0.87 sec
Bandwidth achieved: 9807.53 GB/s
FLOPS achieved: 29.42 TF/s

Prefill latency: 0.8758792961016297 sec
Decode latency: 15.183067272417247 sec
Time for inference 4: 16.06 sec total, 510.07 tokens/sec
Decode latency: 15.18 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9801.84 GB/s
FLOPS achieved: 29.41 TF/s

Prefill latency: 0.8767416542395949 sec
Decode latency: 15.15528466925025 sec
Time for inference 5: 16.03 sec total, 510.93 tokens/sec
Decode latency: 15.16 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9818.46 GB/s
FLOPS achieved: 29.46 TF/s

Prefill latency: 0.8756228005513549 sec
Decode latency: 15.169320369139314 sec
Time for inference 6: 16.05 sec total, 510.51 tokens/sec
Decode latency: 15.17 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9810.44 GB/s
FLOPS achieved: 29.43 TF/s

Prefill latency: 0.876331003382802 sec
Decode latency: 15.202959356829524 sec
Time for inference 7: 16.08 sec total, 509.42 tokens/sec
Decode latency: 15.20 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9789.42 GB/s
FLOPS achieved: 29.37 TF/s

Prefill latency: 0.87592853885144 sec
Decode latency: 15.1798390801996 sec
Time for inference 8: 16.06 sec total, 510.16 tokens/sec
Decode latency: 15.18 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9803.63 GB/s
FLOPS achieved: 29.41 TF/s

Prefill latency: 0.8749068761244416 sec
Decode latency: 15.200907931663096 sec
Time for inference 9: 16.08 sec total, 509.54 tokens/sec
Decode latency: 15.20 sec
Prefill latency: 0.87 sec
Bandwidth achieved: 9791.65 GB/s
FLOPS achieved: 29.37 TF/s

Prefill latency: 0.8758194670081139 sec
Decode latency: 15.138039258308709 sec
Time for inference 10: 16.02 sec total, 511.50 tokens/sec
Decode latency: 15.14 sec
Prefill latency: 0.88 sec
Bandwidth achieved: 9829.29 GB/s
FLOPS achieved: 29.49 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 15.1789 sec
Average prefill latency: 0.8755 sec
Average tokens/sec: 510.21
Memory used: 71.38 GB
Done. we are killing the process
[rank0]:[W1114 08:36:02.237603811 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
