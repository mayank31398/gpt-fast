W1114 06:42:37.343000 2371875 site-packages/torch/distributed/run.py:793] 
W1114 06:42:37.343000 2371875 site-packages/torch/distributed/run.py:793] *****************************************
W1114 06:42:37.343000 2371875 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 06:42:37.343000 2371875 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=1280, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.50 seconds
CUDA_GRAPH are activate
Prefill latency: 0.04696995299309492 sec
Compilation time: 7.28 seconds
Compilation time: 7.25 seconds
Compilation time: 7.12 seconds
Decode latency: 7.183000152930617 sec
Compilation time: 7.23 seconds
Compilation time: 7.25 seconds
Compilation time: 7.29 seconds
Prefill latency: 0.04668398108333349 sec
Compilation time: 7.28 seconds
Compilation time: 7.28 seconds
Decode latency: 7.232561342418194 sec
Prefill latency: 0.04664133209735155 sec
Decode latency: 6.967399690300226 sec
Prefill latency: 0.046709854155778885 sec
Decode latency: 6.850190077908337 sec
Prefill latency: 0.04671294800937176 sec
Decode latency: 7.2308995155617595 sec
Prefill latency: 0.0465497737750411 sec
Decode latency: 7.232781549915671 sec
Time for inference 1: 7.28 sec total, 70.32 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.42 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.04673100542277098 sec
Decode latency: 6.770607313141227 sec
Time for inference 2: 6.82 sec total, 75.09 tokens/sec
Decode latency: 6.77 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1443.01 GB/s
FLOPS achieved: 4.33 TF/s

Prefill latency: 0.046571905724704266 sec
Decode latency: 6.74745577108115 sec
Time for inference 3: 6.80 sec total, 75.35 tokens/sec
Decode latency: 6.75 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1447.95 GB/s
FLOPS achieved: 4.34 TF/s

Prefill latency: 0.04678052756935358 sec
Decode latency: 7.2338628442958 sec
Time for inference 4: 7.28 sec total, 70.31 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.20 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.04670304246246815 sec
Decode latency: 7.234348018653691 sec
Time for inference 5: 7.28 sec total, 70.31 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.13 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.04656774830073118 sec
Decode latency: 7.232574963010848 sec
Time for inference 6: 7.28 sec total, 70.33 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.47 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.04683860205113888 sec
Decode latency: 7.232641818933189 sec
Time for inference 7: 7.28 sec total, 70.33 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.42 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.04653293173760176 sec
Decode latency: 7.2336319256573915 sec
Time for inference 8: 7.28 sec total, 70.32 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.30 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.046557797119021416 sec
Decode latency: 7.2330427365377545 sec
Time for inference 9: 7.28 sec total, 70.32 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.40 GB/s
FLOPS achieved: 4.05 TF/s

Prefill latency: 0.046670625917613506 sec
Decode latency: 7.230171695351601 sec
Time for inference 10: 7.28 sec total, 70.35 tokens/sec
Decode latency: 7.23 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1351.89 GB/s
FLOPS achieved: 4.06 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 7.1381 sec
Average prefill latency: 0.0467 sec
Average tokens/sec: 71.30
Memory used: 21.89 GB
[rank0]:[W1114 06:44:34.756041954 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank2]:[W1114 06:44:34.190367137 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 2]  using GPU 2 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank5]:[W1114 06:44:34.201128527 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 5]  using GPU 5 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank7]:[W1114 06:44:34.208633653 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 7]  using GPU 7 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank3]:[W1114 06:44:35.512487404 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 3]  using GPU 3 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank1]:[W1114 06:44:35.019478924 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 1]  using GPU 1 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank6]:[W1114 06:44:35.442236881 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 6]  using GPU 6 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank4]:[W1114 06:44:35.484582272 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 4]  using GPU 4 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1114 06:44:42.789430522 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
