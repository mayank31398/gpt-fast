flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.30 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 07:25:36.826157135 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.13163268007338047 sec
Decode latency: 4.653141923248768 sec
Compilation time: 4.79 seconds
Prefill latency: 0.132738396525383 sec
Decode latency: 4.745422659441829 sec
Prefill latency: 0.13299006409943104 sec
Decode latency: 4.745638208463788 sec
Prefill latency: 0.12989561073482037 sec
Decode latency: 4.72886012122035 sec
Prefill latency: 0.13264975883066654 sec
Decode latency: 4.745170855894685 sec
Prefill latency: 0.1307360865175724 sec
Decode latency: 4.746007077395916 sec
Time for inference 1: 4.88 sec total, 419.87 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6302.21 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.13037590123713017 sec
Decode latency: 4.744556030258536 sec
Time for inference 2: 4.88 sec total, 420.03 tokens/sec
Decode latency: 4.74 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6304.66 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.13131087832152843 sec
Decode latency: 4.737006511539221 sec
Time for inference 3: 4.87 sec total, 420.60 tokens/sec
Decode latency: 4.74 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6313.12 GB/s
FLOPS achieved: 18.94 TF/s

Prefill latency: 0.13116437569260597 sec
Decode latency: 4.747344268485904 sec
Time for inference 4: 4.88 sec total, 419.73 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6300.03 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.13165625371038914 sec
Decode latency: 4.74498382396996 sec
Time for inference 5: 4.88 sec total, 419.88 tokens/sec
Decode latency: 4.74 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6302.38 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.1311828251928091 sec
Decode latency: 4.662461545318365 sec
Time for inference 6: 4.79 sec total, 427.15 tokens/sec
Decode latency: 4.66 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6411.45 GB/s
FLOPS achieved: 19.23 TF/s

Prefill latency: 0.13182982802391052 sec
Decode latency: 4.715602504089475 sec
Time for inference 7: 4.85 sec total, 422.41 tokens/sec
Decode latency: 4.72 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6340.34 GB/s
FLOPS achieved: 19.02 TF/s

Prefill latency: 0.13099035993218422 sec
Decode latency: 4.746009279042482 sec
Time for inference 8: 4.88 sec total, 419.86 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6301.97 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.1316638272255659 sec
Decode latency: 4.7460515554994345 sec
Time for inference 9: 4.88 sec total, 419.79 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6300.95 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.13302933797240257 sec
Decode latency: 4.74671339802444 sec
Time for inference 10: 4.88 sec total, 419.62 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6298.40 GB/s
FLOPS achieved: 18.90 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.7337 sec
Average prefill latency: 0.1314 sec
Average tokens/sec: 420.89
Memory used: 21.18 GB
Done. we are killing the process
[rank0]:[W1114 07:26:49.972234654 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
