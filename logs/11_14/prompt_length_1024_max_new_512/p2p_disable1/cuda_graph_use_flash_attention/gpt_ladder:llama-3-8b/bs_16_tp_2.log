W1114 07:31:47.547000 2749125 site-packages/torch/distributed/run.py:793] 
W1114 07:31:47.547000 2749125 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:31:47.547000 2749125 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:31:47.547000 2749125 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=3072, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.54 seconds
CUDA_GRAPH are activate
Prefill latency: 0.7000145055353642 sec
Decode latency: 3.9242950845509768 sec
Compilation time: 4.63 seconds
Compilation time: 4.62 seconds
Prefill latency: 0.6662776153534651 sec
Decode latency: 3.9257309306412935 sec
Prefill latency: 0.6661314163357019 sec
Decode latency: 3.9259073846042156 sec
Prefill latency: 0.6617273222655058 sec
Decode latency: 3.9247585274279118 sec
Prefill latency: 0.660238467156887 sec
Decode latency: 3.923216950148344 sec
Prefill latency: 0.6652153935283422 sec
Decode latency: 3.925431217998266 sec
Time for inference 1: 4.59 sec total, 1784.02 tokens/sec
Decode latency: 3.93 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14326.60 GB/s
FLOPS achieved: 42.98 TF/s

Prefill latency: 0.6646666452288628 sec
Decode latency: 3.922952566295862 sec
Time for inference 2: 4.59 sec total, 1785.22 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14336.28 GB/s
FLOPS achieved: 43.01 TF/s

Prefill latency: 0.6653341483324766 sec
Decode latency: 3.924666317179799 sec
Time for inference 3: 4.59 sec total, 1784.29 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14328.75 GB/s
FLOPS achieved: 42.99 TF/s

Prefill latency: 0.6592732947319746 sec
Decode latency: 3.9244781713932753 sec
Time for inference 4: 4.58 sec total, 1786.74 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14348.46 GB/s
FLOPS achieved: 43.05 TF/s

Prefill latency: 0.6642795391380787 sec
Decode latency: 3.9259872883558273 sec
Time for inference 5: 4.59 sec total, 1784.21 tokens/sec
Decode latency: 3.93 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14328.16 GB/s
FLOPS achieved: 42.98 TF/s

Prefill latency: 0.6616629902273417 sec
Decode latency: 3.925112698227167 sec
Time for inference 6: 4.59 sec total, 1785.60 tokens/sec
Decode latency: 3.93 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14339.32 GB/s
FLOPS achieved: 43.02 TF/s

Prefill latency: 0.6645668242126703 sec
Decode latency: 3.9248215667903423 sec
Time for inference 7: 4.59 sec total, 1784.57 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14331.07 GB/s
FLOPS achieved: 42.99 TF/s

Prefill latency: 0.6662424337118864 sec
Decode latency: 3.9253516513854265 sec
Time for inference 8: 4.59 sec total, 1783.65 tokens/sec
Decode latency: 3.93 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14323.66 GB/s
FLOPS achieved: 42.97 TF/s

Prefill latency: 0.6653599366545677 sec
Decode latency: 3.9244690276682377 sec
Time for inference 9: 4.59 sec total, 1784.33 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14329.13 GB/s
FLOPS achieved: 42.99 TF/s

Prefill latency: 0.6638565640896559 sec
Decode latency: 3.924255520105362 sec
Time for inference 10: 4.59 sec total, 1785.05 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.66 sec
Bandwidth achieved: 14334.93 GB/s
FLOPS achieved: 43.00 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.9248 sec
Average prefill latency: 0.6640 sec
Average tokens/sec: 1784.77
Memory used: 31.18 GB
Done. we are killing the process
[rank0]:[W1114 07:33:07.626716808 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
