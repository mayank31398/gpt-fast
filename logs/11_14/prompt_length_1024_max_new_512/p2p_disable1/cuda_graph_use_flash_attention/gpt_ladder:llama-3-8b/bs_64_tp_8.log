W1114 07:37:52.965000 2752583 site-packages/torch/distributed/run.py:793] 
W1114 07:37:52.965000 2752583 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:37:52.965000 2752583 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:37:52.965000 2752583 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.13 seconds
CUDA_GRAPH are activate
Prefill latency: 0.6073259990662336 sec
Decode latency: 4.4959723968058825 sec
Compilation time: 5.11 seconds
Compilation time: 5.11 secondsCompilation time: 4.99 seconds

Compilation time: 4.99 seconds
Compilation time: 5.16 seconds
Compilation time: 5.00 seconds
Compilation time: 5.00 seconds
Compilation time: 5.10 seconds
Prefill latency: 0.4948637019842863 sec
Decode latency: 4.413375250995159 sec
Prefill latency: 0.49130326695740223 sec
Decode latency: 4.317954236641526 sec
Prefill latency: 0.49489500373601913 sec
Decode latency: 4.336826387792826 sec
Prefill latency: 0.49263209104537964 sec
Decode latency: 4.3631320502609015 sec
Prefill latency: 0.49202206917107105 sec
Decode latency: 4.3496371656656265 sec
Time for inference 1: 4.84 sec total, 6766.17 tokens/sec
Decode latency: 4.35 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18918.44 GB/s
FLOPS achieved: 56.76 TF/s

Prefill latency: 0.49371054023504257 sec
Decode latency: 4.344396900385618 sec
Time for inference 2: 4.84 sec total, 6771.27 tokens/sec
Decode latency: 4.34 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18932.71 GB/s
FLOPS achieved: 56.80 TF/s

Prefill latency: 0.49360407143831253 sec
Decode latency: 4.333978952839971 sec
Time for inference 3: 4.83 sec total, 6786.10 tokens/sec
Decode latency: 4.33 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18974.19 GB/s
FLOPS achieved: 56.92 TF/s

Prefill latency: 0.4945471007376909 sec
Decode latency: 4.340682048350573 sec
Time for inference 4: 4.84 sec total, 6775.30 tokens/sec
Decode latency: 4.34 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18943.98 GB/s
FLOPS achieved: 56.83 TF/s

Prefill latency: 0.4940803833305836 sec
Decode latency: 4.332267597317696 sec
Time for inference 5: 4.83 sec total, 6787.66 tokens/sec
Decode latency: 4.33 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18978.54 GB/s
FLOPS achieved: 56.94 TF/s

Prefill latency: 0.4938249085098505 sec
Decode latency: 4.350544020533562 sec
Time for inference 6: 4.85 sec total, 6762.46 tokens/sec
Decode latency: 4.35 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18908.09 GB/s
FLOPS achieved: 56.72 TF/s

Prefill latency: 0.4953153021633625 sec
Decode latency: 4.329518927261233 sec
Time for inference 7: 4.83 sec total, 6789.84 tokens/sec
Decode latency: 4.33 sec
Prefill latency: 0.50 sec
Bandwidth achieved: 18984.65 GB/s
FLOPS achieved: 56.95 TF/s

Prefill latency: 0.49383474700152874 sec
Decode latency: 4.373290931805968 sec
Time for inference 8: 4.87 sec total, 6730.88 tokens/sec
Decode latency: 4.37 sec
Prefill latency: 0.49 sec
Bandwidth achieved: 18819.79 GB/s
FLOPS achieved: 56.46 TF/s

Prefill latency: 0.4950352516025305 sec
Decode latency: 4.407103311270475 sec
Time for inference 9: 4.90 sec total, 6682.75 tokens/sec
Decode latency: 4.41 sec
Prefill latency: 0.50 sec
Bandwidth achieved: 18685.21 GB/s
FLOPS achieved: 56.06 TF/s

Prefill latency: 0.4954616781324148 sec
Decode latency: 4.415329024195671 sec
Time for inference 10: 4.91 sec total, 6670.60 tokens/sec
Decode latency: 4.42 sec
Prefill latency: 0.50 sec
Bandwidth achieved: 18651.23 GB/s
FLOPS achieved: 55.95 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.3577 sec
Average prefill latency: 0.4941 sec
Average tokens/sec: 6752.30
Memory used: 65.97 GB
Done. we are killing the process
[rank0]:[W1114 07:39:41.709448668 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
