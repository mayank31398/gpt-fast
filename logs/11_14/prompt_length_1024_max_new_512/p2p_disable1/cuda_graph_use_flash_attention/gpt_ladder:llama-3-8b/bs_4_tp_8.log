W1114 07:28:58.606000 2747520 site-packages/torch/distributed/run.py:793] 
W1114 07:28:58.606000 2747520 site-packages/torch/distributed/run.py:793] *****************************************
W1114 07:28:58.606000 2747520 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 07:28:58.606000 2747520 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.42 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 07:29:18.698859074 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
[rank3]:[W1114 07:29:18.141503726 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.08101409301161766 sec
Decode latency: 2.9676930997520685 sec
Compilation time: 3.05 seconds
Compilation time: 3.04 seconds
Compilation time: 3.01 seconds
Compilation time: 3.06 seconds
Compilation time: 3.06 seconds
Compilation time: 3.06 seconds
Compilation time: 3.05 seconds
Compilation time: 3.05 seconds
Prefill latency: 0.03776487521827221 sec
Decode latency: 2.938298724591732 sec
Prefill latency: 0.037881629541516304 sec
Decode latency: 2.9429345466196537 sec
Prefill latency: 0.04147869534790516 sec
Decode latency: 2.951401200145483 sec
Prefill latency: 0.03763389401137829 sec
Decode latency: 2.9415932167321444 sec
Prefill latency: 0.047545239329338074 sec
Decode latency: 2.932880450040102 sec
Time for inference 1: 2.98 sec total, 686.89 tokens/sec
Decode latency: 2.93 sec
Prefill latency: 0.05 sec
Bandwidth achieved: 1920.58 GB/s
FLOPS achieved: 5.76 TF/s

Prefill latency: 0.03796062432229519 sec
Decode latency: 2.9390294197946787 sec
Time for inference 2: 2.98 sec total, 687.66 tokens/sec
Decode latency: 2.94 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1922.71 GB/s
FLOPS achieved: 5.77 TF/s

Prefill latency: 0.03974231146275997 sec
Decode latency: 2.964156139642 sec
Time for inference 3: 3.00 sec total, 681.53 tokens/sec
Decode latency: 2.96 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1905.59 GB/s
FLOPS achieved: 5.72 TF/s

Prefill latency: 0.0382121279835701 sec
Decode latency: 2.9307754393666983 sec
Time for inference 4: 2.97 sec total, 689.54 tokens/sec
Decode latency: 2.93 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1927.98 GB/s
FLOPS achieved: 5.78 TF/s

Prefill latency: 0.039233068004250526 sec
Decode latency: 2.9406986627727747 sec
Time for inference 5: 2.98 sec total, 686.96 tokens/sec
Decode latency: 2.94 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1920.78 GB/s
FLOPS achieved: 5.76 TF/s

Prefill latency: 0.042719459161162376 sec
Decode latency: 2.9630322009325027 sec
Time for inference 6: 3.01 sec total, 681.09 tokens/sec
Decode latency: 2.96 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1904.34 GB/s
FLOPS achieved: 5.71 TF/s

Prefill latency: 0.03999522514641285 sec
Decode latency: 2.9486557077616453 sec
Time for inference 7: 2.99 sec total, 685.01 tokens/sec
Decode latency: 2.95 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1915.32 GB/s
FLOPS achieved: 5.75 TF/s

Prefill latency: 0.03808789514005184 sec
Decode latency: 2.937110658735037 sec
Time for inference 8: 2.98 sec total, 688.10 tokens/sec
Decode latency: 2.94 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1923.96 GB/s
FLOPS achieved: 5.77 TF/s

Prefill latency: 0.03799164481461048 sec
Decode latency: 2.975628737360239 sec
Time for inference 9: 3.01 sec total, 679.31 tokens/sec
Decode latency: 2.98 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1899.37 GB/s
FLOPS achieved: 5.70 TF/s

Prefill latency: 0.03795697167515755 sec
Decode latency: 2.94597664475441 sec
Time for inference 10: 2.99 sec total, 686.09 tokens/sec
Decode latency: 2.95 sec
Prefill latency: 0.04 sec
Bandwidth achieved: 1918.34 GB/s
FLOPS achieved: 5.76 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 2.9478 sec
Average prefill latency: 0.0399 sec
Average tokens/sec: 685.22
Memory used: 7.46 GB
Done. we are killing the process
[rank0]:[W1114 07:30:03.470512996 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
