flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.98 seconds
CUDA_GRAPH are activate
Prefill latency: 0.5253599304705858 sec
Decode latency: 5.197520796209574 sec
Compilation time: 5.72 seconds
Prefill latency: 0.5249548330903053 sec
Decode latency: 5.19729975797236 sec
Prefill latency: 0.5243909433484077 sec
Decode latency: 5.19602894410491 sec
Prefill latency: 0.5272749550640583 sec
Decode latency: 5.196049688383937 sec
Prefill latency: 0.5249248575419188 sec
Decode latency: 5.015469208359718 sec
Prefill latency: 0.5277718119323254 sec
Decode latency: 5.1738213039934635 sec
Time for inference 1: 5.70 sec total, 1436.59 tokens/sec
Decode latency: 5.17 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21562.93 GB/s
FLOPS achieved: 64.69 TF/s

Prefill latency: 0.526677256450057 sec
Decode latency: 5.196680983528495 sec
Time for inference 2: 5.72 sec total, 1431.12 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21480.89 GB/s
FLOPS achieved: 64.44 TF/s

Prefill latency: 0.5252329390496016 sec
Decode latency: 5.176471475511789 sec
Time for inference 3: 5.70 sec total, 1436.57 tokens/sec
Decode latency: 5.18 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21562.67 GB/s
FLOPS achieved: 64.69 TF/s

Prefill latency: 0.5265640113502741 sec
Decode latency: 5.196400428190827 sec
Time for inference 4: 5.72 sec total, 1431.22 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21482.37 GB/s
FLOPS achieved: 64.45 TF/s

Prefill latency: 0.5265789590775967 sec
Decode latency: 5.195947729051113 sec
Time for inference 5: 5.72 sec total, 1431.32 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21483.86 GB/s
FLOPS achieved: 64.45 TF/s

Prefill latency: 0.526005806401372 sec
Decode latency: 5.197644406929612 sec
Time for inference 6: 5.72 sec total, 1431.06 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21479.92 GB/s
FLOPS achieved: 64.44 TF/s

Prefill latency: 0.526659868657589 sec
Decode latency: 5.196255899965763 sec
Time for inference 7: 5.72 sec total, 1431.23 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21482.51 GB/s
FLOPS achieved: 64.45 TF/s

Prefill latency: 0.5265699364244938 sec
Decode latency: 5.056728160008788 sec
Time for inference 8: 5.58 sec total, 1467.02 tokens/sec
Decode latency: 5.06 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 22019.80 GB/s
FLOPS achieved: 66.06 TF/s

Prefill latency: 0.526623310521245 sec
Decode latency: 5.196739351376891 sec
Time for inference 9: 5.72 sec total, 1431.10 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21480.56 GB/s
FLOPS achieved: 64.44 TF/s

Prefill latency: 0.5249236822128296 sec
Decode latency: 5.198455899953842 sec
Time for inference 10: 5.72 sec total, 1431.10 tokens/sec
Decode latency: 5.20 sec
Prefill latency: 0.52 sec
Bandwidth achieved: 21480.61 GB/s
FLOPS achieved: 64.44 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 5.1785 sec
Average prefill latency: 0.5264 sec
Average tokens/sec: 1435.83
Memory used: 27.08 GB
[rank0]:[W1114 08:13:31.897992697 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1114 08:13:32.828543328 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
