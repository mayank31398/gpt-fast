W1114 03:35:18.305000 2304248 site-packages/torch/distributed/run.py:793] 
W1114 03:35:18.305000 2304248 site-packages/torch/distributed/run.py:793] *****************************************
W1114 03:35:18.305000 2304248 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 03:35:18.305000 2304248 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=1280, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.44 seconds
CUDA_GRAPH are activate
Prefill latency: 0.2439503176137805 sec
Decode latency: 9.850274166092277 sec
Compilation time: 10.09 seconds
Compilation time: 10.07 seconds
Compilation time: 10.08 seconds
Compilation time: 10.07 seconds
Compilation time: 10.09 seconds
Compilation time: 10.07 secondsCompilation time: 10.07 seconds

Compilation time: 10.10 seconds
Prefill latency: 0.2145784953609109 sec
Decode latency: 9.848828048445284 sec
Prefill latency: 0.21521325316280127 sec
Decode latency: 9.848711855709553 sec
Prefill latency: 0.21526003628969193 sec
Decode latency: 9.848205949179828 sec
Prefill latency: 0.215295547619462 sec
Decode latency: 9.848516610451043 sec
Prefill latency: 0.21563353389501572 sec
Decode latency: 9.848074305802584 sec
Time for inference 1: 10.07 sec total, 203.47 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3910.12 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21503854729235172 sec
Decode latency: 9.849804981611669 sec
Time for inference 2: 10.07 sec total, 203.45 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.70 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21486186888068914 sec
Decode latency: 9.847919116728008 sec
Time for inference 3: 10.06 sec total, 203.49 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.21 sec
Bandwidth achieved: 3910.50 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21556170005351305 sec
Decode latency: 9.84824737533927 sec
Time for inference 4: 10.07 sec total, 203.47 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3910.12 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21537100709974766 sec
Decode latency: 9.849482752382755 sec
Time for inference 5: 10.07 sec total, 203.45 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.68 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21504549030214548 sec
Decode latency: 9.848463390022516 sec
Time for inference 6: 10.06 sec total, 203.48 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3910.20 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21682869270443916 sec
Decode latency: 9.849567846395075 sec
Time for inference 7: 10.07 sec total, 203.42 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.08 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.21557021234184504 sec
Decode latency: 9.849950990639627 sec
Time for inference 8: 10.07 sec total, 203.44 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.47 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.2156043080613017 sec
Decode latency: 9.849273538216949 sec
Time for inference 9: 10.07 sec total, 203.45 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.69 GB/s
FLOPS achieved: 11.73 TF/s

Prefill latency: 0.2165572103112936 sec
Decode latency: 9.849088662303984 sec
Time for inference 10: 10.07 sec total, 203.44 tokens/sec
Decode latency: 9.85 sec
Prefill latency: 0.22 sec
Bandwidth achieved: 3909.37 GB/s
FLOPS achieved: 11.73 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 9.8490 sec
Average prefill latency: 0.2156 sec
Average tokens/sec: 203.46
Memory used: 33.92 GB
Done. we are killing the process
[rank0]:[W1114 03:38:06.493592618 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
