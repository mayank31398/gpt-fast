W1114 02:00:57.543000 2238453 site-packages/torch/distributed/run.py:793] 
W1114 02:00:57.543000 2238453 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:00:57.543000 2238453 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:00:57.543000 2238453 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=3072, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.97 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 02:01:08.277262635 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.024123257026076317 sec
Decode latency: 3.6498792488127947 sec
Compilation time: 3.77 seconds
Compilation time: 3.68 seconds
Prefill latency: 0.02352561056613922 sec
Decode latency: 3.647132806479931 sec
Prefill latency: 0.02351970784366131 sec
Decode latency: 3.6446295380592346 sec
Prefill latency: 0.023508116602897644 sec
Decode latency: 3.6481678523123264 sec
Prefill latency: 0.02344115450978279 sec
Decode latency: 3.648367838934064 sec
Prefill latency: 0.02345230244100094 sec
Decode latency: 3.6804868299514055 sec
Time for inference 1: 3.71 sec total, 138.19 tokens/sec
Decode latency: 3.68 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1109.71 GB/s
FLOPS achieved: 3.33 TF/s

Prefill latency: 0.023438677191734314 sec
Decode latency: 3.645816182717681 sec
Time for inference 2: 3.67 sec total, 139.49 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1120.19 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.023508284240961075 sec
Decode latency: 3.645538803189993 sec
Time for inference 3: 3.67 sec total, 139.51 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1120.32 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.02340591512620449 sec
Decode latency: 3.6470716446638107 sec
Time for inference 4: 3.67 sec total, 139.45 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1119.88 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.023500517010688782 sec
Decode latency: 3.6438251603394747 sec
Time for inference 5: 3.67 sec total, 139.58 tokens/sec
Decode latency: 3.64 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1120.88 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.023455921560525894 sec
Decode latency: 3.6464456878602505 sec
Time for inference 6: 3.67 sec total, 139.48 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1120.11 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.023402217775583267 sec
Decode latency: 3.6469618398696184 sec
Time for inference 7: 3.67 sec total, 139.46 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1119.94 GB/s
FLOPS achieved: 3.36 TF/s

Prefill latency: 0.02347276173532009 sec
Decode latency: 3.6795549634844065 sec
Time for inference 8: 3.70 sec total, 138.22 tokens/sec
Decode latency: 3.68 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1109.99 GB/s
FLOPS achieved: 3.33 TF/s

Prefill latency: 0.023480476811528206 sec
Decode latency: 3.678104631602764 sec
Time for inference 9: 3.70 sec total, 138.27 tokens/sec
Decode latency: 3.68 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1110.42 GB/s
FLOPS achieved: 3.33 TF/s

Prefill latency: 0.02347116731107235 sec
Decode latency: 3.645631989464164 sec
Time for inference 10: 3.67 sec total, 139.50 tokens/sec
Decode latency: 3.65 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 1120.25 GB/s
FLOPS achieved: 3.36 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.6559 sec
Average prefill latency: 0.0235 sec
Average tokens/sec: 139.12
Memory used: 10.59 GB
Done. we are killing the process
[rank0]:[W1114 02:02:04.991216301 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
