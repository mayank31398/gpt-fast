W1114 02:15:46.121000 2301613 site-packages/torch/distributed/run.py:793] 
W1114 02:15:46.121000 2301613 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:15:46.121000 2301613 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:15:46.121000 2301613 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.05 seconds
CUDA_GRAPH are activate
Prefill latency: 0.7830031141638756 sec
Decode latency: 4.221317568793893 sec
Compilation time: 5.01 seconds
Compilation time: 5.00 seconds
Compilation time: 5.00 seconds
Compilation time: 5.01 seconds
Prefill latency: 0.7775065191090107 sec
Decode latency: 4.221280921250582 sec
Prefill latency: 0.7781121712177992 sec
Decode latency: 4.2206141371279955 sec
Prefill latency: 0.7776326294988394 sec
Decode latency: 4.221433535218239 sec
Prefill latency: 0.7798178102821112 sec
Decode latency: 4.220094716176391 sec
Prefill latency: 0.777751162648201 sec
Decode latency: 4.221067447215319 sec
Time for inference 1: 5.00 sec total, 6553.23 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29757.36 GB/s
FLOPS achieved: 89.27 TF/s

Prefill latency: 0.7804833371192217 sec
Decode latency: 4.219881400465965 sec
Time for inference 2: 5.00 sec total, 6551.71 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29750.43 GB/s
FLOPS achieved: 89.25 TF/s

Prefill latency: 0.7784248031675816 sec
Decode latency: 4.220239218324423 sec
Time for inference 3: 5.00 sec total, 6553.94 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29760.57 GB/s
FLOPS achieved: 89.28 TF/s

Prefill latency: 0.7777641471475363 sec
Decode latency: 4.221794912591577 sec
Time for inference 4: 5.00 sec total, 6552.74 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29755.14 GB/s
FLOPS achieved: 89.27 TF/s

Prefill latency: 0.7795953210443258 sec
Decode latency: 4.221170803532004 sec
Time for inference 5: 5.00 sec total, 6551.05 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29747.42 GB/s
FLOPS achieved: 89.24 TF/s

Prefill latency: 0.776674622669816 sec
Decode latency: 4.221161685883999 sec
Time for inference 6: 5.00 sec total, 6554.95 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29765.15 GB/s
FLOPS achieved: 89.30 TF/s

Prefill latency: 0.7788669131696224 sec
Decode latency: 4.219761876389384 sec
Time for inference 7: 5.00 sec total, 6553.95 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29760.63 GB/s
FLOPS achieved: 89.28 TF/s

Prefill latency: 0.776122560724616 sec
Decode latency: 4.221124574542046 sec
Time for inference 8: 5.00 sec total, 6555.79 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29768.97 GB/s
FLOPS achieved: 89.31 TF/s

Prefill latency: 0.7796139791607857 sec
Decode latency: 4.218612991273403 sec
Time for inference 9: 5.00 sec total, 6554.59 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29763.52 GB/s
FLOPS achieved: 89.29 TF/s

Prefill latency: 0.7782785575836897 sec
Decode latency: 4.220473205670714 sec
Time for inference 10: 5.00 sec total, 6554.02 tokens/sec
Decode latency: 4.22 sec
Prefill latency: 0.78 sec
Bandwidth achieved: 29760.93 GB/s
FLOPS achieved: 89.28 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.2205 sec
Average prefill latency: 0.7784 sec
Average tokens/sec: 6553.60
Memory used: 77.48 GB
Done. we are killing the process
[rank0]:[W1114 02:17:18.348464438 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
