W1114 02:02:07.630000 2241877 site-packages/torch/distributed/run.py:793] 
W1114 02:02:07.630000 2241877 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:02:07.630000 2241877 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:02:07.630000 2241877 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.84 seconds
CUDA_GRAPH are activate
Prefill latency: 0.01917162723839283 sec
Decode latency: 2.9700215347111225 sec
Compilation time: 3.00 seconds
Compilation time: 3.02 seconds
Compilation time: 3.05 seconds
Compilation time: 2.99 seconds
Prefill latency: 0.018654312938451767 sec
Decode latency: 2.9680000972002745 sec
Prefill latency: 0.018657341599464417 sec
Decode latency: 2.966225789859891 sec
Prefill latency: 0.018619390204548836 sec
Decode latency: 2.966584635898471 sec
Prefill latency: 0.019161762669682503 sec
Decode latency: 2.9672660939395428 sec
Prefill latency: 0.018721148371696472 sec
Decode latency: 2.9677092134952545 sec
Time for inference 1: 2.99 sec total, 171.39 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 778.24 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.01874268800020218 sec
Decode latency: 2.966297958046198 sec
Time for inference 2: 2.99 sec total, 171.46 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 778.56 GB/s
FLOPS achieved: 2.34 TF/s

Prefill latency: 0.01864882931113243 sec
Decode latency: 2.9684870839118958 sec
Time for inference 3: 2.99 sec total, 171.33 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 778.01 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.01863439939916134 sec
Decode latency: 2.9687686190009117 sec
Time for inference 4: 2.99 sec total, 171.32 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.93 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.018669456243515015 sec
Decode latency: 2.969740776345134 sec
Time for inference 5: 2.99 sec total, 171.26 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.67 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.018622860312461853 sec
Decode latency: 2.9688756428658962 sec
Time for inference 6: 2.99 sec total, 171.30 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.87 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.018680671229958534 sec
Decode latency: 2.9694508519023657 sec
Time for inference 7: 2.99 sec total, 171.28 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.74 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.018626660108566284 sec
Decode latency: 2.96870538033545 sec
Time for inference 8: 2.99 sec total, 171.32 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.95 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.01893320307135582 sec
Decode latency: 2.9686955846846104 sec
Time for inference 9: 2.99 sec total, 171.31 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 777.89 GB/s
FLOPS achieved: 2.33 TF/s

Prefill latency: 0.018638188019394875 sec
Decode latency: 2.96774541400373 sec
Time for inference 10: 2.99 sec total, 171.39 tokens/sec
Decode latency: 2.97 sec
Prefill latency: 0.02 sec
Bandwidth achieved: 778.26 GB/s
FLOPS achieved: 2.33 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 2.9684 sec
Average prefill latency: 0.0187 sec
Average tokens/sec: 171.34
Memory used: 6.80 GB
Done. we are killing the process
[rank0]:[W1114 02:03:08.928759528 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
