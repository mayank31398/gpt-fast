flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.96 seconds
CUDA_GRAPH are activate
Prefill latency: 0.5248375721275806 sec
Decode latency: 5.248455272987485 sec
Compilation time: 5.77 seconds
Prefill latency: 0.5262502804398537 sec
Decode latency: 5.271331075578928 sec
Prefill latency: 0.5279942713677883 sec
Decode latency: 5.27190106920898 sec
Prefill latency: 0.5259044300764799 sec
Decode latency: 5.270775817334652 sec
Prefill latency: 0.5275576841086149 sec
Decode latency: 5.2702207919210196 sec
Prefill latency: 0.527615187689662 sec
Decode latency: 5.270086720585823 sec
Time for inference 1: 5.80 sec total, 1412.72 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21204.74 GB/s
FLOPS achieved: 63.61 TF/s

Prefill latency: 0.5281085781753063 sec
Decode latency: 5.146079933270812 sec
Time for inference 2: 5.68 sec total, 1443.47 tokens/sec
Decode latency: 5.15 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21666.21 GB/s
FLOPS achieved: 65.00 TF/s

Prefill latency: 0.5273541994392872 sec
Decode latency: 5.269979054108262 sec
Time for inference 3: 5.80 sec total, 1412.82 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21206.14 GB/s
FLOPS achieved: 63.62 TF/s

Prefill latency: 0.5267255250364542 sec
Decode latency: 5.270259823650122 sec
Time for inference 4: 5.80 sec total, 1412.90 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21207.44 GB/s
FLOPS achieved: 63.62 TF/s

Prefill latency: 0.5267325583845377 sec
Decode latency: 5.251146392896771 sec
Time for inference 5: 5.78 sec total, 1417.58 tokens/sec
Decode latency: 5.25 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21277.69 GB/s
FLOPS achieved: 63.83 TF/s

Prefill latency: 0.5266875922679901 sec
Decode latency: 5.271963307633996 sec
Time for inference 6: 5.80 sec total, 1412.50 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21201.35 GB/s
FLOPS achieved: 63.60 TF/s

Prefill latency: 0.5273429900407791 sec
Decode latency: 5.2709947638213634 sec
Time for inference 7: 5.80 sec total, 1412.59 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21202.73 GB/s
FLOPS achieved: 63.61 TF/s

Prefill latency: 0.5279775373637676 sec
Decode latency: 5.2701167687773705 sec
Time for inference 8: 5.80 sec total, 1412.64 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21203.51 GB/s
FLOPS achieved: 63.61 TF/s

Prefill latency: 0.5266539007425308 sec
Decode latency: 5.271000690758228 sec
Time for inference 9: 5.80 sec total, 1412.75 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21205.14 GB/s
FLOPS achieved: 63.62 TF/s

Prefill latency: 0.5259298048913479 sec
Decode latency: 5.270821318030357 sec
Time for inference 10: 5.80 sec total, 1412.97 tokens/sec
Decode latency: 5.27 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21208.40 GB/s
FLOPS achieved: 63.63 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 5.2562 sec
Average prefill latency: 0.5271 sec
Average tokens/sec: 1416.29
Memory used: 36.01 GB
Done. we are killing the process
[rank0]:[W1114 02:11:06.932339704 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
