flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.32 seconds
CUDA_GRAPH are activate
Prefill latency: 0.13015063293278217 sec
Decode latency: 4.656383199617267 sec
Compilation time: 4.79 seconds
Prefill latency: 0.13014010153710842 sec
Decode latency: 4.746211750432849 sec
Prefill latency: 0.13077455945312977 sec
Decode latency: 4.7454816941171885 sec
Prefill latency: 0.1291180308908224 sec
Decode latency: 4.745705517008901 sec
Prefill latency: 0.1314475741237402 sec
Decode latency: 4.575263105332851 sec
Prefill latency: 0.13059855997562408 sec
Decode latency: 4.7463890835642815 sec
Time for inference 1: 4.88 sec total, 419.84 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6301.70 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.1311931386590004 sec
Decode latency: 4.746448542922735 sec
Time for inference 2: 4.88 sec total, 419.79 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6300.99 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.13046050630509853 sec
Decode latency: 4.74567730166018 sec
Time for inference 3: 4.88 sec total, 419.91 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6302.80 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.13158886693418026 sec
Decode latency: 4.653501937165856 sec
Time for inference 4: 4.79 sec total, 427.90 tokens/sec
Decode latency: 4.65 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6422.75 GB/s
FLOPS achieved: 19.27 TF/s

Prefill latency: 0.1319920290261507 sec
Decode latency: 4.723851898685098 sec
Time for inference 5: 4.86 sec total, 421.67 tokens/sec
Decode latency: 4.72 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6329.15 GB/s
FLOPS achieved: 18.99 TF/s

Prefill latency: 0.13093648292124271 sec
Decode latency: 4.746391931548715 sec
Time for inference 6: 4.88 sec total, 419.80 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6301.11 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.13164646737277508 sec
Decode latency: 4.745373390614986 sec
Time for inference 7: 4.88 sec total, 419.83 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6301.63 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.13062105886638165 sec
Decode latency: 4.745165793225169 sec
Time for inference 8: 4.88 sec total, 419.95 tokens/sec
Decode latency: 4.75 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6303.35 GB/s
FLOPS achieved: 18.91 TF/s

Prefill latency: 0.13222253508865833 sec
Decode latency: 4.744875049218535 sec
Time for inference 9: 4.88 sec total, 419.83 tokens/sec
Decode latency: 4.74 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6301.54 GB/s
FLOPS achieved: 18.90 TF/s

Prefill latency: 0.1313577089458704 sec
Decode latency: 4.707841757684946 sec
Time for inference 10: 4.84 sec total, 423.12 tokens/sec
Decode latency: 4.71 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6350.96 GB/s
FLOPS achieved: 19.05 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.7306 sec
Average prefill latency: 0.1313 sec
Average tokens/sec: 421.16
Memory used: 21.16 GB
Done. we are killing the process
[rank0]:[W1114 02:05:47.813639353 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
