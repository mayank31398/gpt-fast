W1114 02:17:22.973000 2309266 site-packages/torch/distributed/run.py:793] 
W1114 02:17:22.973000 2309266 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:17:22.973000 2309266 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:17:22.973000 2309266 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 2.16 seconds
CUDA_GRAPH are activate
Prefill latency: 0.5364220887422562 sec
Decode latency: 3.899947164580226 sec
Compilation time: 4.45 seconds
Compilation time: 4.44 seconds
Compilation time: 4.45 seconds
Compilation time: 4.44 seconds
Compilation time: 4.49 seconds
Compilation time: 4.46 seconds
Compilation time: 4.45 seconds
Compilation time: 4.44 seconds
Prefill latency: 0.5344364400953054 sec
Decode latency: 3.899075575172901 sec
Prefill latency: 0.5375696588307619 sec
Decode latency: 3.894776940345764 sec
Prefill latency: 0.5358306486159563 sec
Decode latency: 3.8990232460200787 sec
Prefill latency: 0.5374156031757593 sec
Decode latency: 3.89703512750566 sec
Prefill latency: 0.5378526877611876 sec
Decode latency: 3.894413586705923 sec
Time for inference 1: 4.43 sec total, 7390.80 tokens/sec
Decode latency: 3.89 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20664.93 GB/s
FLOPS achieved: 61.99 TF/s

Prefill latency: 0.5375468861311674 sec
Decode latency: 3.895218349993229 sec
Time for inference 2: 4.43 sec total, 7389.68 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20661.80 GB/s
FLOPS achieved: 61.99 TF/s

Prefill latency: 0.5375712029635906 sec
Decode latency: 3.8978899475187063 sec
Time for inference 3: 4.44 sec total, 7385.44 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20649.97 GB/s
FLOPS achieved: 61.95 TF/s

Prefill latency: 0.5378931704908609 sec
Decode latency: 3.897538784891367 sec
Time for inference 4: 4.44 sec total, 7385.67 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20650.61 GB/s
FLOPS achieved: 61.95 TF/s

Prefill latency: 0.5372239910066128 sec
Decode latency: 3.896429091691971 sec
Time for inference 5: 4.43 sec total, 7388.74 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20659.18 GB/s
FLOPS achieved: 61.98 TF/s

Prefill latency: 0.5366802886128426 sec
Decode latency: 3.8956395126879215 sec
Time for inference 6: 4.43 sec total, 7390.99 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20665.48 GB/s
FLOPS achieved: 62.00 TF/s

Prefill latency: 0.5381089840084314 sec
Decode latency: 3.897469675168395 sec
Time for inference 7: 4.44 sec total, 7385.73 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20650.77 GB/s
FLOPS achieved: 61.95 TF/s

Prefill latency: 0.5375505443662405 sec
Decode latency: 3.8976176269352436 sec
Time for inference 8: 4.44 sec total, 7386.30 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20652.37 GB/s
FLOPS achieved: 61.96 TF/s

Prefill latency: 0.5378446597605944 sec
Decode latency: 3.897702729329467 sec
Time for inference 9: 4.44 sec total, 7385.30 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20649.56 GB/s
FLOPS achieved: 61.95 TF/s

Prefill latency: 0.5382214579731226 sec
Decode latency: 3.8972872737795115 sec
Time for inference 10: 4.44 sec total, 7385.70 tokens/sec
Decode latency: 3.90 sec
Prefill latency: 0.54 sec
Bandwidth achieved: 20650.68 GB/s
FLOPS achieved: 61.95 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.8967 sec
Average prefill latency: 0.5376 sec
Average tokens/sec: 7387.44
Memory used: 65.97 GB
Done. we are killing the process
[rank0]:[W1114 02:19:00.512918912 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
