flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.05 seconds
CUDA_GRAPH are activate
Prefill latency: 2.301170315593481 sec
Decode latency: 6.993546763435006 sec
Compilation time: 9.30 seconds
Prefill latency: 2.3032826725393534 sec
Decode latency: 6.993612743914127 sec
Prefill latency: 2.3085912093520164 sec
Decode latency: 6.955446811392903 sec
Prefill latency: 2.3067539148032665 sec
Decode latency: 6.992947963997722 sec
Prefill latency: 2.3074131924659014 sec
Decode latency: 6.9933045487850904 sec
Prefill latency: 2.3078022990375757 sec
Decode latency: 6.992975540459156 sec
Time for inference 1: 9.30 sec total, 3522.62 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52873.96 GB/s
FLOPS achieved: 158.62 TF/s

Prefill latency: 2.3088268041610718 sec
Decode latency: 6.879808524623513 sec
Time for inference 2: 9.19 sec total, 3565.60 tokens/sec
Decode latency: 6.88 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 53519.10 GB/s
FLOPS achieved: 160.56 TF/s

Prefill latency: 2.3088594004511833 sec
Decode latency: 6.993180276826024 sec
Time for inference 3: 9.30 sec total, 3522.18 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52867.34 GB/s
FLOPS achieved: 158.60 TF/s

Prefill latency: 2.306514035910368 sec
Decode latency: 6.9934191554784775 sec
Time for inference 4: 9.30 sec total, 3522.97 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52879.27 GB/s
FLOPS achieved: 158.64 TF/s

Prefill latency: 2.3110347110778093 sec
Decode latency: 6.993396500125527 sec
Time for inference 5: 9.31 sec total, 3521.29 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52854.00 GB/s
FLOPS achieved: 158.56 TF/s

Prefill latency: 2.30492359213531 sec
Decode latency: 6.994050785899162 sec
Time for inference 6: 9.30 sec total, 3523.36 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.30 sec
Bandwidth achieved: 52885.15 GB/s
FLOPS achieved: 158.66 TF/s

Prefill latency: 2.307644883170724 sec
Decode latency: 6.992468636482954 sec
Time for inference 7: 9.30 sec total, 3522.88 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52877.95 GB/s
FLOPS achieved: 158.63 TF/s

Prefill latency: 2.303839921951294 sec
Decode latency: 6.934072911739349 sec
Time for inference 8: 9.24 sec total, 3546.61 tokens/sec
Decode latency: 6.93 sec
Prefill latency: 2.30 sec
Bandwidth achieved: 53234.06 GB/s
FLOPS achieved: 159.70 TF/s

Prefill latency: 2.3108573127537966 sec
Decode latency: 6.9927005637437105 sec
Time for inference 9: 9.30 sec total, 3521.61 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52858.77 GB/s
FLOPS achieved: 158.58 TF/s

Prefill latency: 2.309960164129734 sec
Decode latency: 6.993476675823331 sec
Time for inference 10: 9.30 sec total, 3521.64 tokens/sec
Decode latency: 6.99 sec
Prefill latency: 2.31 sec
Bandwidth achieved: 52859.35 GB/s
FLOPS achieved: 158.58 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 6.9760 sec
Average prefill latency: 2.3080 sec
Average tokens/sec: 3529.08
Memory used: 74.73 GB
Done. we are killing the process
[rank0]:[W1114 02:53:54.798980675 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
