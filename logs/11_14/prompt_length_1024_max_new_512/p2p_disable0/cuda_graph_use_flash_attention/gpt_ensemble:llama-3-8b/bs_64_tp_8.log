W1114 02:57:19.417000 2410840 site-packages/torch/distributed/run.py:793] 
W1114 02:57:19.417000 2410840 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:57:19.417000 2410840 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:57:19.417000 2410840 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.11 seconds
CUDA_GRAPH are activate
Prefill latency: 0.5987704116851091 sec
Decode latency: 3.444710187613964 sec
Compilation time: 4.16 seconds
Compilation time: 4.12 seconds
Compilation time: 4.12 seconds
Compilation time: 4.14 seconds
Compilation time: 4.10 secondsCompilation time: 4.14 seconds

Compilation time: 4.04 secondsCompilation time: 4.16 seconds

Prefill latency: 0.4809738527983427 sec
Decode latency: 3.4477404356002808 sec
Prefill latency: 0.4797641262412071 sec
Decode latency: 3.4484399631619453 sec
Prefill latency: 0.48006476648151875 sec
Decode latency: 3.4484057128429413 sec
Prefill latency: 0.4802803471684456 sec
Decode latency: 3.4490739554166794 sec
Prefill latency: 0.48033680208027363 sec
Decode latency: 3.449594372883439 sec
Time for inference 1: 3.93 sec total, 8335.73 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23307.01 GB/s
FLOPS achieved: 69.92 TF/s

Prefill latency: 0.47595933079719543 sec
Decode latency: 3.451181596145034 sec
Time for inference 2: 3.93 sec total, 8341.79 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23323.93 GB/s
FLOPS achieved: 69.97 TF/s

Prefill latency: 0.4789093490689993 sec
Decode latency: 3.4482224322855473 sec
Time for inference 3: 3.93 sec total, 8341.63 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23323.50 GB/s
FLOPS achieved: 69.97 TF/s

Prefill latency: 0.47977912053465843 sec
Decode latency: 3.4492203257977962 sec
Time for inference 4: 3.93 sec total, 8337.93 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23313.17 GB/s
FLOPS achieved: 69.94 TF/s

Prefill latency: 0.48056757263839245 sec
Decode latency: 3.447937300428748 sec
Time for inference 5: 3.93 sec total, 8338.83 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23315.66 GB/s
FLOPS achieved: 69.95 TF/s

Prefill latency: 0.478479266166687 sec
Decode latency: 3.453670872375369 sec
Time for inference 6: 3.93 sec total, 8331.27 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23294.53 GB/s
FLOPS achieved: 69.88 TF/s

Prefill latency: 0.4811121057718992 sec
Decode latency: 3.44969885610044 sec
Time for inference 7: 3.93 sec total, 8334.10 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23302.46 GB/s
FLOPS achieved: 69.91 TF/s

Prefill latency: 0.4797764327377081 sec
Decode latency: 3.4494836889207363 sec
Time for inference 8: 3.93 sec total, 8337.46 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23311.83 GB/s
FLOPS achieved: 69.94 TF/s

Prefill latency: 0.478158101439476 sec
Decode latency: 3.4519240614026785 sec
Time for inference 9: 3.93 sec total, 8335.53 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23306.45 GB/s
FLOPS achieved: 69.92 TF/s

Prefill latency: 0.4801711216568947 sec
Decode latency: 3.4474989902228117 sec
Time for inference 10: 3.93 sec total, 8340.68 tokens/sec
Decode latency: 3.45 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 23320.85 GB/s
FLOPS achieved: 69.96 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.4498 sec
Average prefill latency: 0.4793 sec
Average tokens/sec: 8337.50
Memory used: 42.88 GB
Done. we are killing the process
[rank0]:[W1114 02:58:46.420211361 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
