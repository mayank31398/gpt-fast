W1114 02:35:07.906000 2337019 site-packages/torch/distributed/run.py:793] 
W1114 02:35:07.906000 2337019 site-packages/torch/distributed/run.py:793] *****************************************
W1114 02:35:07.906000 2337019 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 02:35:07.906000 2337019 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.13 seconds
CUDA_GRAPH are activate
Prefill latency: 0.4763074368238449 sec
Decode latency: 3.1298981700092554 sec
Compilation time: 3.64 seconds
Compilation time: 3.63 seconds
Compilation time: 3.62 seconds
Compilation time: 3.62 seconds
Compilation time: 3.63 seconds
Compilation time: 3.62 seconds
Compilation time: 3.61 seconds
Compilation time: 3.64 seconds
Prefill latency: 0.4788206238299608 sec
Decode latency: 3.12594130076468 sec
Prefill latency: 0.47842127457261086 sec
Decode latency: 3.127944754436612 sec
Prefill latency: 0.47991402819752693 sec
Decode latency: 3.1268846970051527 sec
Prefill latency: 0.47342114709317684 sec
Decode latency: 3.1332599613815546 sec
Prefill latency: 0.4788218531757593 sec
Decode latency: 3.128540074452758 sec
Time for inference 1: 3.61 sec total, 9080.75 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25390.12 GB/s
FLOPS achieved: 76.17 TF/s

Prefill latency: 0.47614822536706924 sec
Decode latency: 3.129618763923645 sec
Time for inference 2: 3.61 sec total, 9085.14 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25402.39 GB/s
FLOPS achieved: 76.21 TF/s

Prefill latency: 0.4786068797111511 sec
Decode latency: 3.1286208871752024 sec
Time for inference 3: 3.61 sec total, 9081.61 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25392.50 GB/s
FLOPS achieved: 76.18 TF/s

Prefill latency: 0.479064267128706 sec
Decode latency: 3.127396432682872 sec
Time for inference 4: 3.61 sec total, 9083.28 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25397.18 GB/s
FLOPS achieved: 76.19 TF/s

Prefill latency: 0.47908116318285465 sec
Decode latency: 3.1279782075434923 sec
Time for inference 5: 3.61 sec total, 9081.91 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25393.34 GB/s
FLOPS achieved: 76.18 TF/s

Prefill latency: 0.4805675037205219 sec
Decode latency: 3.1255409996956587 sec
Time for inference 6: 3.61 sec total, 9084.44 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25400.42 GB/s
FLOPS achieved: 76.20 TF/s

Prefill latency: 0.4796506594866514 sec
Decode latency: 3.128775469958782 sec
Time for inference 7: 3.61 sec total, 9078.89 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25384.91 GB/s
FLOPS achieved: 76.15 TF/s

Prefill latency: 0.4789863061159849 sec
Decode latency: 3.128134150058031 sec
Time for inference 8: 3.61 sec total, 9082.08 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25393.81 GB/s
FLOPS achieved: 76.18 TF/s

Prefill latency: 0.48001514561474323 sec
Decode latency: 3.1289741192013025 sec
Time for inference 9: 3.61 sec total, 9076.84 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25379.17 GB/s
FLOPS achieved: 76.14 TF/s

Prefill latency: 0.4805722292512655 sec
Decode latency: 3.1271450761705637 sec
Time for inference 10: 3.61 sec total, 9080.05 tokens/sec
Decode latency: 3.13 sec
Prefill latency: 0.48 sec
Bandwidth achieved: 25388.13 GB/s
FLOPS achieved: 76.16 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.1281 sec
Average prefill latency: 0.4792 sec
Average tokens/sec: 9081.50
Memory used: 65.97 GB
Done. we are killing the process
[rank0]:[W1114 02:36:30.500548249 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
