flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.38 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 02:28:06.950812293 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.5265073198825121 sec
Decode latency: 5.159672323614359 sec
Compilation time: 5.69 seconds
Prefill latency: 0.526283260434866 sec
Decode latency: 5.28102065436542 sec
Prefill latency: 0.5279237572103739 sec
Decode latency: 5.202518215402961 sec
Prefill latency: 0.5279820840805769 sec
Decode latency: 5.2744467463344336 sec
Prefill latency: 0.5273397248238325 sec
Decode latency: 5.2844316605478525 sec
Prefill latency: 0.5260689035058022 sec
Decode latency: 5.2798838801681995 sec
Time for inference 1: 5.81 sec total, 1410.71 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21174.58 GB/s
FLOPS achieved: 63.52 TF/s

Prefill latency: 0.5276259779930115 sec
Decode latency: 5.28236466832459 sec
Time for inference 2: 5.81 sec total, 1409.72 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21159.68 GB/s
FLOPS achieved: 63.48 TF/s

Prefill latency: 0.527606749907136 sec
Decode latency: 5.281029345467687 sec
Time for inference 3: 5.81 sec total, 1410.06 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21164.72 GB/s
FLOPS achieved: 63.49 TF/s

Prefill latency: 0.5280882231891155 sec
Decode latency: 5.119278201833367 sec
Time for inference 4: 5.65 sec total, 1450.30 tokens/sec
Decode latency: 5.12 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21768.84 GB/s
FLOPS achieved: 65.31 TF/s

Prefill latency: 0.5264562126249075 sec
Decode latency: 5.28317716345191 sec
Time for inference 5: 5.81 sec total, 1409.81 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21161.07 GB/s
FLOPS achieved: 63.48 TF/s

Prefill latency: 0.5289478544145823 sec
Decode latency: 5.28198722191155 sec
Time for inference 6: 5.81 sec total, 1409.51 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21156.54 GB/s
FLOPS achieved: 63.47 TF/s

Prefill latency: 0.5257110185921192 sec
Decode latency: 5.281453819945455 sec
Time for inference 7: 5.81 sec total, 1410.42 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21170.15 GB/s
FLOPS achieved: 63.51 TF/s

Prefill latency: 0.5286686979234219 sec
Decode latency: 5.28216277807951 sec
Time for inference 8: 5.81 sec total, 1409.53 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21156.82 GB/s
FLOPS achieved: 63.47 TF/s

Prefill latency: 0.526672899723053 sec
Decode latency: 5.28141363337636 sec
Time for inference 9: 5.81 sec total, 1410.19 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21166.68 GB/s
FLOPS achieved: 63.50 TF/s

Prefill latency: 0.5282003525644541 sec
Decode latency: 5.282260436564684 sec
Time for inference 10: 5.81 sec total, 1409.61 tokens/sec
Decode latency: 5.28 sec
Prefill latency: 0.53 sec
Bandwidth achieved: 21158.02 GB/s
FLOPS achieved: 63.47 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 5.2655 sec
Average prefill latency: 0.5274 sec
Average tokens/sec: 1413.99
Memory used: 35.95 GB
Done. we are killing the process
[rank0]:[W1114 02:29:33.913956008 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
