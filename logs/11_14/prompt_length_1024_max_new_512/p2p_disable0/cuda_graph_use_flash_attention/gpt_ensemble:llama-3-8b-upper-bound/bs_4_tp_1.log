flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.09 seconds
CUDA_GRAPH are activate
Prefill latency: 0.1298251375555992 sec
Decode latency: 4.483348028734326 sec
Compilation time: 4.61 seconds
Prefill latency: 0.13002833537757397 sec
Decode latency: 4.6110986433923244 sec
Prefill latency: 0.12995867803692818 sec
Decode latency: 4.592462852597237 sec
Prefill latency: 0.13069159165024757 sec
Decode latency: 4.643724454566836 sec
Prefill latency: 0.12983893975615501 sec
Decode latency: 4.482018910348415 sec
Prefill latency: 0.13039199821650982 sec
Decode latency: 4.623088562861085 sec
Time for inference 1: 4.75 sec total, 430.76 tokens/sec
Decode latency: 4.62 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6465.66 GB/s
FLOPS achieved: 19.40 TF/s

Prefill latency: 0.12958925776183605 sec
Decode latency: 4.495060911402106 sec
Time for inference 2: 4.63 sec total, 442.76 tokens/sec
Decode latency: 4.50 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6645.81 GB/s
FLOPS achieved: 19.94 TF/s

Prefill latency: 0.1304287351667881 sec
Decode latency: 4.627860840409994 sec
Time for inference 3: 4.76 sec total, 430.34 tokens/sec
Decode latency: 4.63 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6459.27 GB/s
FLOPS achieved: 19.38 TF/s

Prefill latency: 0.13045321963727474 sec
Decode latency: 4.551826626062393 sec
Time for inference 4: 4.68 sec total, 437.32 tokens/sec
Decode latency: 4.55 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6564.09 GB/s
FLOPS achieved: 19.69 TF/s

Prefill latency: 0.13058463111519814 sec
Decode latency: 4.653780221939087 sec
Time for inference 5: 4.79 sec total, 427.99 tokens/sec
Decode latency: 4.65 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6424.02 GB/s
FLOPS achieved: 19.27 TF/s

Prefill latency: 0.13064679130911827 sec
Decode latency: 4.579385178163648 sec
Time for inference 6: 4.71 sec total, 434.73 tokens/sec
Decode latency: 4.58 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6525.29 GB/s
FLOPS achieved: 19.58 TF/s

Prefill latency: 0.129352405667305 sec
Decode latency: 4.667993759736419 sec
Time for inference 7: 4.80 sec total, 426.82 tokens/sec
Decode latency: 4.67 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6406.49 GB/s
FLOPS achieved: 19.22 TF/s

Prefill latency: 0.13060865551233292 sec
Decode latency: 4.4808292128145695 sec
Time for inference 8: 4.61 sec total, 444.03 tokens/sec
Decode latency: 4.48 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6664.81 GB/s
FLOPS achieved: 19.99 TF/s

Prefill latency: 0.12997821532189846 sec
Decode latency: 4.676111798733473 sec
Time for inference 9: 4.81 sec total, 426.04 tokens/sec
Decode latency: 4.68 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6394.83 GB/s
FLOPS achieved: 19.18 TF/s

Prefill latency: 0.13090897351503372 sec
Decode latency: 4.483062436804175 sec
Time for inference 10: 4.61 sec total, 443.78 tokens/sec
Decode latency: 4.48 sec
Prefill latency: 0.13 sec
Bandwidth achieved: 6661.13 GB/s
FLOPS achieved: 19.98 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.5839 sec
Average prefill latency: 0.1303 sec
Average tokens/sec: 434.46
Memory used: 18.93 GB
[rank0]:[W1114 03:04:18.754217483 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1114 03:04:18.602330008 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
