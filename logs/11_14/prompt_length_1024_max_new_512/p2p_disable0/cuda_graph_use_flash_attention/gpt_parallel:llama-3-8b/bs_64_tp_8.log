W1114 03:39:40.205000 2572558 site-packages/torch/distributed/run.py:793] 
W1114 03:39:40.205000 2572558 site-packages/torch/distributed/run.py:793] *****************************************
W1114 03:39:40.205000 2572558 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 03:39:40.205000 2572558 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=4352, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.38 seconds
CUDA_GRAPH are activate
Prefill latency: 0.47324226796627045 sec
Decode latency: 3.229367583990097 sec
Compilation time: 3.75 seconds
Compilation time: 3.72 seconds
Compilation time: 3.71 secondsCompilation time: 3.69 seconds

Compilation time: 3.71 secondsCompilation time: 3.70 seconds

Compilation time: 3.71 seconds
Compilation time: 3.70 seconds
Prefill latency: 0.4570032339543104 sec
Decode latency: 3.2288882322609425 sec
Prefill latency: 0.45670388638973236 sec
Decode latency: 3.2303746603429317 sec
Prefill latency: 0.45894577354192734 sec
Decode latency: 3.2285711392760277 sec
Prefill latency: 0.4589523673057556 sec
Decode latency: 3.2275210954248905 sec
Prefill latency: 0.4541059546172619 sec
Decode latency: 3.2334514632821083 sec
Time for inference 1: 3.69 sec total, 8883.45 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 24836.12 GB/s
FLOPS achieved: 74.51 TF/s

Prefill latency: 0.45898659341037273 sec
Decode latency: 3.2285416293889284 sec
Time for inference 2: 3.69 sec total, 8883.64 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24836.66 GB/s
FLOPS achieved: 74.51 TF/s

Prefill latency: 0.4584757015109062 sec
Decode latency: 3.230442462489009 sec
Time for inference 3: 3.69 sec total, 8880.33 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24827.40 GB/s
FLOPS achieved: 74.48 TF/s

Prefill latency: 0.4549091886729002 sec
Decode latency: 3.2316971365362406 sec
Time for inference 4: 3.69 sec total, 8885.56 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 24842.01 GB/s
FLOPS achieved: 74.53 TF/s

Prefill latency: 0.4573222827166319 sec
Decode latency: 3.230595340952277 sec
Time for inference 5: 3.69 sec total, 8882.49 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24833.43 GB/s
FLOPS achieved: 74.50 TF/s

Prefill latency: 0.45885293930768967 sec
Decode latency: 3.226799413561821 sec
Time for inference 6: 3.69 sec total, 8888.17 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24849.32 GB/s
FLOPS achieved: 74.55 TF/s

Prefill latency: 0.4560563638806343 sec
Decode latency: 3.231110731139779 sec
Time for inference 7: 3.69 sec total, 8884.79 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24839.86 GB/s
FLOPS achieved: 74.52 TF/s

Prefill latency: 0.4577328525483608 sec
Decode latency: 3.231078376993537 sec
Time for inference 8: 3.69 sec total, 8880.35 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24827.44 GB/s
FLOPS achieved: 74.48 TF/s

Prefill latency: 0.4585089311003685 sec
Decode latency: 3.2298388313502073 sec
Time for inference 9: 3.69 sec total, 8881.93 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24831.87 GB/s
FLOPS achieved: 74.50 TF/s

Prefill latency: 0.4597395099699497 sec
Decode latency: 3.228007238358259 sec
Time for inference 10: 3.69 sec total, 8883.04 tokens/sec
Decode latency: 3.23 sec
Prefill latency: 0.46 sec
Bandwidth achieved: 24834.96 GB/s
FLOPS achieved: 74.50 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.2302 sec
Average prefill latency: 0.4575 sec
Average tokens/sec: 8883.37
Memory used: 55.83 GB
Done. we are killing the process
[rank0]:[W1114 03:41:03.604092949 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
