W1114 03:25:16.614000 2521693 site-packages/torch/distributed/run.py:793] 
W1114 03:25:16.614000 2521693 site-packages/torch/distributed/run.py:793] *****************************************
W1114 03:25:16.614000 2521693 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 03:25:16.614000 2521693 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=17408, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.02 seconds
CUDA_GRAPH are activate
[rank1]:[W1114 03:25:26.063969776 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
[rank0]:[W1114 03:25:26.076273269 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.07664286531507969 sec
Decode latency: 3.5708529744297266 sec
Compilation time: 3.66 seconds
Compilation time: 3.65 seconds
Prefill latency: 0.07623792812228203 sec
Decode latency: 3.5711227357387543 sec
Prefill latency: 0.07565710693597794 sec
Decode latency: 3.571884384378791 sec
Prefill latency: 0.07592733390629292 sec
Decode latency: 3.570586020126939 sec
Prefill latency: 0.07582145556807518 sec
Decode latency: 3.571902884170413 sec
Prefill latency: 0.07564163021743298 sec
Decode latency: 3.571377493441105 sec
Time for inference 1: 3.65 sec total, 561.44 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4508.47 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07556564547121525 sec
Decode latency: 3.571169186383486 sec
Time for inference 2: 3.65 sec total, 561.47 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4508.77 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07570931874215603 sec
Decode latency: 3.5727251302450895 sec
Time for inference 3: 3.65 sec total, 561.19 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4506.52 GB/s
FLOPS achieved: 13.52 TF/s

Prefill latency: 0.0755877885967493 sec
Decode latency: 3.570634061470628 sec
Time for inference 4: 3.65 sec total, 561.54 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4509.31 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07594522647559643 sec
Decode latency: 3.5722405463457108 sec
Time for inference 5: 3.65 sec total, 561.22 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4506.71 GB/s
FLOPS achieved: 13.52 TF/s

Prefill latency: 0.07575754448771477 sec
Decode latency: 3.570192502811551 sec
Time for inference 6: 3.65 sec total, 561.58 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4509.63 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07569872587919235 sec
Decode latency: 3.5700310803949833 sec
Time for inference 7: 3.65 sec total, 561.64 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4510.12 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07548050209879875 sec
Decode latency: 3.5708363093435764 sec
Time for inference 8: 3.65 sec total, 561.54 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4509.29 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07615582086145878 sec
Decode latency: 3.570363823324442 sec
Time for inference 9: 3.65 sec total, 561.51 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4509.10 GB/s
FLOPS achieved: 13.53 TF/s

Prefill latency: 0.07574695721268654 sec
Decode latency: 3.5702074747532606 sec
Time for inference 10: 3.65 sec total, 561.60 tokens/sec
Decode latency: 3.57 sec
Prefill latency: 0.08 sec
Bandwidth achieved: 4509.82 GB/s
FLOPS achieved: 13.53 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.5710 sec
Average prefill latency: 0.0757 sec
Average tokens/sec: 561.47
Memory used: 13.09 GB
Done. we are killing the process
[rank0]:[W1114 03:26:21.220693144 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
