flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=34816, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.96 seconds
CUDA_GRAPH are activate
[rank0]:[W1114 03:19:37.063792604 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.03316207230091095 sec
Decode latency: 4.4011728428304195 sec
Compilation time: 4.44 seconds
Prefill latency: 0.03286236897110939 sec
Decode latency: 4.401449300348759 sec
Prefill latency: 0.03287386707961559 sec
Decode latency: 4.399942986667156 sec
Prefill latency: 0.03289400227367878 sec
Decode latency: 4.400797296315432 sec
Prefill latency: 0.03294985555112362 sec
Decode latency: 4.400683728978038 sec
Prefill latency: 0.0329110361635685 sec
Decode latency: 4.401306759566069 sec
Time for inference 1: 4.44 sec total, 115.44 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1732.70 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03288830816745758 sec
Decode latency: 4.401401273906231 sec
Time for inference 2: 4.44 sec total, 115.44 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1732.71 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.0328567773103714 sec
Decode latency: 4.400082178413868 sec
Time for inference 3: 4.43 sec total, 115.48 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.24 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.0328524075448513 sec
Decode latency: 4.399721536785364 sec
Time for inference 4: 4.43 sec total, 115.49 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.39 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03286413103342056 sec
Decode latency: 4.400093777105212 sec
Time for inference 5: 4.43 sec total, 115.48 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.24 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.0328530240803957 sec
Decode latency: 4.399114133790135 sec
Time for inference 6: 4.43 sec total, 115.50 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.60 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.032877905294299126 sec
Decode latency: 4.399917742237449 sec
Time for inference 7: 4.43 sec total, 115.48 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.30 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03285449929535389 sec
Decode latency: 4.400689268484712 sec
Time for inference 8: 4.43 sec total, 115.46 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.02 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03285553306341171 sec
Decode latency: 4.399661047384143 sec
Time for inference 9: 4.43 sec total, 115.49 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.39 GB/s
FLOPS achieved: 5.20 TF/s

Prefill latency: 0.03283495642244816 sec
Decode latency: 4.400505691766739 sec
Time for inference 10: 4.43 sec total, 115.46 tokens/sec
Decode latency: 4.40 sec
Prefill latency: 0.03 sec
Bandwidth achieved: 1733.05 GB/s
FLOPS achieved: 5.20 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.4002 sec
Average prefill latency: 0.0329 sec
Average tokens/sec: 115.47
Memory used: 17.15 GB
Done. we are killing the process
[rank0]:[W1114 03:20:44.229101391 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
