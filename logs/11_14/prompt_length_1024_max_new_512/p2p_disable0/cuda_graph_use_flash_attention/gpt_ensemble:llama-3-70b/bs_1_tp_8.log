W1114 04:10:35.275000 2316925 site-packages/torch/distributed/run.py:793] 
W1114 04:10:35.275000 2316925 site-packages/torch/distributed/run.py:793] *****************************************
W1114 04:10:35.275000 2316925 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1114 04:10:35.275000 2316925 site-packages/torch/distributed/run.py:793] *****************************************
flash_kv_decode is set to True
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=1280, bias=False)
        (wo): Linear(in_features=1024, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.41 seconds
CUDA_GRAPH are activate
Prefill latency: 0.11294663604348898 sec
Decode latency: 8.299344494007528 sec
Compilation time: 8.45 seconds
Compilation time: 8.41 seconds
Compilation time: 8.41 seconds
Compilation time: 8.36 seconds
Compilation time: 8.48 seconds
Compilation time: 8.39 seconds
Compilation time: 8.43 seconds
Compilation time: 8.38 seconds
Prefill latency: 0.05905866343528032 sec
Decode latency: 8.297251338139176 sec
Prefill latency: 0.05887622758746147 sec
Decode latency: 8.297219458967447 sec
Prefill latency: 0.058867243118584156 sec
Decode latency: 8.29743150435388 sec
Prefill latency: 0.058824384585022926 sec
Decode latency: 8.297708274796605 sec
Prefill latency: 0.05896793305873871 sec
Decode latency: 8.29739517532289 sec
Time for inference 1: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.25 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.05892583355307579 sec
Decode latency: 8.29714472964406 sec
Time for inference 2: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.29 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.05874219164252281 sec
Decode latency: 8.297923161648214 sec
Time for inference 3: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.22 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.058978600427508354 sec
Decode latency: 8.297582843340933 sec
Time for inference 4: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.24 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.05881732888519764 sec
Decode latency: 8.298265986144543 sec
Time for inference 5: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.17 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.058876315131783485 sec
Decode latency: 8.298012676648796 sec
Time for inference 6: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.19 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.05886839982122183 sec
Decode latency: 8.298515163362026 sec
Time for inference 7: 8.36 sec total, 61.25 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.11 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.059011176228523254 sec
Decode latency: 8.297610810026526 sec
Time for inference 8: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.22 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.0587482750415802 sec
Decode latency: 8.297683687880635 sec
Time for inference 9: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.27 GB/s
FLOPS achieved: 3.53 TF/s

Prefill latency: 0.05873573385179043 sec
Decode latency: 8.298374314792454 sec
Time for inference 10: 8.36 sec total, 61.26 tokens/sec
Decode latency: 8.30 sec
Prefill latency: 0.06 sec
Bandwidth achieved: 1177.15 GB/s
FLOPS achieved: 3.53 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 8.2979 sec
Average prefill latency: 0.0589 sec
Average tokens/sec: 61.26
Memory used: 23.20 GB
Done. we are killing the process
[rank0]:[W1114 04:12:57.211100034 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
