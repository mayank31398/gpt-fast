[2024-09-13 10:41:46,092] torch.distributed.run: [WARNING] 
[2024-09-13 10:41:46,092] torch.distributed.run: [WARNING] *****************************************
[2024-09-13 10:41:46,092] torch.distributed.run: [WARNING] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
[2024-09-13 10:41:46,092] torch.distributed.run: [WARNING] *****************************************
our tp world size is 2
our tp world size is 2
our tp world size is 2
Using device=cuda
our tp world size is Loading model ...
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is2
 our tp world size is 2
2our tp world size is 
2
our tp world size is 2our tp world size is 
2our tp world size is 
2our tp world size is 
2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is 2our tp world size is
 2our tp world size is
 2our tp world size is 
our tp world size is2
 2our tp world size is 
2our tp world size is 
our tp world size is2
 our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2our tp world size is 
2
our tp world size is our tp world size is2
 2our tp world size is 
2our tp world size is 
2
our tp world size isour tp world size is  22

our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2our tp world size is 
2
our tp world size is our tp world size is 2
2our tp world size is
 2
our tp world size is 2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size isour tp world size is  22

our tp world size is our tp world size is 2
2our tp world size is 
2
our tp world size is 2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is 2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is2
 2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size isour tp world size is  22

our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2our tp world size is 
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size is our tp world size is 2
2
our tp world size isour tp world size is  2
2our tp world size is 
2
our tp world size is our tp world size is2
 2our tp world size is 
2
our tp world size is our tp world size is2
 2our tp world size is 
2our tp world size is 
applying tp to block 02

our tp world size is 2
our tp world size is applying tp to block 02

applying tp to block 0our tp world size is 
2applying tp to block 0

applying tp to block 0
Applying tensor parallel to model ...
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0applying tp to block 0

applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
we finish operating the TP!
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
applying tp to block 0
we finish operating the TP!
GPTResidual(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x TurboTransformerBlock(
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
we comment comm is True
models all reduce stream is None
Time to load model: 2.18 seconds
the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 602.52 sec
Time for inference -4: 1235.48 sec total, 0.83 tokens/sec
Bandwidth achieved: 58.48 GB/s
FLOPS achieved: 0.12 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 1.19 sec
Time for inference -3: 28.82 sec total, 35.54 tokens/sec
Bandwidth achieved: 2507.30 GB/s
FLOPS achieved: 5.01 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference -2: 27.65 sec total, 37.04 tokens/sec
Bandwidth achieved: 2613.03 GB/s
FLOPS achieved: 5.23 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference -1: 27.65 sec total, 37.03 tokens/sec
Bandwidth achieved: 2612.74 GB/s
FLOPS achieved: 5.23 TF/s

the shape of input is torch.Size([1, 1024])
Compilation time: 27.66 seconds
the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 1: 27.65 sec total, 37.04 tokens/sec
Bandwidth achieved: 2613.08 GB/s
FLOPS achieved: 5.23 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 2: 27.66 sec total, 37.03 tokens/sec
Bandwidth achieved: 2612.38 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 3: 27.70 sec total, 36.96 tokens/sec
Bandwidth achieved: 2607.92 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 4: 27.70 sec total, 36.97 tokens/sec
Bandwidth achieved: 2608.08 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.14 sec
Time for inference 5: 27.65 sec total, 37.03 tokens/sec
Bandwidth achieved: 2612.54 GB/s
FLOPS achieved: 5.23 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 6: 27.65 sec total, 37.03 tokens/sec
Bandwidth achieved: 2612.55 GB/s
FLOPS achieved: 5.23 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 7: 27.66 sec total, 37.02 tokens/sec
Bandwidth achieved: 2612.29 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.14 sec
Time for inference 8: 27.66 sec total, 37.03 tokens/sec
Bandwidth achieved: 2612.46 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 9: 27.66 sec total, 37.02 tokens/sec
Bandwidth achieved: 2612.20 GB/s
FLOPS achieved: 5.22 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.15 sec
Time for inference 10: 27.71 sec total, 36.95 tokens/sec
Bandwidth achieved: 2606.89 GB/s
FLOPS achieved: 5.21 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 1024
Average prefill latency: 0.23 sec
Average tokens/sec: 36.90
Memory used: 74.87 GB
