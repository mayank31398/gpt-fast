Using device=cuda
Loading model ...
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
our tp world size is 1
GPTResidual(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x TurboTransformerBlock(
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
models all reduce stream is None
Time to load model: 0.42 seconds
the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 117.87 sec
Time for inference -4: 237.55 sec total, 4.31 tokens/sec
Bandwidth achieved: 64.70 GB/s
FLOPS achieved: 0.13 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 1.12 sec
Time for inference -3: 9.44 sec total, 108.47 tokens/sec
Bandwidth achieved: 1628.07 GB/s
FLOPS achieved: 3.26 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference -2: 6.87 sec total, 148.97 tokens/sec
Bandwidth achieved: 2236.02 GB/s
FLOPS achieved: 4.47 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference -1: 6.85 sec total, 149.57 tokens/sec
Bandwidth achieved: 2244.98 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
Compilation time: 6.85 seconds
the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 1: 6.88 sec total, 148.76 tokens/sec
Bandwidth achieved: 2232.84 GB/s
FLOPS achieved: 4.47 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 2: 6.85 sec total, 149.53 tokens/sec
Bandwidth achieved: 2244.44 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 3: 6.85 sec total, 149.51 tokens/sec
Bandwidth achieved: 2244.18 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 4: 6.87 sec total, 149.03 tokens/sec
Bandwidth achieved: 2236.96 GB/s
FLOPS achieved: 4.47 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 5: 6.85 sec total, 149.54 tokens/sec
Bandwidth achieved: 2244.56 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 6: 6.85 sec total, 149.56 tokens/sec
Bandwidth achieved: 2244.83 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 7: 6.85 sec total, 149.49 tokens/sec
Bandwidth achieved: 2243.85 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 8: 6.85 sec total, 149.50 tokens/sec
Bandwidth achieved: 2244.01 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 9: 6.85 sec total, 149.56 tokens/sec
Bandwidth achieved: 2244.86 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 10: 6.85 sec total, 149.54 tokens/sec
Bandwidth achieved: 2244.58 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 11: 6.85 sec total, 149.51 tokens/sec
Bandwidth achieved: 2244.14 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 12: 6.85 sec total, 149.49 tokens/sec
Bandwidth achieved: 2243.88 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 13: 6.85 sec total, 149.51 tokens/sec
Bandwidth achieved: 2244.18 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 14: 6.85 sec total, 149.58 tokens/sec
Bandwidth achieved: 2245.13 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 15: 6.85 sec total, 149.51 tokens/sec
Bandwidth achieved: 2244.18 GB/s
FLOPS achieved: 4.49 TF/s

the shape of input is torch.Size([1, 1024])
tokens we generated: 1024
Time for prefill: 0.04 sec
Time for inference 16: 6.85 sec total, 149.52 tokens/sec
Bandwidth achieved: 2244.26 GB/s
FLOPS achieved: 4.49 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 1024
Average prefill latency: 0.10 sec
Average tokens/sec: 147.27
Memory used: 17.96 GB
