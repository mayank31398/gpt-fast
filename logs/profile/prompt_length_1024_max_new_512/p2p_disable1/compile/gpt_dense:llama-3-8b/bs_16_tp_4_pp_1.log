W1203 13:06:05.280000 1887184 site-packages/torch/distributed/run.py:793] 
W1203 13:06:05.280000 1887184 site-packages/torch/distributed/run.py:793] *****************************************
W1203 13:06:05.280000 1887184 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1203 13:06:05.280000 1887184 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.25 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 41.48308447096497 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 44.940794722991996 sec
Compilation time: 86.53 seconds
Compilation time: 86.33 seconds
Compilation time: 86.43 seconds
Compilation time: 86.43 seconds
Prefill latency: 0.2740892299916595 sec
Decode latency: 3.2772179240128025 sec
Prefill latency: 0.2707647510105744 sec
Decode latency: 3.276747768977657 sec
Prefill latency: 0.2712833370314911 sec
Decode latency: 3.2821206600638106 sec
Prefill latency: 0.2719251449452713 sec
Decode latency: 3.275552263017744 sec
Prefill latency: 0.2720910800853744 sec
Decode latency: 3.2772417520172894 sec
Time for inference 1: 3.55 sec total, 2306.58 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10473.85 GB/s
FLOPS achieved: 31.42 TF/s

Prefill latency: 0.27199264499358833 sec
Decode latency: 3.2779501010663807 sec
Time for inference 2: 3.55 sec total, 2306.08 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10471.61 GB/s
FLOPS achieved: 31.41 TF/s

Prefill latency: 0.2723393689375371 sec
Decode latency: 3.276780567946844 sec
Time for inference 3: 3.55 sec total, 2306.54 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10473.71 GB/s
FLOPS achieved: 31.42 TF/s

Prefill latency: 0.2711899410933256 sec
Decode latency: 3.27915093395859 sec
Time for inference 4: 3.55 sec total, 2306.02 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10471.34 GB/s
FLOPS achieved: 31.41 TF/s

Prefill latency: 0.27196108596399426 sec
Decode latency: 3.2757761559914798 sec
Time for inference 5: 3.55 sec total, 2308.01 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10480.36 GB/s
FLOPS achieved: 31.44 TF/s

Prefill latency: 0.2720694480231032 sec
Decode latency: 3.279930001939647 sec
Time for inference 6: 3.55 sec total, 2304.78 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10465.70 GB/s
FLOPS achieved: 31.40 TF/s

Prefill latency: 0.27182319201529026 sec
Decode latency: 3.278927962994203 sec
Time for inference 7: 3.55 sec total, 2305.84 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10470.52 GB/s
FLOPS achieved: 31.41 TF/s

Prefill latency: 0.27276651200372726 sec
Decode latency: 3.2790857329964638 sec
Time for inference 8: 3.55 sec total, 2304.95 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10466.47 GB/s
FLOPS achieved: 31.40 TF/s

Prefill latency: 0.27199474908411503 sec
Decode latency: 3.2780282309977338 sec
Time for inference 9: 3.55 sec total, 2306.35 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10472.83 GB/s
FLOPS achieved: 31.42 TF/s

Prefill latency: 0.2726395189529285 sec
Decode latency: 3.276297073927708 sec
Time for inference 10: 3.55 sec total, 2307.29 tokens/sec
Decode latency: 3.28 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 10477.12 GB/s
FLOPS achieved: 31.43 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.2779 sec
Average prefill latency: 0.2721 sec
Average tokens/sec: 2306.25
Memory used: 15.32 GB
Done. we are killing the process
[rank2]:[W1203 13:08:28.217133217 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1203 13:08:28.288056351 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1203 13:08:28.292039843 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1203 13:08:28.603647207 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
