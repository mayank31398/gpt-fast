W1203 13:21:31.049000 1901377 site-packages/torch/distributed/run.py:793] 
W1203 13:21:31.049000 1901377 site-packages/torch/distributed/run.py:793] *****************************************
W1203 13:21:31.049000 1901377 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1203 13:21:31.049000 1901377 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.19 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 46.62209780490957 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 48.91581340599805 sec
Compilation time: 95.57 secondsCompilation time: 95.54 seconds

Compilation time: 95.49 seconds
Compilation time: 95.54 seconds
Prefill latency: 1.0731532360659912 sec
Decode latency: 4.824984941049479 sec
Prefill latency: 1.0765158830909058 sec
Decode latency: 4.825719960033894 sec
Prefill latency: 1.0800840239971876 sec
Decode latency: 4.826578474021517 sec
Prefill latency: 1.0810444129165262 sec
Decode latency: 4.824544040020555 sec
Prefill latency: 1.0810794939752668 sec
Decode latency: 4.827474361984059 sec
Time for inference 1: 5.91 sec total, 5544.06 tokens/sec
Decode latency: 4.83 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25174.86 GB/s
FLOPS achieved: 75.52 TF/s

Prefill latency: 1.0831804580520838 sec
Decode latency: 4.822458242997527 sec
Time for inference 2: 5.91 sec total, 5546.97 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25188.06 GB/s
FLOPS achieved: 75.56 TF/s

Prefill latency: 1.082430972950533 sec
Decode latency: 4.822928891051561 sec
Time for inference 3: 5.91 sec total, 5547.07 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25188.50 GB/s
FLOPS achieved: 75.57 TF/s

Prefill latency: 1.0847049279836938 sec
Decode latency: 4.824491659994237 sec
Time for inference 4: 5.91 sec total, 5543.51 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25172.35 GB/s
FLOPS achieved: 75.52 TF/s

Prefill latency: 1.0821738910162821 sec
Decode latency: 4.824589501018636 sec
Time for inference 5: 5.91 sec total, 5544.88 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25178.56 GB/s
FLOPS achieved: 75.54 TF/s

Prefill latency: 1.0851493020309135 sec
Decode latency: 4.82367438392248 sec
Time for inference 6: 5.91 sec total, 5543.77 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.09 sec
Bandwidth achieved: 25173.51 GB/s
FLOPS achieved: 75.52 TF/s

Prefill latency: 1.081993593950756 sec
Decode latency: 4.823611063999124 sec
Time for inference 7: 5.91 sec total, 5546.68 tokens/sec
Decode latency: 4.82 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25186.72 GB/s
FLOPS achieved: 75.56 TF/s

Prefill latency: 1.0867846640758216 sec
Decode latency: 4.825814479961991 sec
Time for inference 8: 5.91 sec total, 5540.11 tokens/sec
Decode latency: 4.83 sec
Prefill latency: 1.09 sec
Bandwidth achieved: 25156.91 GB/s
FLOPS achieved: 75.47 TF/s

Prefill latency: 1.0850897029740736 sec
Decode latency: 4.826508410042152 sec
Time for inference 9: 5.91 sec total, 5541.26 tokens/sec
Decode latency: 4.83 sec
Prefill latency: 1.09 sec
Bandwidth achieved: 25162.11 GB/s
FLOPS achieved: 75.49 TF/s

Prefill latency: 1.0839025439927354 sec
Decode latency: 4.826345856999978 sec
Time for inference 10: 5.91 sec total, 5542.54 tokens/sec
Decode latency: 4.83 sec
Prefill latency: 1.08 sec
Bandwidth achieved: 25167.93 GB/s
FLOPS achieved: 75.50 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.8248 sec
Average prefill latency: 1.0836 sec
Average tokens/sec: 5544.08
Memory used: 43.47 GB
Done. we are killing the process
[rank0]:[W1203 13:24:36.129278976 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1203 13:24:36.156483744 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1203 13:24:36.160899345 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1203 13:24:36.327631695 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
