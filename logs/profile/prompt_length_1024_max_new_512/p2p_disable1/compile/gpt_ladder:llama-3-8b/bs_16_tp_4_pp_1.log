W1203 13:52:10.964000 1935277 site-packages/torch/distributed/run.py:793] 
W1203 13:52:10.964000 1935277 site-packages/torch/distributed/run.py:793] *****************************************
W1203 13:52:10.964000 1935277 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1203 13:52:10.964000 1935277 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=1536, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=7168, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.26 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 39.14351020101458 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 41.74376767105423 sec
Compilation time: 80.85 seconds
Compilation time: 80.86 seconds
Compilation time: 80.88 seconds
Compilation time: 80.89 seconds
Prefill latency: 0.2558056120760739 sec
Decode latency: 2.551005744957365 sec
Prefill latency: 0.25305068807210773 sec
Decode latency: 2.5518708939198405 sec
Prefill latency: 0.25331238890066743 sec
Decode latency: 2.5507921429816633 sec
Prefill latency: 0.2525652040494606 sec
Decode latency: 2.552047170000151 sec
Prefill latency: 0.25310766708571464 sec
Decode latency: 2.55226789903827 sec
Time for inference 1: 2.81 sec total, 2917.94 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13249.96 GB/s
FLOPS achieved: 39.75 TF/s

Prefill latency: 0.25298068998381495 sec
Decode latency: 2.5533042749157175 sec
Time for inference 2: 2.81 sec total, 2916.94 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13245.43 GB/s
FLOPS achieved: 39.74 TF/s

Prefill latency: 0.2541054500034079 sec
Decode latency: 2.551067841006443 sec
Time for inference 3: 2.81 sec total, 2918.56 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13252.80 GB/s
FLOPS achieved: 39.76 TF/s

Prefill latency: 0.25422504800371826 sec
Decode latency: 2.552535405033268 sec
Time for inference 4: 2.81 sec total, 2916.37 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13242.86 GB/s
FLOPS achieved: 39.73 TF/s

Prefill latency: 0.2536292589502409 sec
Decode latency: 2.5533758000237867 sec
Time for inference 5: 2.81 sec total, 2916.04 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13241.35 GB/s
FLOPS achieved: 39.72 TF/s

Prefill latency: 0.2536916109966114 sec
Decode latency: 2.5536081620957702 sec
Time for inference 6: 2.81 sec total, 2915.62 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13239.44 GB/s
FLOPS achieved: 39.72 TF/s

Prefill latency: 0.2538808509707451 sec
Decode latency: 2.5509484040085226 sec
Time for inference 7: 2.81 sec total, 2918.44 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13252.26 GB/s
FLOPS achieved: 39.76 TF/s

Prefill latency: 0.25435774703510106 sec
Decode latency: 2.5512082350905985 sec
Time for inference 8: 2.81 sec total, 2917.62 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13248.51 GB/s
FLOPS achieved: 39.75 TF/s

Prefill latency: 0.2538828579708934 sec
Decode latency: 2.5526662409538403 sec
Time for inference 9: 2.81 sec total, 2916.48 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13243.33 GB/s
FLOPS achieved: 39.73 TF/s

Prefill latency: 0.25483334506861866 sec
Decode latency: 2.55193929199595 sec
Time for inference 10: 2.81 sec total, 2916.41 tokens/sec
Decode latency: 2.55 sec
Prefill latency: 0.25 sec
Bandwidth achieved: 13243.04 GB/s
FLOPS achieved: 39.73 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 2.5523 sec
Average prefill latency: 0.2539 sec
Average tokens/sec: 2917.04
Memory used: 15.05 GB
Done. we are killing the process
[rank2]:[W1203 13:54:17.152673134 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1203 13:54:17.256057271 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1203 13:54:17.309824704 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1203 13:54:17.384432467 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
