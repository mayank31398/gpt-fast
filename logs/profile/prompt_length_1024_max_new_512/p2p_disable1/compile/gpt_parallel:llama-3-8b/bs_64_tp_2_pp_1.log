W1203 15:22:50.691000 2023871 site-packages/torch/distributed/run.py:793] 
W1203 15:22:50.691000 2023871 site-packages/torch/distributed/run.py:793] *****************************************
W1203 15:22:50.691000 2023871 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1203 15:22:50.691000 2023871 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=17408, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.10 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 43.549701596959494 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 40.604956859955564 sec
Compilation time: 84.22 seconds
Compilation time: 84.16 seconds
Prefill latency: 2.973055677022785 sec
Decode latency: 6.778587548993528 sec
Prefill latency: 2.967400401015766 sec
Decode latency: 6.784696832066402 sec
Prefill latency: 2.980161210987717 sec
Decode latency: 6.784760175039992 sec
Prefill latency: 2.976601032074541 sec
Decode latency: 6.785461340099573 sec
Prefill latency: 2.9825684590032324 sec
Decode latency: 6.784102284000255 sec
Time for inference 1: 9.77 sec total, 3354.43 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26936.93 GB/s
FLOPS achieved: 80.81 TF/s

Prefill latency: 2.9808961680391803 sec
Decode latency: 6.785119305015542 sec
Time for inference 2: 9.77 sec total, 3354.71 tokens/sec
Decode latency: 6.79 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26939.25 GB/s
FLOPS achieved: 80.82 TF/s

Prefill latency: 2.9781404049135745 sec
Decode latency: 6.783769236062653 sec
Time for inference 3: 9.76 sec total, 3356.14 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26950.70 GB/s
FLOPS achieved: 80.85 TF/s

Prefill latency: 2.9800711369607598 sec
Decode latency: 6.783470137044787 sec
Time for inference 4: 9.77 sec total, 3355.53 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26945.77 GB/s
FLOPS achieved: 80.84 TF/s

Prefill latency: 2.974565156036988 sec
Decode latency: 6.784743470023386 sec
Time for inference 5: 9.76 sec total, 3357.02 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.97 sec
Bandwidth achieved: 26957.78 GB/s
FLOPS achieved: 80.87 TF/s

Prefill latency: 2.979522738023661 sec
Decode latency: 6.78290520911105 sec
Time for inference 6: 9.76 sec total, 3355.96 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26949.23 GB/s
FLOPS achieved: 80.85 TF/s

Prefill latency: 2.9780478139873594 sec
Decode latency: 6.784966649021953 sec
Time for inference 7: 9.76 sec total, 3355.66 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26946.84 GB/s
FLOPS achieved: 80.84 TF/s

Prefill latency: 2.973963998025283 sec
Decode latency: 6.784539368003607 sec
Time for inference 8: 9.76 sec total, 3357.28 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.97 sec
Bandwidth achieved: 26959.87 GB/s
FLOPS achieved: 80.88 TF/s

Prefill latency: 2.9834535479312763 sec
Decode latency: 6.782230447977781 sec
Time for inference 9: 9.77 sec total, 3354.82 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26940.10 GB/s
FLOPS achieved: 80.82 TF/s

Prefill latency: 2.9762847729725763 sec
Decode latency: 6.784402556018904 sec
Time for inference 10: 9.76 sec total, 3356.49 tokens/sec
Decode latency: 6.78 sec
Prefill latency: 2.98 sec
Bandwidth achieved: 26953.48 GB/s
FLOPS achieved: 80.86 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 6.7840 sec
Average prefill latency: 2.9788 sec
Average tokens/sec: 3355.80
Memory used: 55.85 GB
Done. we are killing the process
[rank1]:[W1203 15:26:38.177376432 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1203 15:26:38.225326452 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
