W1203 15:26:42.562000 2025408 site-packages/torch/distributed/run.py:793] 
W1203 15:26:42.562000 2025408 site-packages/torch/distributed/run.py:793] *****************************************
W1203 15:26:42.562000 2025408 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1203 15:26:42.562000 2025408 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTParallel(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=4096, out_features=8704, bias=False)
        (wo): Linear(in_features=1024, out_features=4096, bias=False)
        (w2): Linear(in_features=3584, out_features=4096, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.20 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 43.136802147026174 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 44.9579406499397 sec
Compilation time: 88.17 seconds
Compilation time: 88.12 seconds
Compilation time: 88.16 seconds
Compilation time: 88.10 seconds
Prefill latency: 1.0022305350285023 sec
Decode latency: 4.039598162053153 sec
Prefill latency: 1.0058770090108737 sec
Decode latency: 4.0434694399591535 sec
Prefill latency: 1.005774379009381 sec
Decode latency: 4.042208241065964 sec
Prefill latency: 1.0031960241030902 sec
Decode latency: 4.043342979974113 sec
Prefill latency: 1.0078578520333394 sec
Decode latency: 4.042886787909083 sec
Time for inference 1: 5.05 sec total, 6484.97 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29445.66 GB/s
FLOPS achieved: 88.34 TF/s

Prefill latency: 1.0065797170391306 sec
Decode latency: 4.042473959038034 sec
Time for inference 2: 5.05 sec total, 6487.00 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29454.91 GB/s
FLOPS achieved: 88.36 TF/s

Prefill latency: 1.0061021459987387 sec
Decode latency: 4.040562349953689 sec
Time for inference 3: 5.05 sec total, 6490.60 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29471.23 GB/s
FLOPS achieved: 88.41 TF/s

Prefill latency: 1.0055117659503594 sec
Decode latency: 4.043699584086426 sec
Time for inference 4: 5.05 sec total, 6487.11 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29455.41 GB/s
FLOPS achieved: 88.37 TF/s

Prefill latency: 1.0048055140068755 sec
Decode latency: 4.0442209909670055 sec
Time for inference 5: 5.05 sec total, 6487.03 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.00 sec
Bandwidth achieved: 29455.02 GB/s
FLOPS achieved: 88.37 TF/s

Prefill latency: 1.0086239100201055 sec
Decode latency: 4.045495493104681 sec
Time for inference 6: 5.06 sec total, 6480.84 tokens/sec
Decode latency: 4.05 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29426.94 GB/s
FLOPS achieved: 88.28 TF/s

Prefill latency: 1.0083861529128626 sec
Decode latency: 4.044593208003789 sec
Time for inference 7: 5.05 sec total, 6482.32 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29433.63 GB/s
FLOPS achieved: 88.30 TF/s

Prefill latency: 1.004436908988282 sec
Decode latency: 4.042284703929909 sec
Time for inference 8: 5.05 sec total, 6490.49 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.00 sec
Bandwidth achieved: 29470.76 GB/s
FLOPS achieved: 88.41 TF/s

Prefill latency: 1.008771902997978 sec
Decode latency: 4.04405896901153 sec
Time for inference 9: 5.05 sec total, 6482.66 tokens/sec
Decode latency: 4.04 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29435.18 GB/s
FLOPS achieved: 88.31 TF/s

Prefill latency: 1.006961065926589 sec
Decode latency: 4.045706459903158 sec
Time for inference 10: 5.05 sec total, 6482.53 tokens/sec
Decode latency: 4.05 sec
Prefill latency: 1.01 sec
Bandwidth achieved: 29434.59 GB/s
FLOPS achieved: 88.30 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 4.0436 sec
Average prefill latency: 1.0068 sec
Average tokens/sec: 6485.55
Memory used: 43.49 GB
Done. we are killing the process
[rank1]:[W1203 15:29:28.187628481 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1203 15:29:28.273379609 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1203 15:29:28.414903113 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1203 15:29:28.417226971 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
