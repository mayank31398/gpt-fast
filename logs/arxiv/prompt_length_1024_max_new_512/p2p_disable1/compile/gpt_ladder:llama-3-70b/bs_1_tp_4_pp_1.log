W1208 17:28:35.505000 403166 site-packages/torch/distributed/run.py:793] 
W1208 17:28:35.505000 403166 site-packages/torch/distributed/run.py:793] *****************************************
W1208 17:28:35.505000 403166 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1208 17:28:35.505000 403166 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTLadder(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.46 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 81.33598695881665 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 101.37265205569565 sec
Compilation time: 182.69 seconds
Compilation time: 182.71 seconds
Compilation time: 182.75 seconds
Compilation time: 182.71 seconds
Prefill latency: 0.12352200038731098 sec
Decode latency: 7.495618250221014 sec
Prefill latency: 0.1207180805504322 sec
Decode latency: 7.494947828352451 sec
Prefill latency: 0.12095331214368343 sec
Decode latency: 7.495585767552257 sec
Prefill latency: 0.12222849763929844 sec
Decode latency: 7.495768468827009 sec
Prefill latency: 0.12093460746109486 sec
Decode latency: 7.495641218498349 sec
Time for inference 1: 7.62 sec total, 67.20 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.22 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.1206913348287344 sec
Decode latency: 7.4950353763997555 sec
Time for inference 2: 7.62 sec total, 67.20 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.50 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.12106299586594105 sec
Decode latency: 7.496055791154504 sec
Time for inference 3: 7.62 sec total, 67.19 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.09 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.12085570208728313 sec
Decode latency: 7.4952992014586926 sec
Time for inference 4: 7.62 sec total, 67.20 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.42 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.12082318589091301 sec
Decode latency: 7.4950299225747585 sec
Time for inference 5: 7.62 sec total, 67.21 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.53 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.12090110592544079 sec
Decode latency: 7.495298404246569 sec
Time for inference 6: 7.62 sec total, 67.20 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.36 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.12057295627892017 sec
Decode latency: 7.4953482914716005 sec
Time for inference 7: 7.62 sec total, 67.21 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.57 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.1208348497748375 sec
Decode latency: 7.494766518473625 sec
Time for inference 8: 7.62 sec total, 67.21 tokens/sec
Decode latency: 7.49 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.55 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.121274434030056 sec
Decode latency: 7.49576161056757 sec
Time for inference 9: 7.62 sec total, 67.19 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2441.08 GB/s
FLOPS achieved: 7.32 TF/s

Prefill latency: 0.1216950248926878 sec
Decode latency: 7.498571835458279 sec
Time for inference 10: 7.62 sec total, 67.16 tokens/sec
Decode latency: 7.50 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 2440.03 GB/s
FLOPS achieved: 7.32 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 7.4957 sec
Average prefill latency: 0.1210 sec
Average tokens/sec: 67.20
Memory used: 39.51 GB
Done. we are killing the process
[rank0]:[W1208 17:33:33.190234766 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1208 17:33:33.225704016 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1208 17:33:34.420680010 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1208 17:33:34.471924686 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
