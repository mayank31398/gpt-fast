W1209 09:32:42.575000 623279 site-packages/torch/distributed/run.py:793] 
W1209 09:32:42.575000 623279 site-packages/torch/distributed/run.py:793] *****************************************
W1209 09:32:42.575000 623279 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1209 09:32:42.575000 623279 site-packages/torch/distributed/run.py:793] *****************************************
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
flash_kv_decode is set to False
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
our world size=4
Using device=cuda
Loading model ...
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.41 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 171.32792541850358 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 151.23026422783732 sec
Compilation time: 322.56 seconds
Compilation time: 322.51 seconds
Compilation time: 322.56 seconds
Compilation time: 322.56 seconds
Prefill latency: 7.684754375368357 sec
Decode latency: 20.486618284136057 sec
Prefill latency: 6.995050753466785 sec
Decode latency: 20.31376314535737 sec
Prefill latency: 7.0083721950650215 sec
Decode latency: 20.315197666175663 sec
Prefill latency: 7.00471318513155 sec
Decode latency: 20.314089756458998 sec
Prefill latency: 7.011112743057311 sec
Decode latency: 20.31385027989745 sec
Time for inference 1: 27.33 sec total, 1199.07 tokens/sec
Decode latency: 20.31 sec
Prefill latency: 7.01 sec
Bandwidth achieved: 43561.76 GB/s
FLOPS achieved: 130.69 TF/s

Prefill latency: 6.996846290305257 sec
Decode latency: 20.309887661598623 sec
Time for inference 2: 27.31 sec total, 1199.88 tokens/sec
Decode latency: 20.31 sec
Prefill latency: 7.00 sec
Bandwidth achieved: 43590.89 GB/s
FLOPS achieved: 130.77 TF/s

Prefill latency: 6.991889770142734 sec
Decode latency: 20.31547989230603 sec
Time for inference 3: 27.31 sec total, 1199.84 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 6.99 sec
Bandwidth achieved: 43589.62 GB/s
FLOPS achieved: 130.77 TF/s

Prefill latency: 6.993338552303612 sec
Decode latency: 20.318181563168764 sec
Time for inference 4: 27.31 sec total, 1199.67 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 6.99 sec
Bandwidth achieved: 43583.32 GB/s
FLOPS achieved: 130.75 TF/s

Prefill latency: 6.9998898366466165 sec
Decode latency: 20.307282861322165 sec
Time for inference 5: 27.31 sec total, 1199.85 tokens/sec
Decode latency: 20.31 sec
Prefill latency: 7.00 sec
Bandwidth achieved: 43590.13 GB/s
FLOPS achieved: 130.77 TF/s

Prefill latency: 6.99105885066092 sec
Decode latency: 20.321092966012657 sec
Time for inference 6: 27.32 sec total, 1199.63 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 6.99 sec
Bandwidth achieved: 43582.10 GB/s
FLOPS achieved: 130.75 TF/s

Prefill latency: 6.997603884898126 sec
Decode latency: 20.306089790537953 sec
Time for inference 7: 27.31 sec total, 1200.01 tokens/sec
Decode latency: 20.31 sec
Prefill latency: 7.00 sec
Bandwidth achieved: 43595.64 GB/s
FLOPS achieved: 130.79 TF/s

Prefill latency: 6.9929497465491295 sec
Decode latency: 20.319862132892013 sec
Time for inference 8: 27.32 sec total, 1199.61 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 6.99 sec
Bandwidth achieved: 43581.38 GB/s
FLOPS achieved: 130.74 TF/s

Prefill latency: 6.997321196831763 sec
Decode latency: 20.320791539736092 sec
Time for inference 9: 27.32 sec total, 1199.38 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 7.00 sec
Bandwidth achieved: 43572.93 GB/s
FLOPS achieved: 130.72 TF/s

Prefill latency: 7.0008237371221185 sec
Decode latency: 20.320074182003736 sec
Time for inference 10: 27.32 sec total, 1199.25 tokens/sec
Decode latency: 20.32 sec
Prefill latency: 7.00 sec
Bandwidth achieved: 43568.22 GB/s
FLOPS achieved: 130.70 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 20.3153 sec
Average prefill latency: 6.9973 sec
Average tokens/sec: 1199.62
Memory used: 81.99 GB
Done. we are killing the process
[rank0]:[W1209 09:44:37.786767815 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
