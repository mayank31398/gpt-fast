W1208 17:02:36.647000 397254 site-packages/torch/distributed/run.py:793] 
W1208 17:02:36.647000 397254 site-packages/torch/distributed/run.py:793] *****************************************
W1208 17:02:36.647000 397254 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1208 17:02:36.647000 397254 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.30 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 92.14040644280612 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 112.8472834546119 sec
Compilation time: 204.65 seconds
Compilation time: 204.99 seconds
Compilation time: 204.73 seconds
Compilation time: 204.65 seconds
Prefill latency: 8.163569111377 sec
Decode latency: 20.26686662621796 sec
Prefill latency: 7.2646498922258615 sec
Decode latency: 20.26634488068521 sec
Prefill latency: 7.275175848975778 sec
Decode latency: 20.263844944536686 sec
Prefill latency: 7.285566346719861 sec
Decode latency: 20.271453680470586 sec
Prefill latency: 7.2734630443155766 sec
Decode latency: 20.272801147773862 sec
Time for inference 1: 27.55 sec total, 1189.47 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.27 sec
Bandwidth achieved: 43212.72 GB/s
FLOPS achieved: 129.64 TF/s

Prefill latency: 7.2757602725178 sec
Decode latency: 20.273301443085074 sec
Time for inference 2: 27.55 sec total, 1189.35 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.28 sec
Bandwidth achieved: 43208.42 GB/s
FLOPS achieved: 129.63 TF/s

Prefill latency: 7.286079799756408 sec
Decode latency: 20.275368954986334 sec
Time for inference 3: 27.56 sec total, 1188.79 tokens/sec
Decode latency: 20.28 sec
Prefill latency: 7.29 sec
Bandwidth achieved: 43188.13 GB/s
FLOPS achieved: 129.56 TF/s

Prefill latency: 7.298640480265021 sec
Decode latency: 20.2757597155869 sec
Time for inference 4: 27.58 sec total, 1188.25 tokens/sec
Decode latency: 20.28 sec
Prefill latency: 7.30 sec
Bandwidth achieved: 43168.37 GB/s
FLOPS achieved: 129.51 TF/s

Prefill latency: 7.310426147654653 sec
Decode latency: 20.273903904482722 sec
Time for inference 5: 27.59 sec total, 1187.83 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.31 sec
Bandwidth achieved: 43153.33 GB/s
FLOPS achieved: 129.46 TF/s

Prefill latency: 7.312456866726279 sec
Decode latency: 20.272981574758887 sec
Time for inference 6: 27.59 sec total, 1187.78 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.31 sec
Bandwidth achieved: 43151.51 GB/s
FLOPS achieved: 129.45 TF/s

Prefill latency: 7.295874208211899 sec
Decode latency: 20.273751512169838 sec
Time for inference 7: 27.57 sec total, 1188.46 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.30 sec
Bandwidth achieved: 43176.22 GB/s
FLOPS achieved: 129.53 TF/s

Prefill latency: 7.302526164799929 sec
Decode latency: 20.27373351715505 sec
Time for inference 8: 27.58 sec total, 1188.18 tokens/sec
Decode latency: 20.27 sec
Prefill latency: 7.30 sec
Bandwidth achieved: 43165.83 GB/s
FLOPS achieved: 129.50 TF/s

Prefill latency: 7.2985053192824125 sec
Decode latency: 20.276669343933463 sec
Time for inference 9: 27.58 sec total, 1188.20 tokens/sec
Decode latency: 20.28 sec
Prefill latency: 7.30 sec
Bandwidth achieved: 43166.55 GB/s
FLOPS achieved: 129.50 TF/s

Prefill latency: 7.295504987239838 sec
Decode latency: 20.276881268247962 sec
Time for inference 10: 27.57 sec total, 1188.34 tokens/sec
Decode latency: 20.28 sec
Prefill latency: 7.30 sec
Bandwidth achieved: 43171.77 GB/s
FLOPS achieved: 129.52 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 20.2745 sec
Average prefill latency: 7.2949 sec
Average tokens/sec: 1188.46
Memory used: 81.30 GB
Done. we are killing the process
[rank0]:[W1208 17:12:36.693735622 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1208 17:12:36.107055599 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1208 17:12:36.238648962 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1208 17:12:37.443372511 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
