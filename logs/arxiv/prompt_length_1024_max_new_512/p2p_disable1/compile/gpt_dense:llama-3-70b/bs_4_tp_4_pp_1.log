W1208 16:31:20.918000 388309 site-packages/torch/distributed/run.py:793] 
W1208 16:31:20.918000 388309 site-packages/torch/distributed/run.py:793] *****************************************
W1208 16:31:20.918000 388309 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1208 16:31:20.918000 388309 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.73 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 79.02571202814579 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 100.25934259779751 sec
Compilation time: 179.50 secondsCompilation time: 179.29 seconds

Compilation time: 179.33 seconds
Compilation time: 179.31 seconds
Prefill latency: 0.4509742446243763 sec
Decode latency: 12.515771893784404 sec
Prefill latency: 0.44842241518199444 sec
Decode latency: 12.510850820690393 sec
Prefill latency: 0.45268396846950054 sec
Decode latency: 12.517533250153065 sec
Prefill latency: 0.450049189850688 sec
Decode latency: 12.514010736718774 sec
Prefill latency: 0.4503374397754669 sec
Decode latency: 12.51296342164278 sec
Time for inference 1: 12.97 sec total, 157.96 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5738.50 GB/s
FLOPS achieved: 17.22 TF/s

Prefill latency: 0.4487645626068115 sec
Decode latency: 12.510421238839626 sec
Time for inference 2: 12.96 sec total, 158.01 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5740.35 GB/s
FLOPS achieved: 17.22 TF/s

Prefill latency: 0.45062978006899357 sec
Decode latency: 12.512920815497637 sec
Time for inference 3: 12.97 sec total, 157.95 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5738.41 GB/s
FLOPS achieved: 17.22 TF/s

Prefill latency: 0.4496011398732662 sec
Decode latency: 12.514109943062067 sec
Time for inference 4: 12.97 sec total, 157.95 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5738.31 GB/s
FLOPS achieved: 17.21 TF/s

Prefill latency: 0.4499344862997532 sec
Decode latency: 12.514448342844844 sec
Time for inference 5: 12.97 sec total, 157.94 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5738.05 GB/s
FLOPS achieved: 17.21 TF/s

Prefill latency: 0.452714666724205 sec
Decode latency: 12.520745884627104 sec
Time for inference 6: 12.98 sec total, 157.83 tokens/sec
Decode latency: 12.52 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5734.05 GB/s
FLOPS achieved: 17.20 TF/s

Prefill latency: 0.4504594951868057 sec
Decode latency: 12.51360734179616 sec
Time for inference 7: 12.97 sec total, 157.95 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5738.19 GB/s
FLOPS achieved: 17.21 TF/s

Prefill latency: 0.44953228160738945 sec
Decode latency: 12.51553694345057 sec
Time for inference 8: 12.97 sec total, 157.94 tokens/sec
Decode latency: 12.52 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5737.78 GB/s
FLOPS achieved: 17.21 TF/s

Prefill latency: 0.44979059882462025 sec
Decode latency: 12.515216572210193 sec
Time for inference 9: 12.97 sec total, 157.94 tokens/sec
Decode latency: 12.52 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5737.81 GB/s
FLOPS achieved: 17.21 TF/s

Prefill latency: 0.4526854585856199 sec
Decode latency: 12.51384967751801 sec
Time for inference 10: 12.97 sec total, 157.92 tokens/sec
Decode latency: 12.51 sec
Prefill latency: 0.45 sec
Bandwidth achieved: 5737.09 GB/s
FLOPS achieved: 17.21 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 12.5144 sec
Average prefill latency: 0.4504 sec
Average tokens/sec: 157.94
Memory used: 41.76 GB
Done. we are killing the process
[rank3]:[W1208 16:37:31.240192733 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1208 16:37:32.714139899 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1208 16:37:32.880476411 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1208 16:37:32.109199726 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
