W1208 16:48:03.956000 393000 site-packages/torch/distributed/run.py:793] 
W1208 16:48:03.956000 393000 site-packages/torch/distributed/run.py:793] *****************************************
W1208 16:48:03.956000 393000 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1208 16:48:03.956000 393000 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=2560, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.34 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 83.96688458509743 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compilation time: 190.44 seconds
Compilation time: 190.51 seconds
Decode latency: 106.69401114992797 sec
Compilation time: 190.45 seconds
Compilation time: 190.66 seconds
Prefill latency: 1.7916297875344753 sec
Decode latency: 14.134410565719008 sec
Prefill latency: 1.7871232647448778 sec
Decode latency: 14.131739070639014 sec
Prefill latency: 1.788581993430853 sec
Decode latency: 14.134308818727732 sec
Prefill latency: 1.789683097973466 sec
Decode latency: 14.128834661096334 sec
Prefill latency: 1.7909836508333683 sec
Decode latency: 14.131420874968171 sec
Time for inference 1: 15.92 sec total, 514.42 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18688.54 GB/s
FLOPS achieved: 56.07 TF/s

Prefill latency: 1.7896224316209555 sec
Decode latency: 14.130132351070642 sec
Time for inference 2: 15.92 sec total, 514.51 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18692.06 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.7867277301847935 sec
Decode latency: 14.133393315598369 sec
Time for inference 3: 15.92 sec total, 514.50 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18691.39 GB/s
FLOPS achieved: 56.07 TF/s

Prefill latency: 1.7876662965863943 sec
Decode latency: 14.131644016131759 sec
Time for inference 4: 15.92 sec total, 514.52 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18692.23 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.7867479752749205 sec
Decode latency: 14.132421365007758 sec
Time for inference 5: 15.92 sec total, 514.53 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18692.53 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.7860656436532736 sec
Decode latency: 14.131962040439248 sec
Time for inference 6: 15.92 sec total, 514.56 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18693.86 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.7868876401335 sec
Decode latency: 14.131941774860024 sec
Time for inference 7: 15.92 sec total, 514.54 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18692.86 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.788333723321557 sec
Decode latency: 14.13119156472385 sec
Time for inference 8: 15.92 sec total, 514.51 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18692.03 GB/s
FLOPS achieved: 56.08 TF/s

Prefill latency: 1.7893849108368158 sec
Decode latency: 14.131304336711764 sec
Time for inference 9: 15.92 sec total, 514.48 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18690.88 GB/s
FLOPS achieved: 56.07 TF/s

Prefill latency: 1.785699874162674 sec
Decode latency: 14.131125634536147 sec
Time for inference 10: 15.92 sec total, 514.60 tokens/sec
Decode latency: 14.13 sec
Prefill latency: 1.79 sec
Bandwidth achieved: 18695.34 GB/s
FLOPS achieved: 56.09 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 14.1317 sec
Average prefill latency: 1.7878 sec
Average tokens/sec: 514.52
Memory used: 51.32 GB
Done. we are killing the process
[rank2]:[W1208 16:55:05.025792837 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W1208 16:55:06.490417086 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1208 16:55:06.537166797 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1208 16:55:06.657971771 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
