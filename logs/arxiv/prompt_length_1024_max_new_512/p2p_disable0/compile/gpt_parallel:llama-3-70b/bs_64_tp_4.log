W1210 14:56:59.108000 1065632 site-packages/torch/distributed/run.py:793] 
W1210 14:56:59.108000 1065632 site-packages/torch/distributed/run.py:793] *****************************************
W1210 14:56:59.108000 1065632 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1210 14:56:59.108000 1065632 site-packages/torch/distributed/run.py:793] *****************************************
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
flash_kv_decode is set to False
rank: 0, global_rank: 0, world_size: 4, global_world_size: 4
our world size=4
Using device=cuda
Loading model ...
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 3, global_rank: 3, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
rank: 1, global_rank: 1, world_size: 4, global_world_size: 4
rank: 2, global_rank: 2, world_size: 4, global_world_size: 4
GPTParallel(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=16896, bias=False)
        (wo): Linear(in_features=2048, out_features=8192, bias=False)
        (w2): Linear(in_features=7168, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Time to load model: 1.35 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 54.28862415533513 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 45.13631502445787 sec
Compilation time: 99.35 seconds
Compilation time: 99.57 seconds
Compilation time: 99.43 seconds
Compilation time: 99.48 seconds
Prefill latency: 7.8104528822004795 sec
Decode latency: 18.17732303775847 sec
Prefill latency: 6.793090170249343 sec
Decode latency: 18.174062128178775 sec
Prefill latency: 6.784475437365472 sec
Decode latency: 18.17476286459714 sec
Prefill latency: 6.798683416098356 sec
Decode latency: 18.174966862425208 sec
Prefill latency: 6.813545251265168 sec
Decode latency: 18.173511853441596 sec
Time for inference 1: 24.99 sec total, 1311.30 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.81 sec
Bandwidth achieved: 47637.07 GB/s
FLOPS achieved: 142.91 TF/s

Prefill latency: 6.800401383079588 sec
Decode latency: 18.177520769648254 sec
Time for inference 2: 24.98 sec total, 1311.78 tokens/sec
Decode latency: 18.18 sec
Prefill latency: 6.80 sec
Bandwidth achieved: 47654.53 GB/s
FLOPS achieved: 142.96 TF/s

Prefill latency: 6.802841973491013 sec
Decode latency: 18.17475301399827 sec
Time for inference 3: 24.98 sec total, 1311.80 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.80 sec
Bandwidth achieved: 47655.17 GB/s
FLOPS achieved: 142.97 TF/s

Prefill latency: 6.807390130124986 sec
Decode latency: 18.173314773477614 sec
Time for inference 4: 24.98 sec total, 1311.63 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.81 sec
Bandwidth achieved: 47649.15 GB/s
FLOPS achieved: 142.95 TF/s

Prefill latency: 6.806592611595988 sec
Decode latency: 18.17268962878734 sec
Time for inference 5: 24.98 sec total, 1311.70 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.81 sec
Bandwidth achieved: 47651.71 GB/s
FLOPS achieved: 142.96 TF/s

Prefill latency: 6.795405318029225 sec
Decode latency: 18.173866227269173 sec
Time for inference 6: 24.97 sec total, 1312.23 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.80 sec
Bandwidth achieved: 47670.83 GB/s
FLOPS achieved: 143.01 TF/s

Prefill latency: 6.820173860527575 sec
Decode latency: 18.171539190225303 sec
Time for inference 7: 24.99 sec total, 1311.05 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.82 sec
Bandwidth achieved: 47628.01 GB/s
FLOPS achieved: 142.88 TF/s

Prefill latency: 6.820563663728535 sec
Decode latency: 18.173891997896135 sec
Time for inference 8: 25.00 sec total, 1310.91 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.82 sec
Bandwidth achieved: 47622.82 GB/s
FLOPS achieved: 142.87 TF/s

Prefill latency: 6.807755270041525 sec
Decode latency: 18.173156450502574 sec
Time for inference 9: 24.98 sec total, 1311.61 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.81 sec
Bandwidth achieved: 47648.60 GB/s
FLOPS achieved: 142.95 TF/s

Prefill latency: 6.8116997526958585 sec
Decode latency: 18.17297539487481 sec
Time for inference 10: 24.99 sec total, 1311.42 tokens/sec
Decode latency: 18.17 sec
Prefill latency: 6.81 sec
Bandwidth achieved: 47641.50 GB/s
FLOPS achieved: 142.92 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 18.1737 sec
Average prefill latency: 6.8086 sec
Average tokens/sec: 1311.54
Memory used: 81.30 GB
Done. we are killing the process
[rank0]:[W1210 15:04:34.534944073 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
