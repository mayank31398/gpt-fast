W1209 01:44:53.299000 741037 site-packages/torch/distributed/run.py:793] 
W1209 01:44:53.299000 741037 site-packages/torch/distributed/run.py:793] *****************************************
W1209 01:44:53.299000 741037 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1209 01:44:53.299000 741037 site-packages/torch/distributed/run.py:793] *****************************************
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
flash_kv_decode is set to False
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
our world size=2
Using device=cuda
Loading model ...
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Time to load model: 1.44 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 85.23151730559766 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 106.84849567525089 sec
Compilation time: 192.08 seconds
Prefill latency: 0.754221735522151 sec
Compilation time: 194.32 seconds
Decode latency: 14.946620106697083 sec
Prefill latency: 0.7523388639092445 sec
Decode latency: 14.946493700146675 sec
Prefill latency: 0.7508584000170231 sec
Decode latency: 14.948009008541703 sec
Prefill latency: 0.7505434919148684 sec
Decode latency: 14.947281552478671 sec
Prefill latency: 0.7497255094349384 sec
Decode latency: 14.947469057515264 sec
Time for inference 1: 15.70 sec total, 130.45 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9203.81 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7504312489181757 sec
Decode latency: 14.946781363338232 sec
Time for inference 2: 15.70 sec total, 130.45 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9203.89 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7510392293334007 sec
Decode latency: 14.948182145133615 sec
Time for inference 3: 15.70 sec total, 130.43 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9202.60 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7506799288094044 sec
Decode latency: 14.949677692726254 sec
Time for inference 4: 15.70 sec total, 130.42 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9201.98 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7557660341262817 sec
Decode latency: 14.948739355430007 sec
Time for inference 5: 15.71 sec total, 130.39 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 9199.52 GB/s
FLOPS achieved: 27.60 TF/s

Prefill latency: 0.7500534411519766 sec
Decode latency: 14.949160499498248 sec
Time for inference 6: 15.70 sec total, 130.43 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9202.71 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7483540717512369 sec
Decode latency: 14.9497015979141 sec
Time for inference 7: 15.70 sec total, 130.44 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9203.31 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7475418224930763 sec
Decode latency: 14.948674850165844 sec
Time for inference 8: 15.70 sec total, 130.46 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9204.46 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7532867603003979 sec
Decode latency: 14.9472546428442 sec
Time for inference 9: 15.70 sec total, 130.42 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.75 sec
Bandwidth achieved: 9201.89 GB/s
FLOPS achieved: 27.61 TF/s

Prefill latency: 0.7550358679145575 sec
Decode latency: 14.947364458814263 sec
Time for inference 10: 15.70 sec total, 130.41 tokens/sec
Decode latency: 14.95 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 9200.93 GB/s
FLOPS achieved: 27.60 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 14.9483 sec
Average prefill latency: 0.7512 sec
Average tokens/sec: 130.43
Memory used: 77.51 GB
[rank0]:[W1209 01:51:49.072454056 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
[rank1]:[W1209 01:51:51.759676728 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 1]  using GPU 1 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1209 01:51:56.707128007 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
