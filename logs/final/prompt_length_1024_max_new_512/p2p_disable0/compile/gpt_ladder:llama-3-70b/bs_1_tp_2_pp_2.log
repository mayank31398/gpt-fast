W1201 09:09:18.047000 304751 site-packages/torch/distributed/run.py:793] 
W1201 09:09:18.047000 304751 site-packages/torch/distributed/run.py:793] *****************************************
W1201 09:09:18.047000 304751 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 09:09:18.047000 304751 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTLadder(
  (layers): ModuleList(
    (0-39): 40 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.12 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 104.25641356455162 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 108.93653647508472 sec
Compilation time: 213.19 seconds
Compilation time: 213.19 seconds
Compilation time: 213.20 seconds
Compilation time: 213.20 seconds
Prefill latency: 0.2029574871994555 sec
Decode latency: 13.494917769916356 sec
Prefill latency: 0.2012688801623881 sec
Decode latency: 13.49439521273598 sec
Prefill latency: 0.20155910402536392 sec
Decode latency: 13.494579751975834 sec
Prefill latency: 0.2012641243636608 sec
Decode latency: 13.494221947155893 sec
Prefill latency: 0.20185034722089767 sec
Decode latency: 13.494692313950509 sec
Time for inference 1: 13.70 sec total, 37.37 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.73 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20071857096627355 sec
Decode latency: 13.494596192613244 sec
Time for inference 2: 13.70 sec total, 37.38 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.87 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20433106180280447 sec
Decode latency: 13.493547016289085 sec
Time for inference 3: 13.70 sec total, 37.37 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.58 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20277297496795654 sec
Decode latency: 13.49419669015333 sec
Time for inference 4: 13.70 sec total, 37.37 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.71 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.2025269358418882 sec
Decode latency: 13.493005964905024 sec
Time for inference 5: 13.70 sec total, 37.38 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.80 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20282587641850114 sec
Decode latency: 13.49392283288762 sec
Time for inference 6: 13.70 sec total, 37.37 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.71 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20365129597485065 sec
Decode latency: 13.492496422957629 sec
Time for inference 7: 13.70 sec total, 37.38 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.80 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20244743395596743 sec
Decode latency: 13.492615202907473 sec
Time for inference 8: 13.70 sec total, 37.38 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.88 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20224989112466574 sec
Decode latency: 13.495617418084294 sec
Time for inference 9: 13.70 sec total, 37.37 tokens/sec
Decode latency: 13.50 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.62 GB/s
FLOPS achieved: 4.07 TF/s

Prefill latency: 0.20216287719085813 sec
Decode latency: 13.492969885934144 sec
Time for inference 10: 13.70 sec total, 37.38 tokens/sec
Decode latency: 13.49 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1357.86 GB/s
FLOPS achieved: 4.07 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 13.4938 sec
Average prefill latency: 0.2026 sec
Average tokens/sec: 37.37
Memory used: 37.65 GB
Done. we are killing the process
[rank0]:[W1201 09:16:09.043492845 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 09:16:09.050820301 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 09:16:10.543695212 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
