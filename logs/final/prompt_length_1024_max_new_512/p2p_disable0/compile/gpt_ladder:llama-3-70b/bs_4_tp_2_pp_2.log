W1201 09:26:59.508000 331298 site-packages/torch/distributed/run.py:793] 
W1201 09:26:59.508000 331298 site-packages/torch/distributed/run.py:793] *****************************************
W1201 09:26:59.508000 331298 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 09:26:59.508000 331298 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTLadder(
  (layers): ModuleList(
    (0-39): 40 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.14 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 110.56834581401199 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 100.14281578129157 secCompilation time: 210.73 seconds

Compilation time: 210.72 seconds
Compilation time: 210.73 seconds
Compilation time: 210.72 seconds
Prefill latency: 0.8377590291202068 sec
Decode latency: 15.399002488236874 sec
Prefill latency: 0.8378914799541235 sec
Decode latency: 15.39621140807867 sec
Prefill latency: 0.8401660518720746 sec
Decode latency: 15.397798218298703 sec
Prefill latency: 0.8393426979891956 sec
Decode latency: 15.396729928907007 sec
Prefill latency: 0.8387004579417408 sec
Decode latency: 15.39631931297481 sec
Time for inference 1: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.83 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8386792172677815 sec
Decode latency: 15.39619346614927 sec
Time for inference 2: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.86 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8383020898327231 sec
Decode latency: 15.395980614237487 sec
Time for inference 3: 16.24 sec total, 126.13 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.96 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8397458652034402 sec
Decode latency: 15.396121961064637 sec
Time for inference 4: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.59 GB/s
FLOPS achieved: 13.74 TF/s

Prefill latency: 0.8373664868995547 sec
Decode latency: 15.396175448782742 sec
Time for inference 5: 16.24 sec total, 126.14 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4582.32 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8398713609203696 sec
Decode latency: 15.396125389728695 sec
Time for inference 6: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.54 GB/s
FLOPS achieved: 13.74 TF/s

Prefill latency: 0.8407203713431954 sec
Decode latency: 15.394074898213148 sec
Time for inference 7: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.39 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.89 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8387320898473263 sec
Decode latency: 15.3963168351911 sec
Time for inference 8: 16.24 sec total, 126.12 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.84 GB/s
FLOPS achieved: 13.75 TF/s

Prefill latency: 0.8403338599018753 sec
Decode latency: 15.395894289016724 sec
Time for inference 9: 16.24 sec total, 126.11 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4581.53 GB/s
FLOPS achieved: 13.74 TF/s

Prefill latency: 0.8432423742488027 sec
Decode latency: 15.395585046615452 sec
Time for inference 10: 16.24 sec total, 126.09 tokens/sec
Decode latency: 15.40 sec
Prefill latency: 0.84 sec
Bandwidth achieved: 4580.79 GB/s
FLOPS achieved: 13.74 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 15.3959 sec
Average prefill latency: 0.8396 sec
Average tokens/sec: 126.12
Memory used: 40.81 GB
Done. we are killing the process
[rank0]:[W1201 09:34:24.419807900 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 09:34:24.443878792 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 09:34:25.627883028 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
