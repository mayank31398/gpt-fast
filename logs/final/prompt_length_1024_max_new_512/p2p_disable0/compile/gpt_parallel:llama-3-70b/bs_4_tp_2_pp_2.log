W1201 21:59:47.215000 1219346 site-packages/torch/distributed/run.py:793] 
W1201 21:59:47.215000 1219346 site-packages/torch/distributed/run.py:793] *****************************************
W1201 21:59:47.215000 1219346 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 21:59:47.215000 1219346 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.06 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 124.98249728605151 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 104.12582449591719 secCompilation time: 229.12 seconds

Compilation time: 229.18 seconds
Compilation time: 229.14 seconds
Compilation time: 229.11 seconds
Prefill latency: 0.762608160963282 sec
Decode latency: 15.858620247920044 sec
Prefill latency: 0.7639006109675393 sec
Decode latency: 15.858361272024922 sec
Prefill latency: 0.7638349550543353 sec
Decode latency: 15.858878041966818 sec
Prefill latency: 0.7657235679216683 sec
Decode latency: 15.859699005028233 sec
Prefill latency: 0.7659374889917672 sec
Decode latency: 15.859541777987033 sec
Time for inference 1: 16.63 sec total, 123.16 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.28 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.7631785309640691 sec
Decode latency: 15.858476547058672 sec
Time for inference 2: 16.62 sec total, 123.19 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4475.31 GB/s
FLOPS achieved: 13.43 TF/s

Prefill latency: 0.7651412960840389 sec
Decode latency: 15.859734590048902 sec
Time for inference 3: 16.63 sec total, 123.17 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.45 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.76334519602824 sec
Decode latency: 15.857843982987106 sec
Time for inference 4: 16.62 sec total, 123.20 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4475.50 GB/s
FLOPS achieved: 13.43 TF/s

Prefill latency: 0.7654208110179752 sec
Decode latency: 15.858403353020549 sec
Time for inference 5: 16.63 sec total, 123.18 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.75 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.7661043769912794 sec
Decode latency: 15.85845803306438 sec
Time for inference 6: 16.63 sec total, 123.18 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.65 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.7662848519394174 sec
Decode latency: 15.857836784911342 sec
Time for inference 7: 16.63 sec total, 123.18 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.72 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.7635359429987147 sec
Decode latency: 15.860013992059976 sec
Time for inference 8: 16.63 sec total, 123.18 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4474.77 GB/s
FLOPS achieved: 13.42 TF/s

Prefill latency: 0.7637288119876757 sec
Decode latency: 15.857905276003294 sec
Time for inference 9: 16.62 sec total, 123.20 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4475.37 GB/s
FLOPS achieved: 13.43 TF/s

Prefill latency: 0.7650137769524008 sec
Decode latency: 15.85844153596554 sec
Time for inference 10: 16.63 sec total, 123.18 tokens/sec
Decode latency: 15.86 sec
Prefill latency: 0.77 sec
Bandwidth achieved: 4474.85 GB/s
FLOPS achieved: 13.42 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 15.8587 sec
Average prefill latency: 0.7648 sec
Average tokens/sec: 123.18
Memory used: 40.70 GB
Done. we are killing the process
[rank0]:[W1201 22:07:36.524430906 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 22:07:36.578517949 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 22:07:37.252789275 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
