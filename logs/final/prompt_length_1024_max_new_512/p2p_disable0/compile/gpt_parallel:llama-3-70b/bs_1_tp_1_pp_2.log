W1202 12:01:03.753000 1769233 site-packages/torch/distributed/run.py:793] 
W1202 12:01:03.753000 1769233 site-packages/torch/distributed/run.py:793] *****************************************
W1202 12:01:03.753000 1769233 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 12:01:03.753000 1769233 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=67584, bias=False)
        (wo): Linear(in_features=8192, out_features=8192, bias=False)
        (w2): Linear(in_features=28672, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.97 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 114.74665211001411 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 144.81738088279963 sec
Compilation time: 259.40 seconds
Compilation time: 259.57 seconds
Prefill latency: 0.37298174668103456 sec
Decode latency: 24.75247917464003 sec
Prefill latency: 0.37362980004400015 sec
Decode latency: 24.758162192068994 sec
Prefill latency: 0.37220938317477703 sec
Decode latency: 24.755857909098268 sec
Prefill latency: 0.3721216609701514 sec
Decode latency: 24.75824920507148 sec
Prefill latency: 0.3753907959908247 sec
Decode latency: 24.75825106119737 sec
Time for inference 1: 25.14 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.38 sec
Bandwidth achieved: 1437.10 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.37330316193401814 sec
Decode latency: 24.758550237864256 sec
Time for inference 2: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.21 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.376362896990031 sec
Decode latency: 24.758486193139106 sec
Time for inference 3: 25.14 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.38 sec
Bandwidth achieved: 1437.04 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.373881081584841 sec
Decode latency: 24.756912128068507 sec
Time for inference 4: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.28 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.3741584778763354 sec
Decode latency: 24.755153462756425 sec
Time for inference 5: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.35 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.37401159619912505 sec
Decode latency: 24.756022677756846 sec
Time for inference 6: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.31 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.3734028544276953 sec
Decode latency: 24.75833624182269 sec
Time for inference 7: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.20 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.3733687703497708 sec
Decode latency: 24.755842560902238 sec
Time for inference 8: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.37 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.37338259629905224 sec
Decode latency: 24.75608824007213 sec
Time for inference 9: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.34 GB/s
FLOPS achieved: 4.31 TF/s

Prefill latency: 0.37491177301853895 sec
Decode latency: 24.756113479845226 sec
Time for inference 10: 25.13 sec total, 20.37 tokens/sec
Decode latency: 24.76 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1437.25 GB/s
FLOPS achieved: 4.31 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 24.7570 sec
Average prefill latency: 0.3742 sec
Average tokens/sec: 20.37
Memory used: 72.12 GB
Done. we are killing the process
[rank0]:[W1202 12:11:21.141170909 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 12:11:21.499036872 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
