W1201 08:03:01.582000 214197 site-packages/torch/distributed/run.py:793] 
W1201 08:03:01.582000 214197 site-packages/torch/distributed/run.py:793] *****************************************
W1201 08:03:01.582000 214197 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 08:03:01.582000 214197 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.07 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 165.4258917090483 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 137.53500489331782 sec
Compilation time: 302.91 seconds
Compilation time: 302.91 seconds
Compilation time: 302.96 seconds
Compilation time: 302.96 seconds
Prefill latency: 3.1344385081902146 sec
Decode latency: 19.63704131729901 sec
Prefill latency: 3.136165830306709 sec
Decode latency: 19.636492344085127 sec
Prefill latency: 3.1310634799301624 sec
Decode latency: 19.63784497184679 sec
Prefill latency: 3.1369443112052977 sec
Decode latency: 19.63468099711463 sec
Prefill latency: 3.1434484533965588 sec
Decode latency: 19.63650545105338 sec
Time for inference 1: 22.78 sec total, 359.57 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13062.48 GB/s
FLOPS achieved: 39.19 TF/s

Prefill latency: 3.146113927010447 sec
Decode latency: 19.63598858565092 sec
Time for inference 2: 22.78 sec total, 359.54 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.15 sec
Bandwidth achieved: 13061.38 GB/s
FLOPS achieved: 39.18 TF/s

Prefill latency: 3.140225774142891 sec
Decode latency: 19.637259379029274 sec
Time for inference 3: 22.78 sec total, 359.61 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13063.84 GB/s
FLOPS achieved: 39.19 TF/s

Prefill latency: 3.140731603372842 sec
Decode latency: 19.63807036075741 sec
Time for inference 4: 22.78 sec total, 359.59 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13063.21 GB/s
FLOPS achieved: 39.19 TF/s

Prefill latency: 3.1415714398026466 sec
Decode latency: 19.636720129288733 sec
Time for inference 5: 22.78 sec total, 359.59 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13063.43 GB/s
FLOPS achieved: 39.19 TF/s

Prefill latency: 3.1405136780813336 sec
Decode latency: 19.643107616808265 sec
Time for inference 6: 22.79 sec total, 359.50 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13059.91 GB/s
FLOPS achieved: 39.18 TF/s

Prefill latency: 3.131852568127215 sec
Decode latency: 19.637994575314224 sec
Time for inference 7: 22.77 sec total, 359.73 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.13 sec
Bandwidth achieved: 13068.18 GB/s
FLOPS achieved: 39.20 TF/s

Prefill latency: 3.1350981798022985 sec
Decode latency: 19.63774769892916 sec
Time for inference 8: 22.78 sec total, 359.68 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13066.60 GB/s
FLOPS achieved: 39.20 TF/s

Prefill latency: 3.140479422174394 sec
Decode latency: 19.638433386106044 sec
Time for inference 9: 22.78 sec total, 359.59 tokens/sec
Decode latency: 19.64 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13063.17 GB/s
FLOPS achieved: 39.19 TF/s

Prefill latency: 3.1382416700944304 sec
Decode latency: 19.63361072493717 sec
Time for inference 10: 22.77 sec total, 359.69 tokens/sec
Decode latency: 19.63 sec
Prefill latency: 3.14 sec
Bandwidth achieved: 13067.01 GB/s
FLOPS achieved: 39.20 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 19.6375 sec
Average prefill latency: 3.1398 sec
Average tokens/sec: 359.61
Memory used: 52.75 GB
Done. we are killing the process
[rank1]:[W1201 08:13:30.888290536 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1201 08:13:30.154264881 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 08:13:31.142703956 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
