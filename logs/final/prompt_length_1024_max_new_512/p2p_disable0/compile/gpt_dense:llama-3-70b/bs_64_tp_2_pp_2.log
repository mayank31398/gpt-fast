W1201 08:28:53.996000 257663 site-packages/torch/distributed/run.py:793] 
W1201 08:28:53.996000 257663 site-packages/torch/distributed/run.py:793] *****************************************
W1201 08:28:53.996000 257663 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 08:28:53.996000 257663 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.05 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 288.59107360988855 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 165.16345029883087 secCompilation time: 453.83 seconds
Compilation time: 453.71 seconds

Compilation time: 453.70 seconds
Compilation time: 453.76 seconds
Prefill latency: 12.841337281744927 sec
Decode latency: 32.09544299868867 sec
Prefill latency: 12.641851322725415 sec
Decode latency: 32.10017302958295 sec
Prefill latency: 12.72938618203625 sec
Decode latency: 32.09679184202105 sec
Prefill latency: 12.651818240061402 sec
Decode latency: 32.09744347399101 sec
Prefill latency: 13.018290587235242 sec
Decode latency: 32.09777255915105 sec
Time for inference 1: 45.12 sec total, 726.26 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 13.02 sec
Bandwidth achieved: 26383.82 GB/s
FLOPS achieved: 79.15 TF/s

Prefill latency: 12.646362002938986 sec
Decode latency: 32.094775079749525 sec
Time for inference 2: 44.75 sec total, 732.33 tokens/sec
Decode latency: 32.09 sec
Prefill latency: 12.65 sec
Bandwidth achieved: 26604.05 GB/s
FLOPS achieved: 79.81 TF/s

Prefill latency: 13.008691637776792 sec
Decode latency: 32.09527529589832 sec
Time for inference 3: 45.11 sec total, 726.46 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 13.01 sec
Bandwidth achieved: 26390.80 GB/s
FLOPS achieved: 79.17 TF/s

Prefill latency: 12.659014533739537 sec
Decode latency: 32.097660162020475 sec
Time for inference 4: 44.76 sec total, 732.09 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 12.66 sec
Bandwidth achieved: 26595.46 GB/s
FLOPS achieved: 79.79 TF/s

Prefill latency: 13.018487923778594 sec
Decode latency: 32.096638459246606 sec
Time for inference 5: 45.12 sec total, 726.28 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 13.02 sec
Bandwidth achieved: 26384.33 GB/s
FLOPS achieved: 79.15 TF/s

Prefill latency: 12.642456475179642 sec
Decode latency: 32.097963818814605 sec
Time for inference 6: 44.74 sec total, 732.35 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 12.64 sec
Bandwidth achieved: 26605.07 GB/s
FLOPS achieved: 79.82 TF/s

Prefill latency: 12.991721750237048 sec
Decode latency: 32.097932967823 sec
Time for inference 7: 45.09 sec total, 726.69 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 12.99 sec
Bandwidth achieved: 26399.23 GB/s
FLOPS achieved: 79.20 TF/s

Prefill latency: 12.630564840044826 sec
Decode latency: 32.10086212493479 sec
Time for inference 8: 44.74 sec total, 732.49 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 12.63 sec
Bandwidth achieved: 26609.92 GB/s
FLOPS achieved: 79.83 TF/s

Prefill latency: 13.034934123978019 sec
Decode latency: 32.09754954976961 sec
Time for inference 9: 45.14 sec total, 725.99 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 13.03 sec
Bandwidth achieved: 26374.05 GB/s
FLOPS achieved: 79.12 TF/s

Prefill latency: 12.63339608721435 sec
Decode latency: 32.09773476514965 sec
Time for inference 10: 44.73 sec total, 732.51 tokens/sec
Decode latency: 32.10 sec
Prefill latency: 12.63 sec
Bandwidth achieved: 26610.65 GB/s
FLOPS achieved: 79.83 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 32.0974 sec
Average prefill latency: 12.8284 sec
Average tokens/sec: 729.34
Memory used: 81.30 GB
Done. we are killing the process
[rank0]:[W1201 08:47:03.904360875 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 08:47:03.910501467 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 08:47:04.565356051 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
