W1201 07:44:14.088000 185309 site-packages/torch/distributed/run.py:793] 
W1201 07:44:14.088000 185309 site-packages/torch/distributed/run.py:793] *****************************************
W1201 07:44:14.088000 185309 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 07:44:14.088000 185309 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.10 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 118.35394794680178 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compilation time: 244.79 seconds
Decode latency: 126.29509998206049 sec
Compilation time: 244.65 seconds
Compilation time: 244.72 seconds
Compilation time: 244.65 seconds
Prefill latency: 0.7611814858391881 sec
Decode latency: 16.284586455207318 sec
Prefill latency: 0.7579679749906063 sec
Decode latency: 16.282541091088206 sec
Prefill latency: 0.75982402311638 sec
Decode latency: 16.28315839730203 sec
Prefill latency: 0.7574447249062359 sec
Decode latency: 16.28281014924869 sec
Prefill latency: 0.7601238610222936 sec
Decode latency: 16.282332031056285 sec
Time for inference 1: 17.05 sec total, 120.15 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4364.91 GB/s
FLOPS achieved: 13.09 TF/s

Prefill latency: 0.756601395085454 sec
Decode latency: 16.284450395032763 sec
Time for inference 2: 17.04 sec total, 120.16 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.26 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7581533053889871 sec
Decode latency: 16.28409030009061 sec
Time for inference 3: 17.04 sec total, 120.15 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4364.94 GB/s
FLOPS achieved: 13.09 TF/s

Prefill latency: 0.7562711508944631 sec
Decode latency: 16.280897999648005 sec
Time for inference 4: 17.04 sec total, 120.19 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4366.17 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7579709249548614 sec
Decode latency: 16.28050344483927 sec
Time for inference 5: 17.04 sec total, 120.18 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.96 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.75823984015733 sec
Decode latency: 16.281823580153286 sec
Time for inference 6: 17.04 sec total, 120.17 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.49 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7581472848542035 sec
Decode latency: 16.281395946163684 sec
Time for inference 7: 17.04 sec total, 120.17 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.61 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7585224797949195 sec
Decode latency: 16.282625088933855 sec
Time for inference 8: 17.04 sec total, 120.16 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.24 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7575566591694951 sec
Decode latency: 16.282680762000382 sec
Time for inference 9: 17.04 sec total, 120.17 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.45 GB/s
FLOPS achieved: 13.10 TF/s

Prefill latency: 0.7576314280740917 sec
Decode latency: 16.281219098251313 sec
Time for inference 10: 17.04 sec total, 120.18 tokens/sec
Decode latency: 16.28 sec
Prefill latency: 0.76 sec
Bandwidth achieved: 4365.81 GB/s
FLOPS achieved: 13.10 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 16.2822 sec
Average prefill latency: 0.7579 sec
Average tokens/sec: 120.17
Memory used: 40.91 GB
Done. we are killing the process
[rank0]:[W1201 07:52:24.048579130 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 07:52:24.065593063 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 07:52:25.721977879 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
