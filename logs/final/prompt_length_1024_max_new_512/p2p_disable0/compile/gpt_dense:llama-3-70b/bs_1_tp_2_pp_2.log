W1201 07:23:00.087000 139169 site-packages/torch/distributed/run.py:793] 
W1201 07:23:00.087000 139169 site-packages/torch/distributed/run.py:793] *****************************************
W1201 07:23:00.087000 139169 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 07:23:00.087000 139169 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.07 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 130.7652293322608 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 151.00012417463586 sec
Compilation time: 281.82 seconds
Compilation time: 281.69 seconds
Compilation time: 281.77 seconds
Compilation time: 281.85 seconds
Prefill latency: 0.20354558108374476 sec
Decode latency: 14.27847405988723 sec
Prefill latency: 0.20154696376994252 sec
Decode latency: 14.277976779267192 sec
Prefill latency: 0.20275190379470587 sec
Decode latency: 14.279743002727628 sec
Prefill latency: 0.20117442216724157 sec
Decode latency: 14.280845941975713 sec
Prefill latency: 0.20196834160014987 sec
Decode latency: 14.278978026937693 sec
Time for inference 1: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.19 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.2013119193725288 sec
Decode latency: 14.2793107656762 sec
Time for inference 2: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.25 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20070184022188187 sec
Decode latency: 14.279318176675588 sec
Time for inference 3: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.31 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20034943195059896 sec
Decode latency: 14.279861345887184 sec
Time for inference 4: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.29 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20210860716179013 sec
Decode latency: 14.279917048756033 sec
Time for inference 5: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.14 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20161885116249323 sec
Decode latency: 14.279017291031778 sec
Time for inference 6: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.25 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20305687515065074 sec
Decode latency: 14.279989211820066 sec
Time for inference 7: 14.49 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.05 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20153502188622952 sec
Decode latency: 14.278451611287892 sec
Time for inference 8: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.22 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.19994841003790498 sec
Decode latency: 14.276965904980898 sec
Time for inference 9: 14.48 sec total, 35.36 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.60 GB/s
FLOPS achieved: 3.85 TF/s

Prefill latency: 0.20419029099866748 sec
Decode latency: 14.277474101167172 sec
Time for inference 10: 14.48 sec total, 35.35 tokens/sec
Decode latency: 14.28 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 1284.16 GB/s
FLOPS achieved: 3.85 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 14.2789 sec
Average prefill latency: 0.2017 sec
Average tokens/sec: 35.35
Memory used: 37.75 GB
Done. we are killing the process
[rank0]:[W1201 07:31:12.348660782 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 07:31:12.382628993 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 07:31:13.195572287 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
