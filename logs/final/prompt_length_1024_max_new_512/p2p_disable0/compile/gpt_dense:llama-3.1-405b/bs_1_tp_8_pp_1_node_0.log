W1202 22:28:14.633000 175781 site-packages/torch/distributed/run.py:793] 
W1202 22:28:14.633000 175781 site-packages/torch/distributed/run.py:793] *****************************************
W1202 22:28:14.633000 175781 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 22:28:14.633000 175781 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1, 2, 3, 4, 5, 6, 7]], mesh_dim_names=('pp', 'tp'))
[rank4]: Traceback (most recent call last):
[rank4]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank4]:     main(
[rank4]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank4]:     model = _load_model(model_name, device, precision)
[rank4]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank4]:     model = model.to_empty(device=device)
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank4]:     return self._apply(
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank4]:     module._apply(fn)
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank4]:     module._apply(fn)
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank4]:     module._apply(fn)
[rank4]:   [Previous line repeated 1 more time]
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank4]:     param_applied = fn(param)
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank4]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank4]:     result = fn(*args, **kwargs)
[rank4]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank4]:     return torch.empty_permuted(
[rank4]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 4 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank7]: Traceback (most recent call last):
[rank7]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank7]:     main(
[rank7]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank7]:     model = _load_model(model_name, device, precision)
[rank7]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank7]:     model = model.to_empty(device=device)
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank7]:     return self._apply(
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank7]:     module._apply(fn)
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank7]:     module._apply(fn)
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank7]:     module._apply(fn)
[rank7]:   [Previous line repeated 1 more time]
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank7]:     param_applied = fn(param)
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank7]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank7]:     result = fn(*args, **kwargs)
[rank7]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank7]:     return torch.empty_permuted(
[rank7]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 7 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank5]: Traceback (most recent call last):
[rank5]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank5]:     main(
[rank5]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank5]:     model = _load_model(model_name, device, precision)
[rank5]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank5]:     model = model.to_empty(device=device)
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank5]:     return self._apply(
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank5]:     module._apply(fn)
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank5]:     module._apply(fn)
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank5]:     module._apply(fn)
[rank5]:   [Previous line repeated 1 more time]
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank5]:     param_applied = fn(param)
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank5]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank5]:     result = fn(*args, **kwargs)
[rank5]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank5]:     return torch.empty_permuted(
[rank5]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 5 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank6]: Traceback (most recent call last):
[rank6]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank6]:     main(
[rank6]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank6]:     model = _load_model(model_name, device, precision)
[rank6]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank6]:     model = model.to_empty(device=device)
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank6]:     return self._apply(
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank6]:     module._apply(fn)
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank6]:     module._apply(fn)
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank6]:     module._apply(fn)
[rank6]:   [Previous line repeated 1 more time]
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank6]:     param_applied = fn(param)
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank6]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank6]:     result = fn(*args, **kwargs)
[rank6]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank6]:     return torch.empty_permuted(
[rank6]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 6 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank1]: Traceback (most recent call last):
[rank1]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank1]:     main(
[rank1]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank1]:     model = _load_model(model_name, device, precision)
[rank1]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank1]:     model = model.to_empty(device=device)
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank1]:     return self._apply(
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank1]:     module._apply(fn)
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank1]:     module._apply(fn)
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank1]:     module._apply(fn)
[rank1]:   [Previous line repeated 1 more time]
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank1]:     param_applied = fn(param)
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank1]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank1]:     result = fn(*args, **kwargs)
[rank1]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank1]:     return torch.empty_permuted(
[rank1]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 1 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank3]: Traceback (most recent call last):
[rank3]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank3]:     main(
[rank3]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank3]:     model = _load_model(model_name, device, precision)
[rank3]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank3]:     model = model.to_empty(device=device)
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank3]:     return self._apply(
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank3]:     module._apply(fn)
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank3]:     module._apply(fn)
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank3]:     module._apply(fn)
[rank3]:   [Previous line repeated 1 more time]
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank3]:     param_applied = fn(param)
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank3]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank3]:     result = fn(*args, **kwargs)
[rank3]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank3]:     return torch.empty_permuted(
[rank3]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 3 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank2]: Traceback (most recent call last):
[rank2]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank2]:     main(
[rank2]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank2]:     model = _load_model(model_name, device, precision)
[rank2]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank2]:     model = model.to_empty(device=device)
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank2]:     return self._apply(
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank2]:     module._apply(fn)
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank2]:     module._apply(fn)
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank2]:     module._apply(fn)
[rank2]:   [Previous line repeated 1 more time]
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank2]:     param_applied = fn(param)
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank2]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank2]:     result = fn(*args, **kwargs)
[rank2]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank2]:     return torch.empty_permuted(
[rank2]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 2 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 708, in <module>
[rank0]:     main(
[rank0]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 533, in main
[rank0]:     model = _load_model(model_name, device, precision)
[rank0]:   File "/home/charlie/skip-residual/gpt-fast/benchmark.py", line 440, in _load_model
[rank0]:     model = model.to_empty(device=device)
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1196, in to_empty
[rank0]:     return self._apply(
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank0]:     module._apply(fn)
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank0]:     module._apply(fn)
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 904, in _apply
[rank0]:     module._apply(fn)
[rank0]:   [Previous line repeated 1 more time]
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 931, in _apply
[rank0]:     param_applied = fn(param)
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1197, in <lambda>
[rank0]:     lambda t: torch.empty_like(t, device=device), recurse=recurse
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
[rank0]:     result = fn(*args, **kwargs)
[rank0]:   File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_refs/__init__.py", line 4969, in empty_like
[rank0]:     return torch.empty_permuted(
[rank0]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 208.00 MiB. GPU 0 has a total capacity of 79.33 GiB of which 135.44 MiB is free. Including non-PyTorch memory, this process has 79.19 GiB memory in use. Of the allocated memory 78.68 GiB is allocated by PyTorch, and 1.75 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank3]:[W1202 22:28:22.303305717 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 22:28:22.362250826 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 22:28:22.363991308 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank4]:[W1202 22:28:22.384924263 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank6]:[W1202 22:28:22.450196093 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1202 22:28:22.451819226 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank7]:[W1202 22:28:22.491440486 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank5]:[W1202 22:28:22.499900490 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
W1202 22:28:23.265000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175850 closing signal SIGTERM
W1202 22:28:23.268000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175851 closing signal SIGTERM
W1202 22:28:23.277000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175852 closing signal SIGTERM
W1202 22:28:23.277000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175853 closing signal SIGTERM
W1202 22:28:23.277000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175854 closing signal SIGTERM
W1202 22:28:23.277000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175855 closing signal SIGTERM
W1202 22:28:23.280000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:897] Sending process 175856 closing signal SIGTERM
E1202 22:28:23.938000 175781 site-packages/torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: 1) local_rank: 7 (pid: 175857) of binary: /home/charlie/anaconda3/envs/gpt-fast/bin/python
Traceback (most recent call last):
  File "/home/charlie/anaconda3/envs/gpt-fast/bin/torchrun", line 8, in <module>
    sys.exit(main())
  File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 355, in wrapper
    return f(*args, **kwargs)
  File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/distributed/run.py", line 919, in main
    run(args)
  File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/distributed/run.py", line 910, in run
    elastic_launch(
  File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 138, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 269, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
benchmark.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-12-02_22:28:23
  host      : mk-xii-01.cloud.together.ai
  rank      : 7 (local_rank: 7)
  exitcode  : 1 (pid: 175857)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
