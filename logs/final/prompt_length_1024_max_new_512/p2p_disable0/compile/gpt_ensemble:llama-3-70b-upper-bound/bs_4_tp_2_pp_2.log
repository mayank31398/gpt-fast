W1201 20:20:53.044000 1045585 site-packages/torch/distributed/run.py:793] 
W1201 20:20:53.044000 1045585 site-packages/torch/distributed/run.py:793] *****************************************
W1201 20:20:53.044000 1045585 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 20:20:53.044000 1045585 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTEnsemble(
  (layers): ModuleList(
    (0-39): 40 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.95 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 129.90558167989366 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 120.7584034599131 sec
Compilation time: 250.62 seconds
Compilation time: 250.43 seconds
Compilation time: 250.67 seconds
Compilation time: 250.59 seconds
Prefill latency: 0.7074566049268469 sec
Decode latency: 15.036896753008477 sec
Prefill latency: 0.7034045469481498 sec
Decode latency: 15.035968477954157 sec
Prefill latency: 0.7076872049365193 sec
Decode latency: 15.03605067008175 sec
Prefill latency: 0.7102013069670647 sec
Decode latency: 15.037106723058969 sec
Prefill latency: 0.7089402220444754 sec
Decode latency: 15.032895356998779 sec
Time for inference 1: 15.74 sec total, 130.08 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4725.52 GB/s
FLOPS achieved: 14.18 TF/s

Prefill latency: 0.7063523140968755 sec
Decode latency: 15.033505108905956 sec
Time for inference 2: 15.74 sec total, 130.09 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4726.08 GB/s
FLOPS achieved: 14.18 TF/s

Prefill latency: 0.706835348973982 sec
Decode latency: 15.03352175699547 sec
Time for inference 3: 15.74 sec total, 130.09 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4725.95 GB/s
FLOPS achieved: 14.18 TF/s

Prefill latency: 0.7079787539551035 sec
Decode latency: 15.037662053015083 sec
Time for inference 4: 15.75 sec total, 130.05 tokens/sec
Decode latency: 15.04 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4724.31 GB/s
FLOPS achieved: 14.17 TF/s

Prefill latency: 0.7093316069804132 sec
Decode latency: 15.032862311927602 sec
Time for inference 5: 15.75 sec total, 130.07 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4725.27 GB/s
FLOPS achieved: 14.18 TF/s

Prefill latency: 0.7096945840166882 sec
Decode latency: 15.034507909906097 sec
Time for inference 6: 15.75 sec total, 130.06 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4724.76 GB/s
FLOPS achieved: 14.17 TF/s

Prefill latency: 0.7094334020512179 sec
Decode latency: 15.03427487402223 sec
Time for inference 7: 15.75 sec total, 130.06 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4724.85 GB/s
FLOPS achieved: 14.17 TF/s

Prefill latency: 0.7105699731037021 sec
Decode latency: 15.034219359047711 sec
Time for inference 8: 15.75 sec total, 130.05 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4724.60 GB/s
FLOPS achieved: 14.17 TF/s

Prefill latency: 0.7067336649633944 sec
Decode latency: 15.03640360897407 sec
Time for inference 9: 15.75 sec total, 130.07 tokens/sec
Decode latency: 15.04 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4725.06 GB/s
FLOPS achieved: 14.18 TF/s

Prefill latency: 0.707928298972547 sec
Decode latency: 15.034199464018457 sec
Time for inference 10: 15.74 sec total, 130.07 tokens/sec
Decode latency: 15.03 sec
Prefill latency: 0.71 sec
Bandwidth achieved: 4725.38 GB/s
FLOPS achieved: 14.18 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 15.0344 sec
Average prefill latency: 0.7084 sec
Average tokens/sec: 130.07
Memory used: 42.35 GB
Done. we are killing the process
[rank0]:[W1201 20:28:51.469697236 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1201 20:28:51.762586015 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1201 20:28:52.243214409 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
