W1202 09:34:43.123000 1454204 site-packages/torch/distributed/run.py:793] 
W1202 09:34:43.123000 1454204 site-packages/torch/distributed/run.py:793] *****************************************
W1202 09:34:43.123000 1454204 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 09:34:43.123000 1454204 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.29 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 151.61132491193712 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 132.04869130405132 secCompilation time: 283.66 seconds

Compilation time: 283.62 seconds
Compilation time: 283.67 seconds
Compilation time: 283.66 seconds
Prefill latency: 1.4075694700004533 sec
Decode latency: 17.7460049650399 sec
Prefill latency: 1.403329620952718 sec
Decode latency: 17.746028903056867 sec
Prefill latency: 1.4015419419156387 sec
Decode latency: 17.748119148076512 sec
Prefill latency: 1.4069357350235805 sec
Decode latency: 17.74516157701146 sec
Prefill latency: 1.4025873430073261 sec
Decode latency: 17.74585471500177 sec
Time for inference 1: 19.15 sec total, 106.94 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3884.88 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4033843739889562 sec
Decode latency: 17.750199435045943 sec
Time for inference 2: 19.16 sec total, 106.91 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3883.88 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4012713419506326 sec
Decode latency: 17.74929633899592 sec
Time for inference 3: 19.15 sec total, 106.93 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3884.46 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.3999512819573283 sec
Decode latency: 17.74515847407747 sec
Time for inference 4: 19.15 sec total, 106.96 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3885.55 GB/s
FLOPS achieved: 11.66 TF/s

Prefill latency: 1.4055621550651267 sec
Decode latency: 17.74497559305746 sec
Time for inference 5: 19.15 sec total, 106.93 tokens/sec
Decode latency: 17.74 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 3884.46 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.403352948022075 sec
Decode latency: 17.746674519963562 sec
Time for inference 6: 19.15 sec total, 106.93 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3884.57 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4066739209229127 sec
Decode latency: 17.747240663971752 sec
Time for inference 7: 19.16 sec total, 106.91 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 3883.79 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4037325519602746 sec
Decode latency: 17.749211568036117 sec
Time for inference 8: 19.16 sec total, 106.91 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3883.99 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4046213440597057 sec
Decode latency: 17.74656476092059 sec
Time for inference 9: 19.15 sec total, 106.92 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3884.34 GB/s
FLOPS achieved: 11.65 TF/s

Prefill latency: 1.4042304259492084 sec
Decode latency: 17.745191769092344 sec
Time for inference 10: 19.15 sec total, 106.93 tokens/sec
Decode latency: 17.75 sec
Prefill latency: 1.40 sec
Bandwidth achieved: 3884.65 GB/s
FLOPS achieved: 11.65 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 17.7470 sec
Average prefill latency: 1.4035 sec
Average tokens/sec: 106.93
Memory used: 42.54 GB
Done. we are killing the process
[rank0]:[W1202 09:44:02.400749113 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 09:44:02.482945832 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 09:44:03.361580681 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
