W1202 12:47:29.977000 1787381 site-packages/torch/distributed/run.py:793] 
W1202 12:47:29.977000 1787381 site-packages/torch/distributed/run.py:793] *****************************************
W1202 12:47:29.977000 1787381 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 12:47:29.977000 1787381 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.31 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 32.8072420428507 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 48.669225602876395 sec
Compilation time: 81.52 secondsCompilation time: 81.48 seconds

Prefill latency: 0.3749867700971663 sec
Decode latency: 14.732563136145473 sec
Prefill latency: 0.3732229648157954 sec
Decode latency: 14.732912490144372 sec
Prefill latency: 0.3726973421871662 sec
Decode latency: 14.73342520231381 sec
Prefill latency: 0.37303780391812325 sec
Decode latency: 14.734536534175277 sec
Prefill latency: 0.3728377940133214 sec
Decode latency: 14.733546706847847 sec
Time for inference 1: 15.11 sec total, 33.89 tokens/sec
Decode latency: 14.73 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2391.04 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.37344311689957976 sec
Decode latency: 14.733978650998324 sec
Time for inference 2: 15.11 sec total, 33.89 tokens/sec
Decode latency: 14.73 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.89 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.37338321981951594 sec
Decode latency: 14.735244217794389 sec
Time for inference 3: 15.11 sec total, 33.88 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.68 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3742036488838494 sec
Decode latency: 14.735365092754364 sec
Time for inference 4: 15.11 sec total, 33.88 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.55 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3731281431391835 sec
Decode latency: 14.734706476330757 sec
Time for inference 5: 15.11 sec total, 33.89 tokens/sec
Decode latency: 14.73 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.80 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3734007771126926 sec
Decode latency: 14.734567350707948 sec
Time for inference 6: 15.11 sec total, 33.89 tokens/sec
Decode latency: 14.73 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.79 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3732179068028927 sec
Decode latency: 14.735532945021987 sec
Time for inference 7: 15.11 sec total, 33.88 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.66 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.37321564881131053 sec
Decode latency: 14.735581763088703 sec
Time for inference 8: 15.11 sec total, 33.88 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.67 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3731078435666859 sec
Decode latency: 14.735640082042664 sec
Time for inference 9: 15.11 sec total, 33.88 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 2390.65 GB/s
FLOPS achieved: 7.17 TF/s

Prefill latency: 0.3779179691337049 sec
Decode latency: 14.735405629035085 sec
Time for inference 10: 15.12 sec total, 33.87 tokens/sec
Decode latency: 14.74 sec
Prefill latency: 0.38 sec
Bandwidth achieved: 2389.95 GB/s
FLOPS achieved: 7.17 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 14.7350 sec
Average prefill latency: 0.3738 sec
Average tokens/sec: 33.88
Memory used: 74.09 GB
Done. we are killing the process
[rank0]:[W1202 12:52:28.528854236 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 12:52:28.667038795 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
