W1202 10:29:14.091000 1505781 site-packages/torch/distributed/run.py:793] 
W1202 10:29:14.091000 1505781 site-packages/torch/distributed/run.py:793] *****************************************
W1202 10:29:14.091000 1505781 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 10:29:14.091000 1505781 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.19 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 290.6162628639722 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 165.1225137580186 secCompilation time: 455.75 seconds
Compilation time: 455.71 seconds

Compilation time: 455.75 seconds
Compilation time: 455.74 seconds
Prefill latency: 23.176483170944266 sec
Decode latency: 39.620035634958185 sec
Prefill latency: 22.37129257293418 sec
Decode latency: 39.61061676591635 sec
Prefill latency: 22.858547864016145 sec
Decode latency: 39.619407774996944 sec
Prefill latency: 22.381538222078234 sec
Decode latency: 39.61535530502442 sec
Prefill latency: 22.76028521801345 sec
Decode latency: 39.62243309302721 sec
Time for inference 1: 62.39 sec total, 525.25 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.76 sec
Bandwidth achieved: 19081.28 GB/s
FLOPS achieved: 57.24 TF/s

Prefill latency: 22.47309453797061 sec
Decode latency: 39.61677776800934 sec
Time for inference 2: 62.09 sec total, 527.73 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.47 sec
Bandwidth achieved: 19171.32 GB/s
FLOPS achieved: 57.51 TF/s

Prefill latency: 22.873894394026138 sec
Decode latency: 39.62191028799862 sec
Time for inference 3: 62.50 sec total, 524.30 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.87 sec
Bandwidth achieved: 19046.79 GB/s
FLOPS achieved: 57.14 TF/s

Prefill latency: 22.408588607097045 sec
Decode latency: 39.622374825994484 sec
Time for inference 4: 62.03 sec total, 528.23 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.41 sec
Bandwidth achieved: 19189.52 GB/s
FLOPS achieved: 57.57 TF/s

Prefill latency: 22.889574429020286 sec
Decode latency: 39.61290109704714 sec
Time for inference 5: 62.51 sec total, 524.24 tokens/sec
Decode latency: 39.61 sec
Prefill latency: 22.89 sec
Bandwidth achieved: 19044.77 GB/s
FLOPS achieved: 57.13 TF/s

Prefill latency: 22.384000006015413 sec
Decode latency: 39.61595496698283 sec
Time for inference 6: 62.00 sec total, 528.49 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.38 sec
Bandwidth achieved: 19199.12 GB/s
FLOPS achieved: 57.60 TF/s

Prefill latency: 22.76274937891867 sec
Decode latency: 39.62099248403683 sec
Time for inference 7: 62.39 sec total, 525.24 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.76 sec
Bandwidth achieved: 19080.93 GB/s
FLOPS achieved: 57.24 TF/s

Prefill latency: 22.47657265898306 sec
Decode latency: 39.616556702996604 sec
Time for inference 8: 62.10 sec total, 527.69 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.48 sec
Bandwidth achieved: 19170.03 GB/s
FLOPS achieved: 57.51 TF/s

Prefill latency: 22.908882494084537 sec
Decode latency: 39.617562610888854 sec
Time for inference 9: 62.53 sec total, 524.04 tokens/sec
Decode latency: 39.62 sec
Prefill latency: 22.91 sec
Bandwidth achieved: 19037.53 GB/s
FLOPS achieved: 57.11 TF/s

Prefill latency: 22.386765268049203 sec
Decode latency: 39.61479535000399 sec
Time for inference 10: 62.00 sec total, 528.48 tokens/sec
Decode latency: 39.61 sec
Prefill latency: 22.39 sec
Bandwidth achieved: 19198.60 GB/s
FLOPS achieved: 57.60 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 39.6182 sec
Average prefill latency: 22.6324 sec
Average tokens/sec: 526.37
Memory used: 83.44 GB
Done. we are killing the process
[rank1]:[W1202 10:51:29.329041063 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1202 10:51:29.477162660 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 10:51:29.940204501 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
