W1202 12:52:32.420000 1788360 site-packages/torch/distributed/run.py:793] 
W1202 12:52:32.420000 1788360 site-packages/torch/distributed/run.py:793] *****************************************
W1202 12:52:32.420000 1788360 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 12:52:32.420000 1788360 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTDense(
  (layers): ModuleList(
    (0-39): 40 x DenseTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=10240, bias=False)
        (wo): Linear(in_features=8192, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=57344, bias=False)
        (w2): Linear(in_features=28672, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.16 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 34.77843291219324 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 46.37255880609155 secCompilation time: 81.11 seconds

Compilation time: 81.15 seconds
Prefill latency: 1.4159627929329872 sec
Decode latency: 27.90124312369153 sec
Prefill latency: 1.4105507447384298 sec
Decode latency: 27.900953259319067 sec
Prefill latency: 1.4180307211354375 sec
Decode latency: 27.901905497070402 sec
Prefill latency: 1.4106864240020514 sec
Decode latency: 27.90091708023101 sec
Prefill latency: 1.4129909481853247 sec
Decode latency: 27.901641487609595 sec
Time for inference 1: 29.32 sec total, 69.86 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4928.58 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.4175697662867606 sec
Decode latency: 27.90058605792001 sec
Time for inference 2: 29.32 sec total, 69.85 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.42 sec
Bandwidth achieved: 4927.98 GB/s
FLOPS achieved: 14.78 TF/s

Prefill latency: 1.4121493408456445 sec
Decode latency: 27.901682200841606 sec
Time for inference 3: 29.32 sec total, 69.86 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4928.71 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.4114302741363645 sec
Decode latency: 27.900976239703596 sec
Time for inference 4: 29.32 sec total, 69.86 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4928.95 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.4158966816030443 sec
Decode latency: 27.902078457176685 sec
Time for inference 5: 29.32 sec total, 69.85 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.42 sec
Bandwidth achieved: 4928.01 GB/s
FLOPS achieved: 14.78 TF/s

Prefill latency: 1.4076320198364556 sec
Decode latency: 27.90198828279972 sec
Time for inference 6: 29.31 sec total, 69.87 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4929.40 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.412696460261941 sec
Decode latency: 27.90171359386295 sec
Time for inference 7: 29.32 sec total, 69.86 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4928.60 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.4132384657859802 sec
Decode latency: 27.901406954973936 sec
Time for inference 8: 29.32 sec total, 69.86 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.41 sec
Bandwidth achieved: 4928.55 GB/s
FLOPS achieved: 14.79 TF/s

Prefill latency: 1.4179310980252922 sec
Decode latency: 27.900720064993948 sec
Time for inference 9: 29.32 sec total, 69.85 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.42 sec
Bandwidth achieved: 4927.91 GB/s
FLOPS achieved: 14.78 TF/s

Prefill latency: 1.4161744988523424 sec
Decode latency: 27.901238062418997 sec
Time for inference 10: 29.32 sec total, 69.85 tokens/sec
Decode latency: 27.90 sec
Prefill latency: 1.42 sec
Bandwidth achieved: 4928.10 GB/s
FLOPS achieved: 14.78 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 27.9014 sec
Average prefill latency: 1.4138 sec
Average tokens/sec: 69.85
Memory used: 75.42 GB
Done. we are killing the process
[rank0]:[W1202 13:00:49.233361498 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 13:00:49.815125437 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
