W1202 13:49:25.621000 1622726 site-packages/torch/distributed/run.py:793] 
W1202 13:49:25.621000 1622726 site-packages/torch/distributed/run.py:793] *****************************************
W1202 13:49:25.621000 1622726 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 13:49:25.621000 1622726 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTEnsemble(
  (layers): ModuleList(
    (0-39): 40 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.22 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 137.47292215307243 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compilation time: 258.77 seconds
Compilation time: 258.80 seconds
Decode latency: 121.35104840598069 sec
Compilation time: 258.81 seconds
Compilation time: 258.83 seconds
Prefill latency: 12.569756899960339 sec
Decode latency: 30.081936388043687 sec
Prefill latency: 11.856226254021749 sec
Decode latency: 30.083118219976313 sec
Prefill latency: 11.887167364009656 sec
Decode latency: 30.08020009403117 sec
Prefill latency: 11.944085802999325 sec
Decode latency: 30.078282200964168 sec
Prefill latency: 11.8764007629361 sec
Decode latency: 30.083988061058335 sec
Time for inference 1: 41.96 sec total, 780.88 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.88 sec
Bandwidth achieved: 28368.04 GB/s
FLOPS achieved: 85.10 TF/s

Prefill latency: 11.887774414964952 sec
Decode latency: 30.076629132963717 sec
Time for inference 2: 41.97 sec total, 780.80 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.89 sec
Bandwidth achieved: 28365.13 GB/s
FLOPS achieved: 85.10 TF/s

Prefill latency: 11.884811117080972 sec
Decode latency: 30.075353753985837 sec
Time for inference 3: 41.96 sec total, 780.88 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.88 sec
Bandwidth achieved: 28368.12 GB/s
FLOPS achieved: 85.10 TF/s

Prefill latency: 11.88012957200408 sec
Decode latency: 30.083077974035405 sec
Time for inference 4: 41.97 sec total, 780.83 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.88 sec
Bandwidth achieved: 28366.06 GB/s
FLOPS achieved: 85.10 TF/s

Prefill latency: 11.89405969902873 sec
Decode latency: 30.082530717016198 sec
Time for inference 5: 41.98 sec total, 780.58 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.89 sec
Bandwidth achieved: 28356.91 GB/s
FLOPS achieved: 85.07 TF/s

Prefill latency: 11.87832975096535 sec
Decode latency: 30.08417084091343 sec
Time for inference 6: 41.97 sec total, 780.84 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.88 sec
Bandwidth achieved: 28366.48 GB/s
FLOPS achieved: 85.10 TF/s

Prefill latency: 11.871641554054804 sec
Decode latency: 30.081993835046887 sec
Time for inference 7: 41.96 sec total, 781.00 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.87 sec
Bandwidth achieved: 28372.41 GB/s
FLOPS achieved: 85.12 TF/s

Prefill latency: 11.897609621984884 sec
Decode latency: 30.07552748802118 sec
Time for inference 8: 41.98 sec total, 780.64 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.90 sec
Bandwidth achieved: 28359.22 GB/s
FLOPS achieved: 85.08 TF/s

Prefill latency: 11.875017444952391 sec
Decode latency: 30.08440733398311 sec
Time for inference 9: 41.96 sec total, 780.90 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.88 sec
Bandwidth achieved: 28368.61 GB/s
FLOPS achieved: 85.11 TF/s

Prefill latency: 11.900247163954191 sec
Decode latency: 30.084633111022413 sec
Time for inference 10: 41.99 sec total, 780.42 tokens/sec
Decode latency: 30.08 sec
Prefill latency: 11.90 sec
Bandwidth achieved: 28351.37 GB/s
FLOPS achieved: 85.05 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 30.0812 sec
Average prefill latency: 11.8846 sec
Average tokens/sec: 780.78
Memory used: 83.26 GB
Done. we are killing the process
[rank1]:[W1202 14:03:39.745650472 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1202 14:03:40.131798338 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 14:03:41.090754000 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
