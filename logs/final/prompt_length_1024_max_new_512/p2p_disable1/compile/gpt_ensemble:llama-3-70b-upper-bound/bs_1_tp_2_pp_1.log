W1202 13:54:10.802000 1801234 site-packages/torch/distributed/run.py:793] 
W1202 13:54:10.802000 1801234 site-packages/torch/distributed/run.py:793] *****************************************
W1202 13:54:10.802000 1801234 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 13:54:10.802000 1801234 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1]], mesh_dim_names=('pp', 'tp'))
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 8192)
  (layers): ModuleList(
    (0-79): 80 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.47 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 29.718036448117346 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 44.104206362273544 sec
Compilation time: 73.82 seconds
Compilation time: 73.93 seconds
Prefill latency: 0.20103371609002352 sec
Decode latency: 13.33876219112426 sec
Prefill latency: 0.1985432361252606 sec
Decode latency: 13.339441133197397 sec
Prefill latency: 0.19962748140096664 sec
Decode latency: 13.342109085060656 sec
Prefill latency: 0.19729054300114512 sec
Decode latency: 13.340953137725592 sec
Prefill latency: 0.1978882858529687 sec
Decode latency: 13.343424782156944 sec
Time for inference 1: 13.54 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2667.32 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.20182318799197674 sec
Decode latency: 13.341948997229338 sec
Time for inference 2: 13.55 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2666.85 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.1991389007307589 sec
Decode latency: 13.343358293175697 sec
Time for inference 3: 13.54 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2667.09 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.20032297493889928 sec
Decode latency: 13.341694646980613 sec
Time for inference 4: 13.54 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2667.20 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.1993053168989718 sec
Decode latency: 13.344252279028296 sec
Time for inference 5: 13.55 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2666.90 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.19832588220015168 sec
Decode latency: 13.341776486951858 sec
Time for inference 6: 13.54 sec total, 37.81 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2667.59 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.19761765515431762 sec
Decode latency: 13.345932089257985 sec
Time for inference 7: 13.55 sec total, 37.80 tokens/sec
Decode latency: 13.35 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2666.90 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.20019693626090884 sec
Decode latency: 13.342972534243017 sec
Time for inference 8: 13.55 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2666.96 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.20111184613779187 sec
Decode latency: 13.342629288323224 sec
Time for inference 9: 13.55 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2666.87 GB/s
FLOPS achieved: 8.00 TF/s

Prefill latency: 0.20008710399270058 sec
Decode latency: 13.34301434084773 sec
Time for inference 10: 13.54 sec total, 37.80 tokens/sec
Decode latency: 13.34 sec
Prefill latency: 0.20 sec
Bandwidth achieved: 2667.00 GB/s
FLOPS achieved: 8.00 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 13.3431 sec
Average prefill latency: 0.1996 sec
Average tokens/sec: 37.80
Memory used: 74.09 GB
Done. we are killing the process
[rank0]:[W1202 13:58:39.652667896 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 13:58:39.738082380 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
