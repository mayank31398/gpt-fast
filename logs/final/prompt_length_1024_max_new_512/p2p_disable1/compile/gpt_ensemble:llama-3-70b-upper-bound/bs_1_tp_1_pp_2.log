W1202 13:46:48.174000 1800087 site-packages/torch/distributed/run.py:793] 
W1202 13:46:48.174000 1800087 site-packages/torch/distributed/run.py:793] *****************************************
W1202 13:46:48.174000 1800087 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 13:46:48.174000 1800087 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0], [1]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTEnsemble(
  (layers): ModuleList(
    (0-39): 40 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=10240, bias=False)
        (wo): Linear(in_features=8192, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=57344, bias=False)
        (w2): Linear(in_features=28672, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.03 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Prefill latency: 31.96465624636039 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 43.990943419747055 sec
Compilation time: 75.92 seconds
Compilation time: 75.96 seconds
Prefill latency: 0.3738175220787525 sec
Decode latency: 25.218520785681903 sec
Prefill latency: 0.3740142551250756 sec
Decode latency: 25.219959957059473 sec
Prefill latency: 0.3741283337585628 sec
Decode latency: 25.218601879198104 sec
Prefill latency: 0.373568061273545 sec
Decode latency: 25.21842586901039 sec
Prefill latency: 0.3746240702457726 sec
Decode latency: 25.219633671920747 sec
Time for inference 1: 25.60 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.28 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37410569190979004 sec
Decode latency: 25.21847518812865 sec
Time for inference 2: 25.59 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.37 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.3737405398860574 sec
Decode latency: 25.21874704770744 sec
Time for inference 3: 25.59 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.38 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37319724168628454 sec
Decode latency: 25.22022718610242 sec
Time for inference 4: 25.60 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.31 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37394821969792247 sec
Decode latency: 25.219024959020317 sec
Time for inference 5: 25.59 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.35 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.3741981857456267 sec
Decode latency: 25.218542577233166 sec
Time for inference 6: 25.59 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.36 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37399161979556084 sec
Decode latency: 25.218712113797665 sec
Time for inference 7: 25.59 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.36 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.3760029268451035 sec
Decode latency: 25.217978179920465 sec
Time for inference 8: 25.60 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.38 sec
Bandwidth achieved: 1411.30 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37525326386094093 sec
Decode latency: 25.218580463901162 sec
Time for inference 9: 25.60 sec total, 20.00 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.38 sec
Bandwidth achieved: 1411.30 GB/s
FLOPS achieved: 4.23 TF/s

Prefill latency: 0.37353236274793744 sec
Decode latency: 25.21781196584925 sec
Time for inference 10: 25.59 sec total, 20.01 tokens/sec
Decode latency: 25.22 sec
Prefill latency: 0.37 sec
Bandwidth achieved: 1411.43 GB/s
FLOPS achieved: 4.23 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 25.2188 sec
Average prefill latency: 0.3743 sec
Average tokens/sec: 20.00
Memory used: 72.08 GB
Done. we are killing the process
[rank0]:[W1202 13:54:07.395926889 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 13:54:08.034686306 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
