W1202 14:56:06.727000 1671796 site-packages/torch/distributed/run.py:793] 
W1202 14:56:06.727000 1671796 site-packages/torch/distributed/run.py:793] *****************************************
W1202 14:56:06.727000 1671796 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 14:56:06.727000 1671796 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.01 seconds
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 108.62311767297797 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 108.54067208303604 sec
Compilation time: 217.11 seconds
Compilation time: 217.35 seconds
Compilation time: 217.17 seconds
Compilation time: 217.06 seconds
Prefill latency: 4.200543046928942 sec
Decode latency: 20.680235203937627 sec
Prefill latency: 4.199354142998345 sec
Decode latency: 20.680413473048247 sec
Prefill latency: 4.19861244794447 sec
Decode latency: 20.688657298102044 sec
Prefill latency: 4.198474767967127 sec
Decode latency: 20.69061758602038 sec
Prefill latency: 4.20484722906258 sec
Decode latency: 20.688958507031202 sec
Time for inference 1: 24.90 sec total, 329.05 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11953.46 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.202735947910696 sec
Decode latency: 20.69293274707161 sec
Time for inference 2: 24.90 sec total, 329.02 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11952.58 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.199075713986531 sec
Decode latency: 20.687912228982896 sec
Time for inference 3: 24.89 sec total, 329.14 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11956.70 GB/s
FLOPS achieved: 35.87 TF/s

Prefill latency: 4.200564639992081 sec
Decode latency: 20.69001531600952 sec
Time for inference 4: 24.89 sec total, 329.09 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11955.01 GB/s
FLOPS achieved: 35.87 TF/s

Prefill latency: 4.204069517902099 sec
Decode latency: 20.68758951302152 sec
Time for inference 5: 24.89 sec total, 329.07 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11954.48 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.201700987992808 sec
Decode latency: 20.6918817400001 sec
Time for inference 6: 24.90 sec total, 329.05 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11953.56 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.199741401942447 sec
Decode latency: 20.691840534098446 sec
Time for inference 7: 24.89 sec total, 329.08 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11954.52 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.204065109952353 sec
Decode latency: 20.690345537965186 sec
Time for inference 8: 24.90 sec total, 329.04 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11953.19 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.200758131919429 sec
Decode latency: 20.694102139095776 sec
Time for inference 9: 24.90 sec total, 329.02 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11952.49 GB/s
FLOPS achieved: 35.86 TF/s

Prefill latency: 4.195466859964654 sec
Decode latency: 20.690567243029363 sec
Time for inference 10: 24.89 sec total, 329.15 tokens/sec
Decode latency: 20.69 sec
Prefill latency: 4.20 sec
Bandwidth achieved: 11957.23 GB/s
FLOPS achieved: 35.87 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 20.6906 sec
Average prefill latency: 4.2013 sec
Average tokens/sec: 329.07
Memory used: 52.57 GB
Done. we are killing the process
[rank1]:[W1202 15:05:39.567549538 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1202 15:05:39.948265891 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 15:05:40.452634716 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
