W1202 15:19:35.455000 1687161 site-packages/torch/distributed/run.py:793] 
W1202 15:19:35.455000 1687161 site-packages/torch/distributed/run.py:793] *****************************************
W1202 15:19:35.455000 1687161 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 15:19:35.455000 1687161 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.15 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 255.4341093719704 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 137.33139250800014 secCompilation time: 392.83 seconds
Compilation time: 392.77 seconds

Compilation time: 392.77 seconds
Compilation time: 392.88 seconds
Prefill latency: 18.511114799999632 sec
Decode latency: 35.149011338013224 sec
Prefill latency: 18.039438780979253 sec
Decode latency: 35.14561644895002 sec
Prefill latency: 18.01268158701714 sec
Decode latency: 35.14921494398732 sec
Prefill latency: 18.064656679984182 sec
Decode latency: 35.16667080693878 sec
Prefill latency: 18.385903742047958 sec
Decode latency: 35.161951616057195 sec
Time for inference 1: 53.55 sec total, 611.90 tokens/sec
Decode latency: 35.16 sec
Prefill latency: 18.39 sec
Bandwidth achieved: 22228.99 GB/s
FLOPS achieved: 66.69 TF/s

Prefill latency: 18.041231499053538 sec
Decode latency: 35.16765940096229 sec
Time for inference 2: 53.21 sec total, 615.81 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.04 sec
Bandwidth achieved: 22370.82 GB/s
FLOPS achieved: 67.11 TF/s

Prefill latency: 18.04200035298709 sec
Decode latency: 35.16667255200446 sec
Time for inference 3: 53.21 sec total, 615.81 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.04 sec
Bandwidth achieved: 22370.92 GB/s
FLOPS achieved: 67.11 TF/s

Prefill latency: 18.05767663102597 sec
Decode latency: 35.16932271793485 sec
Time for inference 4: 53.23 sec total, 615.60 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.06 sec
Bandwidth achieved: 22363.23 GB/s
FLOPS achieved: 67.09 TF/s

Prefill latency: 18.060213241027668 sec
Decode latency: 35.167991610011086 sec
Time for inference 5: 53.23 sec total, 615.58 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.06 sec
Bandwidth achieved: 22362.65 GB/s
FLOPS achieved: 67.09 TF/s

Prefill latency: 18.052582944976166 sec
Decode latency: 35.168993709026836 sec
Time for inference 6: 53.22 sec total, 615.66 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.05 sec
Bandwidth achieved: 22365.47 GB/s
FLOPS achieved: 67.10 TF/s

Prefill latency: 18.048808908089995 sec
Decode latency: 35.17303186794743 sec
Time for inference 7: 53.22 sec total, 615.66 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.05 sec
Bandwidth achieved: 22365.24 GB/s
FLOPS achieved: 67.10 TF/s

Prefill latency: 18.017064366023988 sec
Decode latency: 35.16806927102152 sec
Time for inference 8: 53.19 sec total, 616.08 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.02 sec
Bandwidth achieved: 22380.74 GB/s
FLOPS achieved: 67.14 TF/s

Prefill latency: 18.052046247990802 sec
Decode latency: 35.16994795494247 sec
Time for inference 9: 53.22 sec total, 615.66 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.05 sec
Bandwidth achieved: 22365.33 GB/s
FLOPS achieved: 67.10 TF/s

Prefill latency: 18.41347552300431 sec
Decode latency: 35.168663325952366 sec
Time for inference 10: 53.58 sec total, 611.52 tokens/sec
Decode latency: 35.17 sec
Prefill latency: 18.41 sec
Bandwidth achieved: 22214.96 GB/s
FLOPS achieved: 66.64 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 35.1682 sec
Average prefill latency: 18.1171 sec
Average tokens/sec: 614.93
Memory used: 83.33 GB
Done. we are killing the process
[rank1]:[W1202 15:38:41.954356151 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W1202 15:38:41.986063224 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 15:38:42.540783595 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
