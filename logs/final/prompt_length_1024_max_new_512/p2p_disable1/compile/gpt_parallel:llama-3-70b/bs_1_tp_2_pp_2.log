W1202 14:19:10.803000 1634912 site-packages/torch/distributed/run.py:793] 
W1202 14:19:10.803000 1634912 site-packages/torch/distributed/run.py:793] *****************************************
W1202 14:19:10.803000 1634912 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 14:19:10.803000 1634912 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.99 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 74.41641605098266 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 89.73489328997675 sec
Compilation time: 164.22 seconds
Compilation time: 164.17 seconds
Compilation time: 164.14 seconds
Compilation time: 164.15 seconds
Prefill latency: 0.2963969630654901 sec
Decode latency: 13.857025091070682 sec
Prefill latency: 0.27252063108608127 sec
Decode latency: 13.85867862496525 sec
Prefill latency: 0.2719401539070532 sec
Decode latency: 13.858871382079087 sec
Prefill latency: 0.2715619520749897 sec
Decode latency: 13.863163501024246 sec
Prefill latency: 0.27288357692305 sec
Decode latency: 13.859092126018368 sec
Time for inference 1: 14.13 sec total, 36.22 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 1315.92 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.27442722499836236 sec
Decode latency: 13.865771459997632 sec
Time for inference 2: 14.14 sec total, 36.20 tokens/sec
Decode latency: 13.87 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 1315.17 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.2762355769518763 sec
Decode latency: 13.86657493095845 sec
Time for inference 3: 14.15 sec total, 36.20 tokens/sec
Decode latency: 13.87 sec
Prefill latency: 0.28 sec
Bandwidth achieved: 1314.92 GB/s
FLOPS achieved: 3.94 TF/s

Prefill latency: 0.27505040692631155 sec
Decode latency: 13.865347755956464 sec
Time for inference 4: 14.14 sec total, 36.20 tokens/sec
Decode latency: 13.87 sec
Prefill latency: 0.28 sec
Bandwidth achieved: 1315.15 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.27563021006062627 sec
Decode latency: 13.85967844107654 sec
Time for inference 5: 14.14 sec total, 36.22 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.28 sec
Bandwidth achieved: 1315.62 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.2776771980570629 sec
Decode latency: 13.863211394986138 sec
Time for inference 6: 14.14 sec total, 36.20 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.28 sec
Bandwidth achieved: 1315.08 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.2723866490414366 sec
Decode latency: 13.86183232604526 sec
Time for inference 7: 14.14 sec total, 36.22 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 1315.71 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.2744534780504182 sec
Decode latency: 13.860805404023267 sec
Time for inference 8: 14.14 sec total, 36.22 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 1315.63 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.2769275290193036 sec
Decode latency: 13.860721482080407 sec
Time for inference 9: 14.14 sec total, 36.21 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.28 sec
Bandwidth achieved: 1315.41 GB/s
FLOPS achieved: 3.95 TF/s

Prefill latency: 0.27438655600417405 sec
Decode latency: 13.86201013403479 sec
Time for inference 10: 14.14 sec total, 36.21 tokens/sec
Decode latency: 13.86 sec
Prefill latency: 0.27 sec
Bandwidth achieved: 1315.53 GB/s
FLOPS achieved: 3.95 TF/s

==========
Batch Size: 1
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 13.8625 sec
Average prefill latency: 0.2750 sec
Average tokens/sec: 36.21
Memory used: 37.68 GB
Done. we are killing the process
[rank0]:[W1202 14:25:19.904720743 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 14:25:20.170679771 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 14:25:20.975570024 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
