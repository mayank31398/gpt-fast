W1202 14:36:45.236000 1654844 site-packages/torch/distributed/run.py:793] 
W1202 14:36:45.236000 1654844 site-packages/torch/distributed/run.py:793] *****************************************
W1202 14:36:45.236000 1654844 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 14:36:45.236000 1654844 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
GPTParallel(
  (layers): ModuleList(
    (0-39): 40 x ParallelTransformerBlock(
      semi_compiled = False
      (attention): FuseAttentionMLP(
        (wqkv1): Linear(in_features=8192, out_features=33792, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 1.13 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 85.3606508220546 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 82.08953840692993 secCompilation time: 167.42 seconds

Compilation time: 167.46 seconds
Compilation time: 167.46 seconds
Compilation time: 167.47 seconds
Prefill latency: 1.0471231630071998 sec
Decode latency: 16.56584425107576 sec
Prefill latency: 1.0469135500025004 sec
Decode latency: 16.566190187935717 sec
Prefill latency: 1.0464110400062054 sec
Decode latency: 16.56582564499695 sec
Prefill latency: 1.0482912668958306 sec
Decode latency: 16.564683170057833 sec
Prefill latency: 1.04764276498463 sec
Decode latency: 16.564483656082302 sec
Time for inference 1: 17.61 sec total, 116.27 tokens/sec
Decode latency: 16.56 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.67 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0470514089101925 sec
Decode latency: 16.563527288031764 sec
Time for inference 2: 17.61 sec total, 116.28 tokens/sec
Decode latency: 16.56 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4224.01 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0492005830164999 sec
Decode latency: 16.564525514957495 sec
Time for inference 3: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.56 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.26 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.046140961931087 sec
Decode latency: 16.56630851398222 sec
Time for inference 4: 17.61 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.62 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0477695310255513 sec
Decode latency: 16.56520662002731 sec
Time for inference 5: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.47 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0469575569732115 sec
Decode latency: 16.565682864980772 sec
Time for inference 6: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.56 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0470724209444597 sec
Decode latency: 16.566384891048074 sec
Time for inference 7: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.33 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0457895509898663 sec
Decode latency: 16.567393309087493 sec
Time for inference 8: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.41 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0455435569165275 sec
Decode latency: 16.567198476055637 sec
Time for inference 9: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.57 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.54 GB/s
FLOPS achieved: 12.67 TF/s

Prefill latency: 1.0487009650096297 sec
Decode latency: 16.564574601012282 sec
Time for inference 10: 17.62 sec total, 116.26 tokens/sec
Decode latency: 16.56 sec
Prefill latency: 1.05 sec
Bandwidth achieved: 4223.41 GB/s
FLOPS achieved: 12.67 TF/s

==========
Batch Size: 4
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 16.5655 sec
Average prefill latency: 1.0472 sec
Average tokens/sec: 116.26
Memory used: 40.70 GB
Done. we are killing the process
[rank0]:[W1202 14:43:46.367510185 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 14:43:46.407838567 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 14:43:47.284337044 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
