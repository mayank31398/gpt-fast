W1202 12:17:02.896000 1574942 site-packages/torch/distributed/run.py:793] 
W1202 12:17:02.896000 1574942 site-packages/torch/distributed/run.py:793] *****************************************
W1202 12:17:02.896000 1574942 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1202 12:17:02.896000 1574942 site-packages/torch/distributed/run.py:793] *****************************************
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
Using device=cuda
Loading model ...
DeviceMesh('cuda', [[0, 1], [2, 3]], mesh_dim_names=('pp', 'tp'))
GPTLadder(
  (layers): ModuleList(
    (0-39): 40 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=8192, out_features=5120, bias=False)
        (wo): Linear(in_features=4096, out_features=8192, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=8192, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=8192, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=8192, out_features=128256, bias=False)
)
Time to load model: 0.14 seconds
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Compiling prefill with dynamic=False
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 229.09395679098088 sec
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/home/charlie/anaconda3/envs/gpt-fast/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 128.39656766597182 sec
Compilation time: 357.56 seconds
Compilation time: 357.49 seconds
Compilation time: 357.56 seconds
Compilation time: 357.49 seconds
Prefill latency: 13.539309241925366 sec
Decode latency: 31.180601321044378 sec
Prefill latency: 13.479383639991283 sec
Decode latency: 31.18118275597226 sec
Prefill latency: 13.276655117981136 sec
Decode latency: 31.180486805038527 sec
Prefill latency: 12.986127201933414 sec
Decode latency: 31.18329306098167 sec
Prefill latency: 13.033830614062026 sec
Decode latency: 31.183637726004235 sec
Time for inference 1: 44.22 sec total, 741.03 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 13.03 sec
Bandwidth achieved: 26920.11 GB/s
FLOPS achieved: 80.76 TF/s

Prefill latency: 12.971030089072883 sec
Decode latency: 31.17594275099691 sec
Time for inference 2: 44.15 sec total, 742.20 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.97 sec
Bandwidth achieved: 26962.89 GB/s
FLOPS achieved: 80.89 TF/s

Prefill latency: 12.97308841906488 sec
Decode latency: 31.179696809034795 sec
Time for inference 3: 44.16 sec total, 742.11 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.97 sec
Bandwidth achieved: 26959.52 GB/s
FLOPS achieved: 80.88 TF/s

Prefill latency: 13.004758942988701 sec
Decode latency: 31.183078325004317 sec
Time for inference 4: 44.19 sec total, 741.52 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 13.00 sec
Bandwidth achieved: 26938.12 GB/s
FLOPS achieved: 80.81 TF/s

Prefill latency: 12.94458322506398 sec
Decode latency: 31.185839556041174 sec
Time for inference 5: 44.13 sec total, 742.48 tokens/sec
Decode latency: 31.19 sec
Prefill latency: 12.94 sec
Bandwidth achieved: 26973.12 GB/s
FLOPS achieved: 80.92 TF/s

Prefill latency: 12.970116196898744 sec
Decode latency: 31.17875812400598 sec
Time for inference 6: 44.15 sec total, 742.17 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.97 sec
Bandwidth achieved: 26961.83 GB/s
FLOPS achieved: 80.89 TF/s

Prefill latency: 12.97066105704289 sec
Decode latency: 31.17685128399171 sec
Time for inference 7: 44.15 sec total, 742.20 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.97 sec
Bandwidth achieved: 26962.80 GB/s
FLOPS achieved: 80.89 TF/s

Prefill latency: 12.978033541003242 sec
Decode latency: 31.17834398301784 sec
Time for inference 8: 44.16 sec total, 742.05 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.98 sec
Bandwidth achieved: 26957.31 GB/s
FLOPS achieved: 80.87 TF/s

Prefill latency: 12.993896719999611 sec
Decode latency: 31.185613707988523 sec
Time for inference 9: 44.18 sec total, 741.66 tokens/sec
Decode latency: 31.19 sec
Prefill latency: 12.99 sec
Bandwidth achieved: 26943.08 GB/s
FLOPS achieved: 80.83 TF/s

Prefill latency: 12.95449313800782 sec
Decode latency: 31.181380153051578 sec
Time for inference 10: 44.14 sec total, 742.40 tokens/sec
Decode latency: 31.18 sec
Prefill latency: 12.95 sec
Bandwidth achieved: 26969.91 GB/s
FLOPS achieved: 80.91 TF/s

==========
Batch Size: 64
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 31.1809 sec
Average prefill latency: 12.9794 sec
Average tokens/sec: 741.98
Memory used: 81.97 GB
Done. we are killing the process
[rank0]:[W1202 12:33:26.763205300 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W1202 12:33:26.979830432 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank2]:[W1202 12:33:27.229862498 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
