W1201 16:14:15.082000 532332 site-packages/torch/distributed/run.py:793] 
W1201 16:14:15.082000 532332 site-packages/torch/distributed/run.py:793] *****************************************
W1201 16:14:15.082000 532332 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 16:14:15.082000 532332 site-packages/torch/distributed/run.py:793] *****************************************
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2rank: 0, global_rank: 0, world_size: 2, global_world_size: 2

rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
flash_kv_decode is set to True
rank: 0, global_rank: 0, world_size: 2, global_world_size: 2
our world size=2
Using device=cuda
Loading model ...
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
rank: 1, global_rank: 1, world_size: 2, global_world_size: 2
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=3072, bias=False)
        (wo): Linear(in_features=2048, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=14336, bias=False)
        (w2): Linear(in_features=7168, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.20 seconds
CUDA_GRAPH are activate
[rank1]:[W1201 16:14:23.230323867 CUDAGraph.cpp:133] Warning: Waiting for pending NCCL work to finish before starting graph capture. (function operator())
Prefill latency: 0.7182986931875348 sec
Decode latency: 3.922016399912536 sec
Compilation time: 4.64 seconds
Compilation time: 4.63 seconds
Prefill latency: 0.666064705234021 sec
Decode latency: 3.9237220198847353 sec
Prefill latency: 0.6707480177283287 sec
Decode latency: 3.9235555548220873 sec
Prefill latency: 0.6698384522460401 sec
Decode latency: 3.9201858113519847 sec
Prefill latency: 0.6695982669480145 sec
Decode latency: 3.9213660769164562 sec
Prefill latency: 0.677898374851793 sec
Decode latency: 3.9206585637293756 sec
Time for inference 1: 4.60 sec total, 1780.91 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14301.66 GB/s
FLOPS achieved: 42.90 TF/s

Prefill latency: 0.6700389753095806 sec
Decode latency: 3.9238295312970877 sec
Time for inference 2: 4.59 sec total, 1782.83 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14317.06 GB/s
FLOPS achieved: 42.95 TF/s

Prefill latency: 0.6739463279955089 sec
Decode latency: 3.9234341187402606 sec
Time for inference 3: 4.60 sec total, 1781.40 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14305.56 GB/s
FLOPS achieved: 42.92 TF/s

Prefill latency: 0.676715046633035 sec
Decode latency: 3.9230682710185647 sec
Time for inference 4: 4.60 sec total, 1780.36 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14297.25 GB/s
FLOPS achieved: 42.89 TF/s

Prefill latency: 0.6851304760202765 sec
Decode latency: 3.919514366891235 sec
Time for inference 5: 4.61 sec total, 1778.58 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.69 sec
Bandwidth achieved: 14282.93 GB/s
FLOPS achieved: 42.85 TF/s

Prefill latency: 0.6795415468513966 sec
Decode latency: 3.9219091259874403 sec
Time for inference 6: 4.60 sec total, 1779.85 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14293.14 GB/s
FLOPS achieved: 42.88 TF/s

Prefill latency: 0.6758832638151944 sec
Decode latency: 3.923148008994758 sec
Time for inference 7: 4.60 sec total, 1780.83 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14301.00 GB/s
FLOPS achieved: 42.90 TF/s

Prefill latency: 0.6720919557847083 sec
Decode latency: 3.9238167949952185 sec
Time for inference 8: 4.60 sec total, 1782.04 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.67 sec
Bandwidth achieved: 14310.76 GB/s
FLOPS achieved: 42.93 TF/s

Prefill latency: 0.6785766207613051 sec
Decode latency: 3.9214420979842544 sec
Time for inference 9: 4.60 sec total, 1780.48 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14298.18 GB/s
FLOPS achieved: 42.89 TF/s

Prefill latency: 0.6761133000254631 sec
Decode latency: 3.9225373109802604 sec
Time for inference 10: 4.60 sec total, 1780.93 tokens/sec
Decode latency: 3.92 sec
Prefill latency: 0.68 sec
Bandwidth achieved: 14301.83 GB/s
FLOPS achieved: 42.91 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 3.9223 sec
Average prefill latency: 0.6766 sec
Average tokens/sec: 1780.82
Memory used: 31.18 GB
Done. we are killing the process
[rank0]:[W1201 16:15:32.547668018 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
