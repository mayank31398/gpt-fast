W1201 16:11:38.960000 531475 site-packages/torch/distributed/run.py:793] 
W1201 16:11:38.960000 531475 site-packages/torch/distributed/run.py:793] *****************************************
W1201 16:11:38.960000 531475 site-packages/torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1201 16:11:38.960000 531475 site-packages/torch/distributed/run.py:793] *****************************************
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8rank: 3, global_rank: 3, world_size: 8, global_world_size: 8

rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
flash_kv_decode is set to True
rank: 0, global_rank: 0, world_size: 8, global_world_size: 8
our world size=8
Using device=cuda
Loading model ...
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 1, global_rank: 1, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 3, global_rank: 3, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 6, global_rank: 6, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
GPTLadder(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x LadderTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=768, bias=False)
        (wo): Linear(in_features=512, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=3584, bias=False)
        (w2): Linear(in_features=1792, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 0.51 seconds
rank: 4, global_rank: 4, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 2, global_rank: 2, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 5, global_rank: 5, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
rank: 7, global_rank: 7, world_size: 8, global_world_size: 8
CUDA_GRAPH are activate
Prefill latency: 0.11565198563039303 sec
Decode latency: 2.6022490789182484 sec
Compilation time: 2.72 secondsCompilation time: 2.72 seconds

Compilation time: 2.77 seconds
Compilation time: 2.75 seconds
Compilation time: 2.78 seconds
Compilation time: 2.72 seconds
Compilation time: 2.73 seconds
Compilation time: 2.75 seconds
Prefill latency: 0.11622221022844315 sec
Decode latency: 2.6024872479029 sec
Prefill latency: 0.1164194350130856 sec
Decode latency: 2.6020384430885315 sec
Prefill latency: 0.11560974922031164 sec
Decode latency: 2.603538070805371 sec
Prefill latency: 0.11551158223301172 sec
Decode latency: 2.6019270392134786 sec
Prefill latency: 0.11572091886773705 sec
Decode latency: 2.6030457047745585 sec
Time for inference 1: 2.72 sec total, 3011.94 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8421.50 GB/s
FLOPS achieved: 25.26 TF/s

Prefill latency: 0.11555746803060174 sec
Decode latency: 2.6039665886200964 sec
Time for inference 2: 2.72 sec total, 3011.04 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8418.97 GB/s
FLOPS achieved: 25.26 TF/s

Prefill latency: 0.11583443405106664 sec
Decode latency: 2.603348783683032 sec
Time for inference 3: 2.72 sec total, 3011.58 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8420.49 GB/s
FLOPS achieved: 25.26 TF/s

Prefill latency: 0.11561421630904078 sec
Decode latency: 2.6030999119393528 sec
Time for inference 4: 2.72 sec total, 3012.10 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8421.94 GB/s
FLOPS achieved: 25.27 TF/s

Prefill latency: 0.11597039038315415 sec
Decode latency: 2.6039656181819737 sec
Time for inference 5: 2.72 sec total, 3010.67 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8417.94 GB/s
FLOPS achieved: 25.25 TF/s

Prefill latency: 0.116140176076442 sec
Decode latency: 2.603615688160062 sec
Time for inference 6: 2.72 sec total, 3010.97 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8418.77 GB/s
FLOPS achieved: 25.26 TF/s

Prefill latency: 0.11639155214652419 sec
Decode latency: 2.600303065031767 sec
Time for inference 7: 2.72 sec total, 3014.31 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8428.12 GB/s
FLOPS achieved: 25.28 TF/s

Prefill latency: 0.11579224234446883 sec
Decode latency: 2.6006508958525956 sec
Time for inference 8: 2.72 sec total, 3014.31 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8428.13 GB/s
FLOPS achieved: 25.28 TF/s

Prefill latency: 0.11568496515974402 sec
Decode latency: 2.6049431059509516 sec
Time for inference 9: 2.72 sec total, 3009.63 tokens/sec
Decode latency: 2.60 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8415.04 GB/s
FLOPS achieved: 25.25 TF/s

Prefill latency: 0.11640739068388939 sec
Decode latency: 2.60622003627941 sec
Time for inference 10: 2.72 sec total, 3007.62 tokens/sec
Decode latency: 2.61 sec
Prefill latency: 0.12 sec
Bandwidth achieved: 8409.43 GB/s
FLOPS achieved: 25.23 TF/s

==========
Batch Size: 16
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 2.6033 sec
Average prefill latency: 0.1159 sec
Average tokens/sec: 3011.42
Memory used: 18.04 GB
Done. we are killing the process
[rank0]:[W1201 16:12:34.767189679 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
