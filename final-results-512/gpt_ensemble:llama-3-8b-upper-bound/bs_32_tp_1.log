flash_kv_decode is set to False
Using device=cuda
Loading model ...
GPTEnsemble(
  (tok_embeddings): Embedding(128256, 4096)
  (layers): ModuleList(
    (0-31): 32 x EnsembleTransformerBlock(
      semi_compiled = False
      (attention): Attention(
        (wqkv): Linear(in_features=4096, out_features=6144, bias=False)
        (wo): Linear(in_features=4096, out_features=4096, bias=False)
      )
      (feed_forward): FeedForward(
        (w1): Linear(in_features=4096, out_features=28672, bias=False)
        (w2): Linear(in_features=14336, out_features=4096, bias=False)
      )
      (ffn_norm): RMSNorm()
      (attention_norm): RMSNorm()
    )
  )
  (norm): RMSNorm()
  (output): Linear(in_features=4096, out_features=128256, bias=False)
)
Time to load model: 1.00 seconds
Compiling prefill with dynamic=False
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/site-packages/torch/_inductor/compile_fx.py:222: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Prefill latency: 31.45200074603781 sec
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 33.34867886500433 sec
Compilation time: 64.80 seconds
Prefill latency: 2.2658017999492586 sec
/dccstor/mayankmish2/miniconda3/envs/ai/lib/python3.10/contextlib.py:103: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
Decode latency: 6.700091612990946 sec
Prefill latency: 1.6416073441505432 sec
Decode latency: 6.69228013092652 sec
Prefill latency: 1.6217879801988602 sec
Decode latency: 6.693355982657522 sec
Prefill latency: 1.6415617843158543 sec
Decode latency: 6.6920814658515155 sec
Prefill latency: 1.6305240928195417 sec
Decode latency: 6.692427803296596 sec
Time for inference 1: 8.33 sec total, 1967.85 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.63 sec
Bandwidth achieved: 29537.12 GB/s
FLOPS achieved: 88.61 TF/s

Prefill latency: 1.6283893282525241 sec
Decode latency: 6.6910266750492156 sec
Time for inference 2: 8.32 sec total, 1968.58 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.63 sec
Bandwidth achieved: 29548.10 GB/s
FLOPS achieved: 88.64 TF/s

Prefill latency: 1.6254527671262622 sec
Decode latency: 6.692701189313084 sec
Time for inference 3: 8.32 sec total, 1969.10 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.63 sec
Bandwidth achieved: 29555.89 GB/s
FLOPS achieved: 88.67 TF/s

Prefill latency: 1.6380847310647368 sec
Decode latency: 6.692606656812131 sec
Time for inference 4: 8.33 sec total, 1966.08 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.64 sec
Bandwidth achieved: 29510.61 GB/s
FLOPS achieved: 88.53 TF/s

Prefill latency: 1.6360116773284972 sec
Decode latency: 6.692014415282756 sec
Time for inference 5: 8.33 sec total, 1966.80 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.64 sec
Bandwidth achieved: 29521.32 GB/s
FLOPS achieved: 88.56 TF/s

Prefill latency: 1.6276840940117836 sec
Decode latency: 6.693547276780009 sec
Time for inference 6: 8.32 sec total, 1968.37 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.63 sec
Bandwidth achieved: 29544.95 GB/s
FLOPS achieved: 88.63 TF/s

Prefill latency: 1.6350417868234217 sec
Decode latency: 6.69202369498089 sec
Time for inference 7: 8.33 sec total, 1967.03 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.64 sec
Bandwidth achieved: 29524.78 GB/s
FLOPS achieved: 88.57 TF/s

Prefill latency: 1.618173774331808 sec
Decode latency: 6.696027369238436 sec
Time for inference 8: 8.32 sec total, 1969.98 tokens/sec
Decode latency: 6.70 sec
Prefill latency: 1.62 sec
Bandwidth achieved: 29569.05 GB/s
FLOPS achieved: 88.71 TF/s

Prefill latency: 1.649383596610278 sec
Decode latency: 6.694634519983083 sec
Time for inference 9: 8.35 sec total, 1963.03 tokens/sec
Decode latency: 6.69 sec
Prefill latency: 1.65 sec
Bandwidth achieved: 29464.72 GB/s
FLOPS achieved: 88.39 TF/s

Prefill latency: 1.6200867551378906 sec
Decode latency: 6.695718891918659 sec
Time for inference 10: 8.32 sec total, 1969.70 tokens/sec
Decode latency: 6.70 sec
Prefill latency: 1.62 sec
Bandwidth achieved: 29564.90 GB/s
FLOPS achieved: 88.69 TF/s

==========
Batch Size: 32
Prompt Length: 1024
Generated tokens: 512
Average decode latency: 6.6933 sec
Average prefill latency: 1.6309 sec
Average tokens/sec: 1967.65
Memory used: 49.19 GB
[rank0]:[W1114 12:37:04.040126687 ProcessGroupNCCL.cpp:4393] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect. Specify device_ids in barrier() to force use of a particular device, or call init_process_group() with a device_id.
Done. we are killing the process
[rank0]:[W1114 12:37:06.023460859 ProcessGroupNCCL.cpp:1374] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
