# AOT ID: ['0_inference']
from ctypes import c_void_p, c_long, c_int
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align
from torch import device, empty_strided
from torch._inductor.async_compile import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels
from torch._inductor.codegen.multi_kernel import MultiKernelCall
import triton
import triton.language as tl
from torch._inductor.runtime.triton_heuristics import (
    grid,
    split_scan_grid,
    grid_combo_kernels,
    start_graph,
    end_graph,
    cooperative_reduction_grid,
)
from torch._C import _cuda_getCurrentRawStream as get_raw_stream

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
_quantized = torch.ops._quantized
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
alloc_from_pool = torch.ops.inductor._alloc_from_pool
async_compile = AsyncCompile()
empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/2d/c2dmmmobwzusp3327fw4gda4vogf4hppkuggvr7gbysfcqbhu3xm.py
# Topologically Sorted Source Nodes: [x, float_1, mul, mean, add, rsqrt, mul_1, output, output_1], Original ATen: [aten.embedding, aten._to_copy, aten.mul, aten.mean, aten.add, aten.rsqrt]
# Source node to ATen node mapping:
#   add => add
#   float_1 => convert_element_type
#   mean => mean
#   mul => mul
#   mul_1 => mul_1
#   output => convert_element_type_1
#   output_1 => mul_2
#   rsqrt => rsqrt
#   x => embedding
# Graph fragment:
#   %embedding : [num_users=2] = call_function[target=torch.ops.aten.embedding.default](args = (%arg3_1, %arg4_1), kwargs = {})
#   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%embedding, torch.float32), kwargs = {})
#   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %convert_element_type), kwargs = {})
#   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul, [-1], True), kwargs = {})
#   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, 1e-05), kwargs = {})
#   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
#   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %rsqrt), kwargs = {})
#   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_1, torch.float16), kwargs = {})
#   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_1, %arg5_1), kwargs = {})
triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_0 = async_compile.triton('triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_0', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_0(in_ptr0, in_ptr1, in_ptr2, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    _tmp10 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp1 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp0 < 0
        tmp4 = tl.where(tmp3, tmp2, tmp0)
        tl.device_assert((0 <= tmp4) & (tmp4 < 128256), "index out of bounds: 0 <= tmp4 < 128256")
        tmp6 = tl.load(in_ptr1 + (r1 + (16384*tmp4)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp7 = tmp6.to(tl.float32)
        tmp8 = tmp7 * tmp7
        tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
        tmp11 = _tmp10 + tmp9
        _tmp10 = tl.where(rmask, tmp11, _tmp10)
    tmp10 = tl.sum(_tmp10, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp26 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp12 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp13 = tmp0 + tmp12
        tmp14 = tmp0 < 0
        tmp15 = tl.where(tmp14, tmp13, tmp0)
        tl.device_assert((0 <= tmp15) & (tmp15 < 128256), "index out of bounds: 0 <= tmp15 < 128256")
        tmp17 = tl.load(in_ptr1 + (r1 + (16384*tmp15)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp18 = tmp17.to(tl.float32)
        tmp19 = 16384.0
        tmp20 = tmp10 / tmp19
        tmp21 = 1e-05
        tmp22 = tmp20 + tmp21
        tmp23 = libdevice.rsqrt(tmp22)
        tmp24 = tmp18 * tmp23
        tmp25 = tmp24.to(tl.float32)
        tmp27 = tmp25 * tmp26
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp27, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/yw/cywfixd7f76boz2tpvxny2w5hztedzajclxr5sbp5kdztn3l5uwj.py
# Topologically Sorted Source Nodes: [setitem, setitem_1], Original ATen: [aten.index_put]
# Source node to ATen node mapping:
#   setitem => index_put
#   setitem_1 => index_put_1
# Graph fragment:
#   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%arg7_1, [None, None, %arg2_1], %permute_2), kwargs = {})
#   %index_put_1 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%arg8_1, [None, None, %arg2_1], %permute_3), kwargs = {})
triton_poi_fused_index_put_1 = async_compile.triton('triton_poi_fused_index_put_1', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[2097152], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'out_ptr0': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_index_put_1', 'mutated_arg_names': ['out_ptr0', 'out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_index_put_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 2097152
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x1 = (xindex // 128) % 1024
    x4 = xindex
    x0 = xindex % 128
    x3 = (xindex // 128)
    x2 = (xindex // 131072)
    tmp0 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
    tmp53 = tl.load(in_ptr1 + (1152 + x0 + (1280*x3)), None).to(tl.float32)
    tmp1 = tl.full([XBLOCK], 1536, tl.int32)
    tmp2 = tmp0 + tmp1
    tmp3 = tmp0 < 0
    tmp4 = tl.where(tmp3, tmp2, tmp0)
    tl.device_assert((0 <= tmp4) & (tmp4 < 1536), "index out of bounds: 0 <= tmp4 < 1536")
    tmp6 = x4 % 2
    tmp7 = tl.full([1], 0, tl.int64)
    tmp8 = tmp6 >= tmp7
    tmp9 = tl.full([1], 1, tl.int64)
    tmp10 = tmp6 < tmp9
    tmp11 = tl.load(in_ptr1 + (1024 + (2*(x0 // 2)) + (1280*x3)), tmp10, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp12 = tmp11.to(tl.float32)
    tmp13 = tl.load(in_ptr0 + (x1), tmp10, eviction_policy='evict_last', other=0.0)
    tmp14 = tl.full([XBLOCK], 131072, tl.int32)
    tmp15 = tmp13 + tmp14
    tmp16 = tmp13 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp13)
    tl.device_assert(((0 <= tl.broadcast_to(tmp17, [XBLOCK])) & (tl.broadcast_to(tmp17, [XBLOCK]) < 131072)) | ~(tmp10), "index out of bounds: 0 <= tl.broadcast_to(tmp17, [XBLOCK]) < 131072")
    tmp19 = tl.load(in_ptr2 + ((2*(x0 // 2)) + (128*tmp17)), tmp10, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp20 = tmp19.to(tl.float32)
    tmp21 = tmp12 * tmp20
    tmp22 = tl.load(in_ptr1 + (1025 + (2*(x0 // 2)) + (1280*x3)), tmp10, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp23 = tmp22.to(tl.float32)
    tmp24 = tl.load(in_ptr2 + (1 + (2*(x0 // 2)) + (128*tmp17)), tmp10, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp25 = tmp24.to(tl.float32)
    tmp26 = tmp23 * tmp25
    tmp27 = tmp21 - tmp26
    tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
    tmp29 = tl.where(tmp10, tmp27, tmp28)
    tmp30 = tmp6 >= tmp9
    tmp31 = tl.full([1], 2, tl.int64)
    tmp32 = tmp6 < tmp31
    tmp33 = tl.load(in_ptr1 + (1025 + (2*(x0 // 2)) + (1280*x3)), tmp30, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp34 = tmp33.to(tl.float32)
    tmp35 = tl.load(in_ptr0 + (x1), tmp30, eviction_policy='evict_last', other=0.0)
    tmp36 = tmp35 + tmp14
    tmp37 = tmp35 < 0
    tmp38 = tl.where(tmp37, tmp36, tmp35)
    tl.device_assert(((0 <= tl.broadcast_to(tmp38, [XBLOCK])) & (tl.broadcast_to(tmp38, [XBLOCK]) < 131072)) | ~(tmp30), "index out of bounds: 0 <= tl.broadcast_to(tmp38, [XBLOCK]) < 131072")
    tmp40 = tl.load(in_ptr2 + ((2*(x0 // 2)) + (128*tmp38)), tmp30, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp41 = tmp40.to(tl.float32)
    tmp42 = tmp34 * tmp41
    tmp43 = tl.load(in_ptr1 + (1024 + (2*(x0 // 2)) + (1280*x3)), tmp30, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp44 = tmp43.to(tl.float32)
    tmp45 = tl.load(in_ptr2 + (1 + (2*(x0 // 2)) + (128*tmp38)), tmp30, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp46 = tmp45.to(tl.float32)
    tmp47 = tmp44 * tmp46
    tmp48 = tmp42 + tmp47
    tmp49 = tl.full(tmp48.shape, 0.0, tmp48.dtype)
    tmp50 = tl.where(tmp30, tmp48, tmp49)
    tmp51 = tl.where(tmp10, tmp29, tmp50)
    tmp52 = tmp51.to(tl.float32)
    tl.store(out_ptr0 + (x0 + (128*tmp4) + (196608*x2)), tmp52, None)
    tl.store(out_ptr1 + (x0 + (128*tmp4) + (196608*x2)), tmp53, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/tg/ctgcyy33tlf425ac255lzxhhoh5snctliascqdngyvfudesja5mj.py
# Topologically Sorted Source Nodes: [y], Original ATen: [aten._to_copy, aten.mul, aten.clone]
# Source node to ATen node mapping:
#   y => clone_2, convert_element_type_8, mul_11
# Graph fragment:
#   %convert_element_type_8 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%permute_1, torch.float32), kwargs = {})
#   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type_8, 0.29730177875068026), kwargs = {})
#   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_4,), kwargs = {memory_format: torch.contiguous_format})
triton_poi_fused__to_copy_clone_mul_2 = async_compile.triton('triton_poi_fused__to_copy_clone_mul_2', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[16777216], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*i64', 'in_ptr2': '*fp16', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_clone_mul_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_clone_mul_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16777216
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x5 = xindex
    x0 = xindex % 128
    x1 = (xindex // 128) % 8
    x6 = (xindex // 1024)
    x2 = (xindex // 1024) % 1024
    x3 = (xindex // 1048576)
    tmp0 = x5 % 2
    tmp1 = tl.full([1], 0, tl.int64)
    tmp2 = tmp0 >= tmp1
    tmp3 = tl.full([1], 1, tl.int64)
    tmp4 = tmp0 < tmp3
    tmp5 = tl.load(in_ptr0 + ((2*(x0 // 2)) + (128*x1) + (1280*x6)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp6 = tmp5.to(tl.float32)
    tmp7 = tl.load(in_ptr1 + (x2), tmp4, eviction_policy='evict_last', other=0.0)
    tmp8 = tl.full([XBLOCK], 131072, tl.int32)
    tmp9 = tmp7 + tmp8
    tmp10 = tmp7 < 0
    tmp11 = tl.where(tmp10, tmp9, tmp7)
    tl.device_assert(((0 <= tl.broadcast_to(tmp11, [XBLOCK])) & (tl.broadcast_to(tmp11, [XBLOCK]) < 131072)) | ~(tmp4), "index out of bounds: 0 <= tl.broadcast_to(tmp11, [XBLOCK]) < 131072")
    tmp13 = tl.load(in_ptr2 + ((2*(x0 // 2)) + (128*tmp11)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp14 = tmp13.to(tl.float32)
    tmp15 = tmp6 * tmp14
    tmp16 = tl.load(in_ptr0 + (1 + (2*(x0 // 2)) + (128*x1) + (1280*x6)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp17 = tmp16.to(tl.float32)
    tmp18 = tl.load(in_ptr2 + (1 + (2*(x0 // 2)) + (128*tmp11)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp19 = tmp18.to(tl.float32)
    tmp20 = tmp17 * tmp19
    tmp21 = tmp15 - tmp20
    tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
    tmp23 = tl.where(tmp4, tmp21, tmp22)
    tmp24 = tmp0 >= tmp3
    tmp25 = tl.full([1], 2, tl.int64)
    tmp26 = tmp0 < tmp25
    tmp27 = tl.load(in_ptr0 + (1 + (2*(x0 // 2)) + (128*x1) + (1280*x6)), tmp24, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp28 = tmp27.to(tl.float32)
    tmp29 = tl.load(in_ptr1 + (x2), tmp24, eviction_policy='evict_last', other=0.0)
    tmp30 = tmp29 + tmp8
    tmp31 = tmp29 < 0
    tmp32 = tl.where(tmp31, tmp30, tmp29)
    tl.device_assert(((0 <= tl.broadcast_to(tmp32, [XBLOCK])) & (tl.broadcast_to(tmp32, [XBLOCK]) < 131072)) | ~(tmp24), "index out of bounds: 0 <= tl.broadcast_to(tmp32, [XBLOCK]) < 131072")
    tmp34 = tl.load(in_ptr2 + ((2*(x0 // 2)) + (128*tmp32)), tmp24, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp35 = tmp34.to(tl.float32)
    tmp36 = tmp28 * tmp35
    tmp37 = tl.load(in_ptr0 + ((2*(x0 // 2)) + (128*x1) + (1280*x6)), tmp24, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp38 = tmp37.to(tl.float32)
    tmp39 = tl.load(in_ptr2 + (1 + (2*(x0 // 2)) + (128*tmp32)), tmp24, eviction_policy='evict_last', other=0.0).to(tl.float32)
    tmp40 = tmp39.to(tl.float32)
    tmp41 = tmp38 * tmp40
    tmp42 = tmp36 + tmp41
    tmp43 = tl.full(tmp42.shape, 0.0, tmp42.dtype)
    tmp44 = tl.where(tmp24, tmp42, tmp43)
    tmp45 = tl.where(tmp4, tmp23, tmp44)
    tmp46 = tmp45.to(tl.float32)
    tmp47 = tmp46.to(tl.float32)
    tmp48 = 0.29730177875068026
    tmp49 = tmp47 * tmp48
    tl.store(out_ptr0 + (x0 + (128*x2) + (131072*x1) + (1048576*x3)), tmp49, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/tl/ctldyd6kvptt6fm2k2fwmlwrbleschr2xo6rn7y75d2ukfzdjfmb.py
# Topologically Sorted Source Nodes: [y], Original ATen: [aten.mul]
# Source node to ATen node mapping:
#   y => mul_12
# Graph fragment:
#   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_4, 0.29730177875068026), kwargs = {})
triton_poi_fused_mul_3 = async_compile.triton('triton_poi_fused_mul_3', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[33554432], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_mul_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 25165824
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = xindex % 1536
    x1 = (xindex // 1536) % 128
    x3 = (xindex // 1572864)
    x4 = xindex
    tmp0 = tl.load(in_ptr0 + (x1 + (128*x0) + (196608*x3)), None, eviction_policy='evict_last').to(tl.float32)
    tmp1 = tmp0.to(tl.float32)
    tmp2 = 0.29730177875068026
    tmp3 = tmp1 * tmp2
    tl.store(out_ptr0 + (x4), tmp3, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/53/c536bvsu4cn5maalbg7jsmigak3agrkbe3vfrlho5r2e6kfdg4lr.py
# Topologically Sorted Source Nodes: [mask, y], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
# Source node to ATen node mapping:
#   mask => index
#   y => add_3, amax, any_1, div, eq, exp, full_default, full_default_1, full_default_2, logical_not, logical_not_1, sub_2, sum_1, where, where_1
# Graph fragment:
#   %index : [num_users=126] = call_function[target=torch.ops.aten.index.Tensor](args = (%unsqueeze_1, [None, None, %arg2_1]), kwargs = {})
#   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%index, %full_default_1, %full_default), kwargs = {})
#   %add_3 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_15, %where), kwargs = {})
#   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%add_3, -inf), kwargs = {})
#   %logical_not : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq,), kwargs = {})
#   %any_1 : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not, -1, True), kwargs = {})
#   %logical_not_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_1,), kwargs = {})
#   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([16, 8, 1024, 1536], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_3, [-1], True), kwargs = {})
#   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %amax), kwargs = {})
#   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
#   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
#   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
#   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_1, %full_default_2, %div), kwargs = {})
triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4 = async_compile.triton('triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[131072, 2048],
    reduction_hint=ReductionHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i1', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 3, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 131072
    rnumel = 1536
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x3 = xindex
    x0 = xindex % 1024
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    _tmp18 = tl.full([XBLOCK, RBLOCK], 0, tl.int1)
    _tmp21 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r2 = rindex
        tmp0 = tl.load(in_out_ptr0 + (r2 + (1536*x3)), rmask, eviction_policy='evict_last', other=0.0)
        tmp2 = tl.full([XBLOCK, RBLOCK], 1536, tl.int32)
        tmp3 = tmp1 + tmp2
        tmp4 = tmp1 < 0
        tmp5 = tl.where(tmp4, tmp3, tmp1)
        tl.device_assert((0 <= tmp5) & (tmp5 < 1536), "index out of bounds: 0 <= tmp5 < 1536")
        tmp7 = tl.load(in_ptr1 + (r2 + (1536*tmp5)), rmask, eviction_policy='evict_last', other=0.0).to(tl.int1)
        tmp8 = 0.0
        tmp9 = float("-inf")
        tmp10 = tl.where(tmp7, tmp8, tmp9)
        tmp11 = tmp10.to(tl.float32)
        tmp12 = tmp0 + tmp11
        tmp13 = tmp12 == tmp9
        tmp14 = tmp13 == 0
        tmp15 = tmp14.to(tl.int64)
        tmp16 = (tmp15 != 0)
        tmp17 = tl.broadcast_to(tmp16, [XBLOCK, RBLOCK])
        tmp19 = _tmp18 | tmp17
        _tmp18 = tl.where(rmask, tmp19, _tmp18)
        tmp20 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
        tmp22 = triton_helpers.maximum(_tmp21, tmp20)
        _tmp21 = tl.where(rmask, tmp22, _tmp21)
    tmp18 = triton_helpers.any(_tmp18.to(tl.int8), 1)[:, None].to(tl.int1)
    tmp21 = triton_helpers.max2(_tmp21, 1)[:, None]
    _tmp38 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r2 = rindex
        tmp23 = tl.load(in_out_ptr0 + (r2 + (1536*x3)), rmask, eviction_policy='evict_last', other=0.0)
        tmp24 = tl.full([XBLOCK, RBLOCK], 1536, tl.int32)
        tmp25 = tmp1 + tmp24
        tmp26 = tmp1 < 0
        tmp27 = tl.where(tmp26, tmp25, tmp1)
        tl.device_assert((0 <= tmp27) & (tmp27 < 1536), "index out of bounds: 0 <= tmp27 < 1536")
        tmp29 = tl.load(in_ptr1 + (r2 + (1536*tmp27)), rmask, eviction_policy='evict_last', other=0.0).to(tl.int1)
        tmp30 = 0.0
        tmp31 = float("-inf")
        tmp32 = tl.where(tmp29, tmp30, tmp31)
        tmp33 = tmp32.to(tl.float32)
        tmp34 = tmp23 + tmp33
        tmp35 = tmp34 - tmp21
        tmp36 = tl_math.exp(tmp35)
        tmp37 = tl.broadcast_to(tmp36, [XBLOCK, RBLOCK])
        tmp39 = _tmp38 + tmp37
        _tmp38 = tl.where(rmask, tmp39, _tmp38)
    tmp38 = tl.sum(_tmp38, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r2 = rindex
        tmp41 = tl.load(in_out_ptr0 + (r2 + (1536*x3)), rmask, eviction_policy='evict_first', other=0.0)
        tmp40 = tmp18 == 0
        tmp42 = tl.full([XBLOCK, RBLOCK], 1536, tl.int32)
        tmp43 = tmp1 + tmp42
        tmp44 = tmp1 < 0
        tmp45 = tl.where(tmp44, tmp43, tmp1)
        tl.device_assert((0 <= tmp45) & (tmp45 < 1536), "index out of bounds: 0 <= tmp45 < 1536")
        tmp47 = tl.load(in_ptr1 + (r2 + (1536*tmp45)), rmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
        tmp48 = 0.0
        tmp49 = float("-inf")
        tmp50 = tl.where(tmp47, tmp48, tmp49)
        tmp51 = tmp50.to(tl.float32)
        tmp52 = tmp41 + tmp51
        tmp53 = tmp52 - tmp21
        tmp54 = tl_math.exp(tmp53)
        tmp55 = tmp54 / tmp38
        tmp56 = tl.where(tmp40, tmp48, tmp55)
        tl.store(in_out_ptr0 + (r2 + (1536*x3)), tmp56, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/dh/cdhiard7n4txeyn2tknw75pcamvuycwmptaqfjj5mgnnhipb42qo.py
# Topologically Sorted Source Nodes: [y], Original ATen: [aten._to_copy]
# Source node to ATen node mapping:
#   y => convert_element_type_10
# Graph fragment:
#   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_12, torch.float32), kwargs = {})
triton_poi_fused__to_copy_5 = async_compile.triton('triton_poi_fused__to_copy_5', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[33554432], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 25165824
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = xindex % 196608
    x2 = (xindex // 1572864)
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + (196608*x2)), None, eviction_policy='evict_last').to(tl.float32)
    tmp1 = tmp0.to(tl.float32)
    tl.store(out_ptr0 + (x3), tmp1, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/qe/cqen7updvt5if2tvu46jpul2gy5qb4uly2m7v75t2ngiowmbecdt.py
# Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
# Source node to ATen node mapping:
#   contiguous => clone_3
# Graph fragment:
#   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_5,), kwargs = {memory_format: torch.contiguous_format})
triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[16777216], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp16', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_clone_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16777216
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = xindex % 128
    x1 = (xindex // 128) % 8
    x2 = (xindex // 1024) % 1024
    x3 = (xindex // 1048576)
    x4 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + (128*x2) + (131072*x1) + (1048576*x3)), None)
    tmp1 = tmp0.to(tl.float32)
    tl.store(out_ptr0 + (x4), tmp1, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/5c/c5ch6ciw3vkvpsalfsgl7mcrieofem5zlau3lpzn5gs7sryp2nap.py
# Topologically Sorted Source Nodes: [x, x_2, float_4, mul_11, mean_1, add_4, rsqrt_1, mul_12, output_2, output_3], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_4 => add_5
#   float_4 => convert_element_type_15
#   mean_1 => mean_1
#   mul_11 => mul_13
#   mul_12 => mul_14
#   output_2 => convert_element_type_16
#   output_3 => mul_15
#   rsqrt_1 => rsqrt_1
#   x => embedding
#   x_2 => add_4
# Graph fragment:
#   %embedding : [num_users=2] = call_function[target=torch.ops.aten.embedding.default](args = (%arg3_1, %arg4_1), kwargs = {})
#   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%embedding, %wait_tensor), kwargs = {})
#   %convert_element_type_15 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_4, torch.float32), kwargs = {})
#   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_15, %convert_element_type_15), kwargs = {})
#   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_13, [-1], True), kwargs = {})
#   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_1, 1e-05), kwargs = {})
#   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
#   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_15, %rsqrt_1), kwargs = {})
#   %convert_element_type_16 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_14, torch.float16), kwargs = {})
#   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_16, %arg10_1), kwargs = {})
triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_7 = async_compile.triton('triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_7', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_7', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    _tmp12 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp7 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp0 < 0
        tmp4 = tl.where(tmp3, tmp2, tmp0)
        tl.device_assert((0 <= tmp4) & (tmp4 < 128256), "index out of bounds: 0 <= tmp4 < 128256")
        tmp6 = tl.load(in_ptr1 + (r1 + (16384*tmp4)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp8 = tmp6 + tmp7
        tmp9 = tmp8.to(tl.float32)
        tmp10 = tmp9 * tmp9
        tmp11 = tl.broadcast_to(tmp10, [XBLOCK, RBLOCK])
        tmp13 = _tmp12 + tmp11
        _tmp12 = tl.where(rmask, tmp13, _tmp12)
    tmp12 = tl.sum(_tmp12, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp20 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp30 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp14 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp15 = tmp0 + tmp14
        tmp16 = tmp0 < 0
        tmp17 = tl.where(tmp16, tmp15, tmp0)
        tl.device_assert((0 <= tmp17) & (tmp17 < 128256), "index out of bounds: 0 <= tmp17 < 128256")
        tmp19 = tl.load(in_ptr1 + (r1 + (16384*tmp17)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp21 = tmp19 + tmp20
        tmp22 = tmp21.to(tl.float32)
        tmp23 = 16384.0
        tmp24 = tmp12 / tmp23
        tmp25 = 1e-05
        tmp26 = tmp24 + tmp25
        tmp27 = libdevice.rsqrt(tmp26)
        tmp28 = tmp22 * tmp27
        tmp29 = tmp28.to(tl.float32)
        tmp31 = tmp29 * tmp30
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp31, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/bu/cbul2c3qv5xinklqb6c4iu4vc3mmuvqxn34hlkligfuvum4lkrr6.py
# Topologically Sorted Source Nodes: [silu, mul_14], Original ATen: [aten.silu, aten.mul]
# Source node to ATen node mapping:
#   mul_14 => mul_17
#   silu => convert_element_type_19, convert_element_type_20, mul_16, sigmoid
# Graph fragment:
#   %convert_element_type_19 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%getitem_4, torch.float32), kwargs = {})
#   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convert_element_type_19,), kwargs = {})
#   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_19, %sigmoid), kwargs = {})
#   %convert_element_type_20 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_16, torch.float16), kwargs = {})
#   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_20, %getitem_3), kwargs = {})
triton_poi_fused_mul_silu_8 = async_compile.triton('triton_poi_fused_mul_silu_8', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[67108864], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'out_ptr0': '*fp16', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_silu_8', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_mul_silu_8(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 54525952
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = xindex % 3328
    x1 = (xindex // 3328)
    x2 = xindex
    tmp0 = tl.load(in_ptr0 + (3328 + x0 + (6656*x1)), None).to(tl.float32)
    tmp5 = tl.load(in_ptr0 + (x0 + (6656*x1)), None).to(tl.float32)
    tmp1 = tmp0.to(tl.float32)
    tmp2 = tl.sigmoid(tmp1)
    tmp3 = tmp1 * tmp2
    tmp4 = tmp3.to(tl.float32)
    tmp6 = tmp4 * tmp5
    tl.store(out_ptr0 + (x2), tmp6, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/uy/cuyftz4xorpvwm4uv7kqp5pnerkmykkjcxhzcgkflcwcxt5hilez.py
# Topologically Sorted Source Nodes: [x, x_2, x_5, float_5, mul_15, mean_2, add_6, rsqrt_2, mul_16, output_4, output_5], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_6 => add_7
#   float_5 => convert_element_type_23
#   mean_2 => mean_2
#   mul_15 => mul_18
#   mul_16 => mul_19
#   output_4 => convert_element_type_24
#   output_5 => mul_20
#   rsqrt_2 => rsqrt_2
#   x => embedding
#   x_2 => add_4
#   x_5 => add_6
# Graph fragment:
#   %embedding : [num_users=2] = call_function[target=torch.ops.aten.embedding.default](args = (%arg3_1, %arg4_1), kwargs = {})
#   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%embedding, %wait_tensor), kwargs = {})
#   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %wait_tensor_1), kwargs = {})
#   %convert_element_type_23 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_6, torch.float32), kwargs = {})
#   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_23, %convert_element_type_23), kwargs = {})
#   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_18, [-1], True), kwargs = {})
#   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_2, 1e-05), kwargs = {})
#   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_7,), kwargs = {})
#   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_23, %rsqrt_2), kwargs = {})
#   %convert_element_type_24 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_19, torch.float16), kwargs = {})
#   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_24, %arg13_1), kwargs = {})
triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_9 = async_compile.triton('triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_9', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'in_ptr4': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_9', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_9(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    _tmp14 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp7 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp9 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp0 < 0
        tmp4 = tl.where(tmp3, tmp2, tmp0)
        tl.device_assert((0 <= tmp4) & (tmp4 < 128256), "index out of bounds: 0 <= tmp4 < 128256")
        tmp6 = tl.load(in_ptr1 + (r1 + (16384*tmp4)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp8 = tmp6 + tmp7
        tmp10 = tmp8 + tmp9
        tmp11 = tmp10.to(tl.float32)
        tmp12 = tmp11 * tmp11
        tmp13 = tl.broadcast_to(tmp12, [XBLOCK, RBLOCK])
        tmp15 = _tmp14 + tmp13
        _tmp14 = tl.where(rmask, tmp15, _tmp14)
    tmp14 = tl.sum(_tmp14, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp22 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp24 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp34 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp16 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp17 = tmp0 + tmp16
        tmp18 = tmp0 < 0
        tmp19 = tl.where(tmp18, tmp17, tmp0)
        tl.device_assert((0 <= tmp19) & (tmp19 < 128256), "index out of bounds: 0 <= tmp19 < 128256")
        tmp21 = tl.load(in_ptr1 + (r1 + (16384*tmp19)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp23 = tmp21 + tmp22
        tmp25 = tmp23 + tmp24
        tmp26 = tmp25.to(tl.float32)
        tmp27 = 16384.0
        tmp28 = tmp14 / tmp27
        tmp29 = 1e-05
        tmp30 = tmp28 + tmp29
        tmp31 = libdevice.rsqrt(tmp30)
        tmp32 = tmp26 * tmp31
        tmp33 = tmp32.to(tl.float32)
        tmp35 = tmp33 * tmp34
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp35, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/5f/c5ffzx7pxrccp6f6gmwggsqv36dgr2qfjvo4sqdugtegnvunx6pr.py
# Topologically Sorted Source Nodes: [x, x_2, x_5, x_7, float_8, mul_26, mean_3, add_10, rsqrt_3, mul_27, output_6, output_7], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_10 => add_12
#   float_8 => convert_element_type_38
#   mean_3 => mean_3
#   mul_26 => mul_31
#   mul_27 => mul_32
#   output_6 => convert_element_type_39
#   output_7 => mul_33
#   rsqrt_3 => rsqrt_3
#   x => embedding
#   x_2 => add_4
#   x_5 => add_6
#   x_7 => add_11
# Graph fragment:
#   %embedding : [num_users=2] = call_function[target=torch.ops.aten.embedding.default](args = (%arg3_1, %arg4_1), kwargs = {})
#   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%embedding, %wait_tensor), kwargs = {})
#   %add_6 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %wait_tensor_1), kwargs = {})
#   %add_11 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_6, %wait_tensor_2), kwargs = {})
#   %convert_element_type_38 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_11, torch.float32), kwargs = {})
#   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_38, %convert_element_type_38), kwargs = {})
#   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_31, [-1], True), kwargs = {})
#   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_3, 1e-05), kwargs = {})
#   %rsqrt_3 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_12,), kwargs = {})
#   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_38, %rsqrt_3), kwargs = {})
#   %convert_element_type_39 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_32, torch.float16), kwargs = {})
#   %mul_33 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_39, %arg18_1), kwargs = {})
triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_10 = async_compile.triton('triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_10', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'in_ptr4': '*fp16', 'in_ptr5': '*fp16', 'out_ptr0': '*fp16', 'out_ptr2': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_10', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    _tmp16 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp7 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp9 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp11 = tl.load(in_ptr4 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp1 = tl.full([XBLOCK, RBLOCK], 128256, tl.int32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp0 < 0
        tmp4 = tl.where(tmp3, tmp2, tmp0)
        tl.device_assert((0 <= tmp4) & (tmp4 < 128256), "index out of bounds: 0 <= tmp4 < 128256")
        tmp6 = tl.load(in_ptr1 + (r1 + (16384*tmp4)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp8 = tmp6 + tmp7
        tmp10 = tmp8 + tmp9
        tmp12 = tmp10 + tmp11
        tmp13 = tmp12.to(tl.float32)
        tmp14 = tmp13 * tmp13
        tmp15 = tl.broadcast_to(tmp14, [XBLOCK, RBLOCK])
        tmp17 = _tmp16 + tmp15
        _tmp16 = tl.where(rmask, tmp17, _tmp16)
        tl.store(out_ptr0 + (r1 + (16384*x0)), tmp12, rmask)
    tmp16 = tl.sum(_tmp16, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp18 = tl.load(out_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp27 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp19 = tmp18.to(tl.float32)
        tmp20 = 16384.0
        tmp21 = tmp16 / tmp20
        tmp22 = 1e-05
        tmp23 = tmp21 + tmp22
        tmp24 = libdevice.rsqrt(tmp23)
        tmp25 = tmp19 * tmp24
        tmp26 = tmp25.to(tl.float32)
        tmp28 = tmp26 * tmp27
        tl.store(out_ptr2 + (r1 + (16384*x0)), tmp28, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/h3/ch3rxww3didokp6tnlln3pe6jhxhxapjo24yk7mvtz6firfe6r2s.py
# Topologically Sorted Source Nodes: [x_10, float_9, mul_30, mean_4, add_12, rsqrt_4, mul_31, output_8, output_9], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_12 => add_14
#   float_9 => convert_element_type_46
#   mean_4 => mean_4
#   mul_30 => mul_36
#   mul_31 => mul_37
#   output_8 => convert_element_type_47
#   output_9 => mul_38
#   rsqrt_4 => rsqrt_4
#   x_10 => add_13
# Graph fragment:
#   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %wait_tensor_3), kwargs = {})
#   %convert_element_type_46 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_13, torch.float32), kwargs = {})
#   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_46, %convert_element_type_46), kwargs = {})
#   %mean_4 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_36, [-1], True), kwargs = {})
#   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_4, 1e-05), kwargs = {})
#   %rsqrt_4 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_14,), kwargs = {})
#   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_46, %rsqrt_4), kwargs = {})
#   %convert_element_type_47 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_37, torch.float16), kwargs = {})
#   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_47, %arg21_1), kwargs = {})
triton_red_fused__to_copy_add_mean_mul_rsqrt_11 = async_compile.triton('triton_red_fused__to_copy_add_mean_mul_rsqrt_11', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_mean_mul_rsqrt_11', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_mean_mul_rsqrt_11(in_ptr0, in_ptr1, in_ptr2, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    _tmp6 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp0 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp2.to(tl.float32)
        tmp4 = tmp3 * tmp3
        tmp5 = tl.broadcast_to(tmp4, [XBLOCK, RBLOCK])
        tmp7 = _tmp6 + tmp5
        _tmp6 = tl.where(rmask, tmp7, _tmp6)
    tmp6 = tl.sum(_tmp6, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp8 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp9 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp19 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp10 = tmp8 + tmp9
        tmp11 = tmp10.to(tl.float32)
        tmp12 = 16384.0
        tmp13 = tmp6 / tmp12
        tmp14 = 1e-05
        tmp15 = tmp13 + tmp14
        tmp16 = libdevice.rsqrt(tmp15)
        tmp17 = tmp11 * tmp16
        tmp18 = tmp17.to(tl.float32)
        tmp20 = tmp18 * tmp19
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp20, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/3u/c3ux7gfydicbafpnazoga6e5vmmotzt3pwyc7n2q3lefbkopxy3e.py
# Topologically Sorted Source Nodes: [x_10, x_12, float_12, mul_41, mean_5, add_16, rsqrt_5, mul_42, output_10, output_11], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_16 => add_19
#   float_12 => convert_element_type_61
#   mean_5 => mean_5
#   mul_41 => mul_49
#   mul_42 => mul_50
#   output_10 => convert_element_type_62
#   output_11 => mul_51
#   rsqrt_5 => rsqrt_5
#   x_10 => add_13
#   x_12 => add_18
# Graph fragment:
#   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %wait_tensor_3), kwargs = {})
#   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_13, %wait_tensor_4), kwargs = {})
#   %convert_element_type_61 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_18, torch.float32), kwargs = {})
#   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_61, %convert_element_type_61), kwargs = {})
#   %mean_5 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_49, [-1], True), kwargs = {})
#   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_5, 1e-05), kwargs = {})
#   %rsqrt_5 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_19,), kwargs = {})
#   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_61, %rsqrt_5), kwargs = {})
#   %convert_element_type_62 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_50, torch.float16), kwargs = {})
#   %mul_51 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_62, %arg26_1), kwargs = {})
triton_red_fused__to_copy_add_mean_mul_rsqrt_12 = async_compile.triton('triton_red_fused__to_copy_add_mean_mul_rsqrt_12', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_mean_mul_rsqrt_12', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_mean_mul_rsqrt_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    _tmp8 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp0 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp3 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp2 = tmp0 + tmp1
        tmp4 = tmp2 + tmp3
        tmp5 = tmp4.to(tl.float32)
        tmp6 = tmp5 * tmp5
        tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
        tmp9 = _tmp8 + tmp7
        _tmp8 = tl.where(rmask, tmp9, _tmp8)
    tmp8 = tl.sum(_tmp8, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp10 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp11 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp13 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp23 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp12 = tmp10 + tmp11
        tmp14 = tmp12 + tmp13
        tmp15 = tmp14.to(tl.float32)
        tmp16 = 16384.0
        tmp17 = tmp8 / tmp16
        tmp18 = 1e-05
        tmp19 = tmp17 + tmp18
        tmp20 = libdevice.rsqrt(tmp19)
        tmp21 = tmp15 * tmp20
        tmp22 = tmp21.to(tl.float32)
        tmp24 = tmp22 * tmp23
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp24, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/57/c57meceusd4cai77vz6ffnvbowbs7vv26ubo5tvixsvk2yh2nznw.py
# Topologically Sorted Source Nodes: [x_10, x_12, x_15, float_13, mul_45, mean_6, add_18, rsqrt_6, mul_46, output_12, output_13], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_18 => add_21
#   float_13 => convert_element_type_69
#   mean_6 => mean_6
#   mul_45 => mul_54
#   mul_46 => mul_55
#   output_12 => convert_element_type_70
#   output_13 => mul_56
#   rsqrt_6 => rsqrt_6
#   x_10 => add_13
#   x_12 => add_18
#   x_15 => add_20
# Graph fragment:
#   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %wait_tensor_3), kwargs = {})
#   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_13, %wait_tensor_4), kwargs = {})
#   %add_20 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %wait_tensor_5), kwargs = {})
#   %convert_element_type_69 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_20, torch.float32), kwargs = {})
#   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_69, %convert_element_type_69), kwargs = {})
#   %mean_6 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_54, [-1], True), kwargs = {})
#   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_6, 1e-05), kwargs = {})
#   %rsqrt_6 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_21,), kwargs = {})
#   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_69, %rsqrt_6), kwargs = {})
#   %convert_element_type_70 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_55, torch.float16), kwargs = {})
#   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_70, %arg29_1), kwargs = {})
triton_red_fused__to_copy_add_mean_mul_rsqrt_13 = async_compile.triton('triton_red_fused__to_copy_add_mean_mul_rsqrt_13', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'in_ptr4': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_mean_mul_rsqrt_13', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_mean_mul_rsqrt_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    _tmp10 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp0 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp3 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp5 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp2 = tmp0 + tmp1
        tmp4 = tmp2 + tmp3
        tmp6 = tmp4 + tmp5
        tmp7 = tmp6.to(tl.float32)
        tmp8 = tmp7 * tmp7
        tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
        tmp11 = _tmp10 + tmp9
        _tmp10 = tl.where(rmask, tmp11, _tmp10)
    tmp10 = tl.sum(_tmp10, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp12 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp13 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp15 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp17 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp27 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp14 = tmp12 + tmp13
        tmp16 = tmp14 + tmp15
        tmp18 = tmp16 + tmp17
        tmp19 = tmp18.to(tl.float32)
        tmp20 = 16384.0
        tmp21 = tmp10 / tmp20
        tmp22 = 1e-05
        tmp23 = tmp21 + tmp22
        tmp24 = libdevice.rsqrt(tmp23)
        tmp25 = tmp19 * tmp24
        tmp26 = tmp25.to(tl.float32)
        tmp28 = tmp26 * tmp27
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp28, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/wn/cwnw2tidcbgjrl7y2hxpof4lhdsdtjf7nmdh2cdixdtmern5ts3a.py
# Topologically Sorted Source Nodes: [x_10, x_12, x_15, x_17, float_16, mul_56, mean_7, add_22, rsqrt_7, mul_57, output_14, output_15], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_22 => add_26
#   float_16 => convert_element_type_84
#   mean_7 => mean_7
#   mul_56 => mul_67
#   mul_57 => mul_68
#   output_14 => convert_element_type_85
#   output_15 => mul_69
#   rsqrt_7 => rsqrt_7
#   x_10 => add_13
#   x_12 => add_18
#   x_15 => add_20
#   x_17 => add_25
# Graph fragment:
#   %add_13 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_11, %wait_tensor_3), kwargs = {})
#   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_13, %wait_tensor_4), kwargs = {})
#   %add_20 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_18, %wait_tensor_5), kwargs = {})
#   %add_25 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_20, %wait_tensor_6), kwargs = {})
#   %convert_element_type_84 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_25, torch.float32), kwargs = {})
#   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_84, %convert_element_type_84), kwargs = {})
#   %mean_7 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_67, [-1], True), kwargs = {})
#   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_7, 1e-05), kwargs = {})
#   %rsqrt_7 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_26,), kwargs = {})
#   %mul_68 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_84, %rsqrt_7), kwargs = {})
#   %convert_element_type_85 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_68, torch.float16), kwargs = {})
#   %mul_69 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_85, %arg34_1), kwargs = {})
triton_red_fused__to_copy_add_mean_mul_rsqrt_14 = async_compile.triton('triton_red_fused__to_copy_add_mean_mul_rsqrt_14', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp16', 'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp16', 'in_ptr4': '*fp16', 'out_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_mean_mul_rsqrt_14', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_mean_mul_rsqrt_14(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    _tmp12 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp0 = tl.load(in_out_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp1 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp3 = tl.load(in_ptr1 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp5 = tl.load(in_ptr2 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp7 = tl.load(in_ptr3 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp2 = tmp0 + tmp1
        tmp4 = tmp2 + tmp3
        tmp6 = tmp4 + tmp5
        tmp8 = tmp6 + tmp7
        tmp9 = tmp8.to(tl.float32)
        tmp10 = tmp9 * tmp9
        tmp11 = tl.broadcast_to(tmp10, [XBLOCK, RBLOCK])
        tmp13 = _tmp12 + tmp11
        _tmp12 = tl.where(rmask, tmp13, _tmp12)
        tl.store(in_out_ptr0 + (r1 + (16384*x0)), tmp8, rmask)
    tmp12 = tl.sum(_tmp12, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp14 = tl.load(in_out_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp23 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp15 = tmp14.to(tl.float32)
        tmp16 = 16384.0
        tmp17 = tmp12 / tmp16
        tmp18 = 1e-05
        tmp19 = tmp17 + tmp18
        tmp20 = libdevice.rsqrt(tmp19)
        tmp21 = tmp15 * tmp20
        tmp22 = tmp21.to(tl.float32)
        tmp24 = tmp22 * tmp23
        tl.store(out_ptr1 + (r1 + (16384*x0)), tmp24, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/66/c66ofkd7fbmrvmb4nir4uqylovy2pybnnvcznytsqg74refzuxww.py
# Topologically Sorted Source Nodes: [x_630, float_505, mul_1890, mean_252, add_756, rsqrt_252, mul_1891, output_504, output_505], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
# Source node to ATen node mapping:
#   add_756 => add_882
#   float_505 => convert_element_type_2898
#   mean_252 => mean_252
#   mul_1890 => mul_2268
#   mul_1891 => mul_2269
#   output_504 => convert_element_type_2899
#   output_505 => mul_2270
#   rsqrt_252 => rsqrt_252
#   x_630 => add_881
# Graph fragment:
#   %add_881 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_879, %wait_tensor_251), kwargs = {})
#   %convert_element_type_2898 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_881, torch.float32), kwargs = {})
#   %mul_2268 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2898, %convert_element_type_2898), kwargs = {})
#   %mean_252 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%mul_2268, [-1], True), kwargs = {})
#   %add_882 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean_252, 1e-05), kwargs = {})
#   %rsqrt_252 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_882,), kwargs = {})
#   %mul_2269 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2898, %rsqrt_252), kwargs = {})
#   %convert_element_type_2899 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_2269, torch.float16), kwargs = {})
#   %mul_2270 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2899, %arg1013_1), kwargs = {})
triton_red_fused__to_copy_add_mean_mul_rsqrt_15 = async_compile.triton('triton_red_fused__to_copy_add_mean_mul_rsqrt_15', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16384, 16384],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp16', 'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_add_mean_mul_rsqrt_15', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__to_copy_add_mean_mul_rsqrt_15(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16384
    rnumel = 16384
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    _tmp6 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp0 = tl.load(in_out_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp1 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp2 = tmp0 + tmp1
        tmp3 = tmp2.to(tl.float32)
        tmp4 = tmp3 * tmp3
        tmp5 = tl.broadcast_to(tmp4, [XBLOCK, RBLOCK])
        tmp7 = _tmp6 + tmp5
        _tmp6 = tl.where(rmask, tmp7, _tmp6)
    tmp6 = tl.sum(_tmp6, 1)[:, None]
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp8 = tl.load(in_out_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp9 = tl.load(in_ptr0 + (r1 + (16384*x0)), rmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp19 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
        tmp10 = tmp8 + tmp9
        tmp11 = tmp10.to(tl.float32)
        tmp12 = 16384.0
        tmp13 = tmp6 / tmp12
        tmp14 = 1e-05
        tmp15 = tmp13 + tmp14
        tmp16 = libdevice.rsqrt(tmp15)
        tmp17 = tmp11 * tmp16
        tmp18 = tmp17.to(tl.float32)
        tmp20 = tmp18 * tmp19
        tl.store(in_out_ptr0 + (r1 + (16384*x0)), tmp20, rmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/ml/cmli4nkzj3amtzxwt7p24sumjzvdjn5snshzwftfl7fl5bkejoq5.py
# Topologically Sorted Source Nodes: [logits_1], Original ATen: [aten.div]
# Source node to ATen node mapping:
#   logits_1 => div_126
# Graph fragment:
#   %div_126 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%select_2016, 0.8), kwargs = {})
triton_poi_fused_div_16 = async_compile.triton('triton_poi_fused_div_16', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints=[2097152], 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'out_ptr0': '*fp16', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_16', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_div_16(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 2052096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = xindex % 128256
    x1 = (xindex // 128256)
    x2 = xindex
    tmp0 = tl.load(in_ptr0 + (131205888 + x0 + (131334144*x1)), None).to(tl.float32)
    tmp1 = 1.25
    tmp2 = tmp0 * tmp1
    tl.store(out_ptr0 + (x2), tmp2, None)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/4j/c4jmz7di22r4vtmm7hikdam57jlwuotup4vx3wrnm4c5znonqlif.py
# Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
# Source node to ATen node mapping:
#   logits_2 => full_default_378, where_252
#   lt => lt
#   probs => amax_126, convert_element_type_2902
# Graph fragment:
#   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%div_126, %unsqueeze_1010), kwargs = {})
#   %full_default_378 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where_252 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %full_default_378, %div_126), kwargs = {})
#   %convert_element_type_2902 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%where_252, torch.float32), kwargs = {})
#   %amax_126 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type_2902, [-1], True), kwargs = {})
triton_red_fused__softmax_lt_scalar_tensor_where_17 = async_compile.triton('triton_red_fused__softmax_lt_scalar_tensor_where_17', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[256, 8192],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_lt_scalar_tensor_where_17', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__softmax_lt_scalar_tensor_where_17(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 256
    rnumel = 8016
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    rbase = tl.arange(0, RBLOCK)[None, :]
    x3 = xindex
    x1 = (xindex // 16)
    tmp1 = tl.load(in_ptr1 + (199 + (200*x1)), xmask, eviction_policy='evict_last').to(tl.float32)
    _tmp7 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r2 = rindex
        tmp0 = tl.load(in_ptr0 + (r2 + (8016*x3)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp2 = tmp0 < tmp1
        tmp3 = float("-inf")
        tmp4 = tl.where(tmp2, tmp3, tmp0)
        tmp5 = tmp4.to(tl.float32)
        tmp6 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
        tmp8 = triton_helpers.maximum(_tmp7, tmp6)
        _tmp7 = tl.where(rmask & xmask, tmp8, _tmp7)
    tmp7 = triton_helpers.max2(_tmp7, 1)[:, None]
    tl.store(out_ptr0 + (x3), tmp7, xmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/hq/chqwrj4f657dbqjrzpkfu32gneol76rolpoanmvrhq67kgkr5rep.py
# Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
# Source node to ATen node mapping:
#   logits_2 => full_default_378, where_252
#   lt => lt
#   probs => amax_126, convert_element_type_2902
# Graph fragment:
#   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%div_126, %unsqueeze_1010), kwargs = {})
#   %full_default_378 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where_252 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %full_default_378, %div_126), kwargs = {})
#   %convert_element_type_2902 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%where_252, torch.float32), kwargs = {})
#   %amax_126 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convert_element_type_2902, [-1], True), kwargs = {})
triton_per_fused__softmax_lt_scalar_tensor_where_18 = async_compile.triton('triton_per_fused__softmax_lt_scalar_tensor_where_18', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.persistent_reduction(
    size_hints=[16, 16],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_lt_scalar_tensor_where_18', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_per_fused__softmax_lt_scalar_tensor_where_18(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    rnumel = 16
    RBLOCK: tl.constexpr = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    rindex = tl.arange(0, RBLOCK)[None, :]
    roffset = 0
    rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    r1 = rindex
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (r1 + (16*x0)), xmask, other=0.0)
    tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
    tmp3 = tl.where(xmask, tmp1, float("-inf"))
    tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/22/c226hght64xfasddwcfwkpcb77dhtgsdu7xder6nzmvd6sv6b4ws.py
# Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
# Source node to ATen node mapping:
#   logits_2 => full_default_378, where_252
#   lt => lt
#   probs => convert_element_type_2902, exp_126, sub_378, sum_127
# Graph fragment:
#   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%div_126, %unsqueeze_1010), kwargs = {})
#   %full_default_378 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where_252 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %full_default_378, %div_126), kwargs = {})
#   %convert_element_type_2902 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%where_252, torch.float32), kwargs = {})
#   %sub_378 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type_2902, %amax_126), kwargs = {})
#   %exp_126 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_378,), kwargs = {})
#   %sum_127 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_126, [-1], True), kwargs = {})
triton_red_fused__softmax_lt_scalar_tensor_where_19 = async_compile.triton('triton_red_fused__softmax_lt_scalar_tensor_where_19', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[256, 8192],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp16', 'in_ptr1': '*fp16', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_lt_scalar_tensor_where_19', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__softmax_lt_scalar_tensor_where_19(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 256
    rnumel = 8016
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    rbase = tl.arange(0, RBLOCK)[None, :]
    x3 = xindex
    x1 = (xindex // 16)
    tmp1 = tl.load(in_ptr1 + (199 + (200*x1)), xmask, eviction_policy='evict_last').to(tl.float32)
    tmp6 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
    _tmp10 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r2 = rindex
        tmp0 = tl.load(in_ptr0 + (r2 + (8016*x3)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp2 = tmp0 < tmp1
        tmp3 = float("-inf")
        tmp4 = tl.where(tmp2, tmp3, tmp0)
        tmp5 = tmp4.to(tl.float32)
        tmp7 = tmp5 - tmp6
        tmp8 = tl_math.exp(tmp7)
        tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
        tmp11 = _tmp10 + tmp9
        _tmp10 = tl.where(rmask & xmask, tmp11, _tmp10)
    tmp10 = tl.sum(_tmp10, 1)[:, None]
    tl.store(out_ptr0 + (x3), tmp10, xmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/7n/c7niekhvnredppreywplsaanuwaawmccoqcthyvsp6bq33qcmlym.py
# Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
# Source node to ATen node mapping:
#   logits_2 => full_default_378, where_252
#   lt => lt
#   probs => convert_element_type_2902, exp_126, sub_378, sum_127
# Graph fragment:
#   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%div_126, %unsqueeze_1010), kwargs = {})
#   %full_default_378 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where_252 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %full_default_378, %div_126), kwargs = {})
#   %convert_element_type_2902 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%where_252, torch.float32), kwargs = {})
#   %sub_378 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type_2902, %amax_126), kwargs = {})
#   %exp_126 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_378,), kwargs = {})
#   %sum_127 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_126, [-1], True), kwargs = {})
triton_per_fused__softmax_lt_scalar_tensor_where_20 = async_compile.triton('triton_per_fused__softmax_lt_scalar_tensor_where_20', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.persistent_reduction(
    size_hints=[16, 16],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_lt_scalar_tensor_where_20', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_per_fused__softmax_lt_scalar_tensor_where_20(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    rnumel = 16
    RBLOCK: tl.constexpr = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    rindex = tl.arange(0, RBLOCK)[None, :]
    roffset = 0
    rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
    r1 = rindex
    x0 = xindex
    tmp0 = tl.load(in_ptr0 + (r1 + (16*x0)), xmask, other=0.0)
    tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
    tmp3 = tl.where(xmask, tmp1, 0)
    tmp4 = tl.sum(tmp3, 1)[:, None]
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: /home/charlie/skip-residual/gpt-fast/torchinductor_charlie/zt/cztbl2pqaoe3jp5a55zecpeqrmcxg3ur5jrgr4q7orl3jw6i3tee.py
# Topologically Sorted Source Nodes: [lt, logits_2, probs, q_504, truediv_1, argmax, idx_next], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax, aten.exponential, aten.div, aten.argmax, aten._to_copy]
# Source node to ATen node mapping:
#   argmax => argmax
#   idx_next => convert_element_type_2906
#   logits_2 => full_default_378, where_252
#   lt => lt
#   probs => convert_element_type_2902, convert_element_type_2903, div_127, exp_126, sub_378
#   q_504 => convert_element_type_2905, full_default_379, ge, inductor_lookup_seed_default, inductor_random_default, log, mul_2271, where_253
#   truediv_1 => div_128
# Graph fragment:
#   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%div_126, %unsqueeze_1010), kwargs = {})
#   %full_default_378 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -inf), kwargs = {dtype: torch.float16, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %where_252 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %full_default_378, %div_126), kwargs = {})
#   %convert_element_type_2902 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%where_252, torch.float32), kwargs = {})
#   %sub_378 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type_2902, %amax_126), kwargs = {})
#   %exp_126 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_378,), kwargs = {})
#   %div_127 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_126, %sum_127), kwargs = {})
#   %convert_element_type_2903 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%div_127, torch.float16), kwargs = {})
#   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
#   %inductor_random_default : [num_users=2] = call_function[target=torch.ops.prims.inductor_random.default](args = ([16, 128256], %inductor_lookup_seed_default, rand), kwargs = {})
#   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%inductor_random_default, 0.9999999403953552), kwargs = {})
#   %full_default_379 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -5.960464477539063e-08), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
#   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%inductor_random_default,), kwargs = {})
#   %where_253 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ge, %full_default_379, %log), kwargs = {})
#   %mul_2271 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_253, -1.0), kwargs = {})
#   %convert_element_type_2905 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_2271, torch.float16), kwargs = {})
#   %div_128 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%convert_element_type_2903, %convert_element_type_2905), kwargs = {})
#   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%div_128, -1, True), kwargs = {})
#   %convert_element_type_2906 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%argmax, torch.int32), kwargs = {})
triton_red_fused__softmax__to_copy_argmax_div_exponential_lt_scalar_tensor_where_21 = async_compile.triton('triton_red_fused__softmax__to_copy_argmax_div_exponential_lt_scalar_tensor_where_21', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.reduction(
    size_hints=[16, 131072],
    reduction_hint=ReductionHint.INNER,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp16', 'in_ptr2': '*fp16', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr2': '*i32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 7, 8), equal_to_1=())]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax__to_copy_argmax_div_exponential_lt_scalar_tensor_where_21', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'C766DF4C74330B401EEA30AF57196D45F0DB0787EA9002C9D886631511308A07', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'coordinate_descent_tuning': True, 'coordinate_descent_search_radius': 1, 'coordinate_descent_check_all_directions': False}
)
@triton.jit
def triton_red_fused__softmax__to_copy_argmax_div_exponential_lt_scalar_tensor_where_21(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, load_seed_offset, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
    xnumel = 16
    rnumel = 128256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    rbase = tl.arange(0, RBLOCK)[None, :]
    x0 = xindex
    tmp4 = tl.load(in_ptr2 + (199 + (200*x0)), xmask, eviction_policy='evict_last').to(tl.float32)
    tmp9 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp12 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    _tmp25 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
    _tmp25_index = tl.full([XBLOCK, RBLOCK], 9223372036854775807, tl.int64)
    for roffset in range(0, rnumel, RBLOCK):
        rindex = roffset + rbase
        rmask = rindex < rnumel
        r1 = rindex
        tmp3 = tl.load(in_ptr1 + (r1 + (128256*x0)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
        tmp0 = tl.load(in_ptr0 + load_seed_offset)
        tmp1 = r1 + (128256*x0)
        tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
        tmp5 = tmp3 < tmp4
        tmp6 = float("-inf")
        tmp7 = tl.where(tmp5, tmp6, tmp3)
        tmp8 = tmp7.to(tl.float32)
        tmp10 = tmp8 - tmp9
        tmp11 = tl_math.exp(tmp10)
        tmp13 = tmp11 / tmp12
        tmp14 = tmp13.to(tl.float32)
        tmp15 = 0.9999999403953552
        tmp16 = tmp2 >= tmp15
        tmp17 = tl_math.log(tmp2)
        tmp18 = -5.960464477539063e-08
        tmp19 = tl.where(tmp16, tmp18, tmp17)
        tmp20 = -1.0
        tmp21 = tmp19 * tmp20
        tmp22 = tmp21.to(tl.float32)
        tmp23 = tmp14 / tmp22
        tmp24 = tl.broadcast_to(tmp23, [XBLOCK, RBLOCK])
        _tmp25_next, _tmp25_index_next = triton_helpers.maximum_with_index(
            _tmp25, _tmp25_index, tmp24, rindex
        )
        _tmp25 = tl.where(rmask & xmask, _tmp25_next, _tmp25)
        _tmp25_index = tl.where(rmask & xmask, _tmp25_index_next, _tmp25_index)
    tmp25_val, tmp25_idx = triton_helpers.max_with_index(_tmp25, _tmp25_index, 1)
    tmp25 = tmp25_idx[:, None]
    tmp26 = tmp25.to(tl.int32)
    tl.store(out_ptr2 + (x0), tmp26, xmask)
''', device_str='cuda')


async_compile.wait(globals())
del async_compile

def call(args):
    arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1 = args
    args.clear()
    assert_size_stride(arg0_1, (131072, 64, 2), (128, 2, 1))
    assert_size_stride(arg1_1, (1536, 1536), (1536, 1))
    assert_size_stride(arg2_1, (1024, ), (1, ))
    assert_size_stride(arg3_1, (128256, 16384), (16384, 1))
    assert_size_stride(arg4_1, (16, 1024), (1024, 1))
    assert_size_stride(arg5_1, (16384, ), (1, ))
    assert_size_stride(arg6_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg7_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg8_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg9_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg10_1, (16384, ), (1, ))
    assert_size_stride(arg11_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg12_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg13_1, (16384, ), (1, ))
    assert_size_stride(arg14_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg15_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg16_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg17_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg18_1, (16384, ), (1, ))
    assert_size_stride(arg19_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg20_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg21_1, (16384, ), (1, ))
    assert_size_stride(arg22_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg23_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg24_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg25_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg26_1, (16384, ), (1, ))
    assert_size_stride(arg27_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg28_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg29_1, (16384, ), (1, ))
    assert_size_stride(arg30_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg31_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg32_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg33_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg34_1, (16384, ), (1, ))
    assert_size_stride(arg35_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg36_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg37_1, (16384, ), (1, ))
    assert_size_stride(arg38_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg39_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg40_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg41_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg42_1, (16384, ), (1, ))
    assert_size_stride(arg43_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg44_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg45_1, (16384, ), (1, ))
    assert_size_stride(arg46_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg47_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg48_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg49_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg50_1, (16384, ), (1, ))
    assert_size_stride(arg51_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg52_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg53_1, (16384, ), (1, ))
    assert_size_stride(arg54_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg55_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg56_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg57_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg58_1, (16384, ), (1, ))
    assert_size_stride(arg59_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg60_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg61_1, (16384, ), (1, ))
    assert_size_stride(arg62_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg63_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg64_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg65_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg66_1, (16384, ), (1, ))
    assert_size_stride(arg67_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg68_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg69_1, (16384, ), (1, ))
    assert_size_stride(arg70_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg71_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg72_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg73_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg74_1, (16384, ), (1, ))
    assert_size_stride(arg75_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg76_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg77_1, (16384, ), (1, ))
    assert_size_stride(arg78_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg79_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg80_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg81_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg82_1, (16384, ), (1, ))
    assert_size_stride(arg83_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg84_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg85_1, (16384, ), (1, ))
    assert_size_stride(arg86_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg87_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg88_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg89_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg90_1, (16384, ), (1, ))
    assert_size_stride(arg91_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg92_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg93_1, (16384, ), (1, ))
    assert_size_stride(arg94_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg95_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg96_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg97_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg98_1, (16384, ), (1, ))
    assert_size_stride(arg99_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg100_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg101_1, (16384, ), (1, ))
    assert_size_stride(arg102_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg103_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg104_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg105_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg106_1, (16384, ), (1, ))
    assert_size_stride(arg107_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg108_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg109_1, (16384, ), (1, ))
    assert_size_stride(arg110_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg111_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg112_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg113_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg114_1, (16384, ), (1, ))
    assert_size_stride(arg115_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg116_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg117_1, (16384, ), (1, ))
    assert_size_stride(arg118_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg119_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg120_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg121_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg122_1, (16384, ), (1, ))
    assert_size_stride(arg123_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg124_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg125_1, (16384, ), (1, ))
    assert_size_stride(arg126_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg127_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg128_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg129_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg130_1, (16384, ), (1, ))
    assert_size_stride(arg131_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg132_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg133_1, (16384, ), (1, ))
    assert_size_stride(arg134_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg135_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg136_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg137_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg138_1, (16384, ), (1, ))
    assert_size_stride(arg139_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg140_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg141_1, (16384, ), (1, ))
    assert_size_stride(arg142_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg143_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg144_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg145_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg146_1, (16384, ), (1, ))
    assert_size_stride(arg147_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg148_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg149_1, (16384, ), (1, ))
    assert_size_stride(arg150_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg151_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg152_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg153_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg154_1, (16384, ), (1, ))
    assert_size_stride(arg155_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg156_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg157_1, (16384, ), (1, ))
    assert_size_stride(arg158_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg159_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg160_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg161_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg162_1, (16384, ), (1, ))
    assert_size_stride(arg163_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg164_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg165_1, (16384, ), (1, ))
    assert_size_stride(arg166_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg167_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg168_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg169_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg170_1, (16384, ), (1, ))
    assert_size_stride(arg171_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg172_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg173_1, (16384, ), (1, ))
    assert_size_stride(arg174_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg175_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg176_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg177_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg178_1, (16384, ), (1, ))
    assert_size_stride(arg179_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg180_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg181_1, (16384, ), (1, ))
    assert_size_stride(arg182_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg183_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg184_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg185_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg186_1, (16384, ), (1, ))
    assert_size_stride(arg187_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg188_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg189_1, (16384, ), (1, ))
    assert_size_stride(arg190_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg191_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg192_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg193_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg194_1, (16384, ), (1, ))
    assert_size_stride(arg195_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg196_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg197_1, (16384, ), (1, ))
    assert_size_stride(arg198_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg199_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg200_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg201_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg202_1, (16384, ), (1, ))
    assert_size_stride(arg203_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg204_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg205_1, (16384, ), (1, ))
    assert_size_stride(arg206_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg207_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg208_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg209_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg210_1, (16384, ), (1, ))
    assert_size_stride(arg211_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg212_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg213_1, (16384, ), (1, ))
    assert_size_stride(arg214_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg215_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg216_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg217_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg218_1, (16384, ), (1, ))
    assert_size_stride(arg219_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg220_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg221_1, (16384, ), (1, ))
    assert_size_stride(arg222_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg223_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg224_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg225_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg226_1, (16384, ), (1, ))
    assert_size_stride(arg227_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg228_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg229_1, (16384, ), (1, ))
    assert_size_stride(arg230_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg231_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg232_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg233_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg234_1, (16384, ), (1, ))
    assert_size_stride(arg235_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg236_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg237_1, (16384, ), (1, ))
    assert_size_stride(arg238_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg239_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg240_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg241_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg242_1, (16384, ), (1, ))
    assert_size_stride(arg243_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg244_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg245_1, (16384, ), (1, ))
    assert_size_stride(arg246_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg247_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg248_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg249_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg250_1, (16384, ), (1, ))
    assert_size_stride(arg251_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg252_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg253_1, (16384, ), (1, ))
    assert_size_stride(arg254_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg255_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg256_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg257_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg258_1, (16384, ), (1, ))
    assert_size_stride(arg259_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg260_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg261_1, (16384, ), (1, ))
    assert_size_stride(arg262_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg263_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg264_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg265_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg266_1, (16384, ), (1, ))
    assert_size_stride(arg267_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg268_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg269_1, (16384, ), (1, ))
    assert_size_stride(arg270_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg271_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg272_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg273_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg274_1, (16384, ), (1, ))
    assert_size_stride(arg275_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg276_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg277_1, (16384, ), (1, ))
    assert_size_stride(arg278_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg279_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg280_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg281_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg282_1, (16384, ), (1, ))
    assert_size_stride(arg283_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg284_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg285_1, (16384, ), (1, ))
    assert_size_stride(arg286_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg287_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg288_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg289_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg290_1, (16384, ), (1, ))
    assert_size_stride(arg291_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg292_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg293_1, (16384, ), (1, ))
    assert_size_stride(arg294_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg295_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg296_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg297_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg298_1, (16384, ), (1, ))
    assert_size_stride(arg299_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg300_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg301_1, (16384, ), (1, ))
    assert_size_stride(arg302_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg303_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg304_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg305_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg306_1, (16384, ), (1, ))
    assert_size_stride(arg307_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg308_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg309_1, (16384, ), (1, ))
    assert_size_stride(arg310_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg311_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg312_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg313_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg314_1, (16384, ), (1, ))
    assert_size_stride(arg315_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg316_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg317_1, (16384, ), (1, ))
    assert_size_stride(arg318_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg319_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg320_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg321_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg322_1, (16384, ), (1, ))
    assert_size_stride(arg323_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg324_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg325_1, (16384, ), (1, ))
    assert_size_stride(arg326_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg327_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg328_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg329_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg330_1, (16384, ), (1, ))
    assert_size_stride(arg331_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg332_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg333_1, (16384, ), (1, ))
    assert_size_stride(arg334_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg335_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg336_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg337_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg338_1, (16384, ), (1, ))
    assert_size_stride(arg339_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg340_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg341_1, (16384, ), (1, ))
    assert_size_stride(arg342_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg343_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg344_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg345_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg346_1, (16384, ), (1, ))
    assert_size_stride(arg347_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg348_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg349_1, (16384, ), (1, ))
    assert_size_stride(arg350_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg351_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg352_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg353_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg354_1, (16384, ), (1, ))
    assert_size_stride(arg355_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg356_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg357_1, (16384, ), (1, ))
    assert_size_stride(arg358_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg359_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg360_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg361_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg362_1, (16384, ), (1, ))
    assert_size_stride(arg363_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg364_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg365_1, (16384, ), (1, ))
    assert_size_stride(arg366_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg367_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg368_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg369_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg370_1, (16384, ), (1, ))
    assert_size_stride(arg371_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg372_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg373_1, (16384, ), (1, ))
    assert_size_stride(arg374_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg375_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg376_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg377_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg378_1, (16384, ), (1, ))
    assert_size_stride(arg379_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg380_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg381_1, (16384, ), (1, ))
    assert_size_stride(arg382_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg383_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg384_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg385_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg386_1, (16384, ), (1, ))
    assert_size_stride(arg387_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg388_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg389_1, (16384, ), (1, ))
    assert_size_stride(arg390_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg391_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg392_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg393_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg394_1, (16384, ), (1, ))
    assert_size_stride(arg395_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg396_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg397_1, (16384, ), (1, ))
    assert_size_stride(arg398_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg399_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg400_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg401_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg402_1, (16384, ), (1, ))
    assert_size_stride(arg403_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg404_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg405_1, (16384, ), (1, ))
    assert_size_stride(arg406_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg407_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg408_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg409_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg410_1, (16384, ), (1, ))
    assert_size_stride(arg411_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg412_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg413_1, (16384, ), (1, ))
    assert_size_stride(arg414_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg415_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg416_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg417_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg418_1, (16384, ), (1, ))
    assert_size_stride(arg419_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg420_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg421_1, (16384, ), (1, ))
    assert_size_stride(arg422_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg423_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg424_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg425_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg426_1, (16384, ), (1, ))
    assert_size_stride(arg427_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg428_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg429_1, (16384, ), (1, ))
    assert_size_stride(arg430_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg431_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg432_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg433_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg434_1, (16384, ), (1, ))
    assert_size_stride(arg435_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg436_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg437_1, (16384, ), (1, ))
    assert_size_stride(arg438_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg439_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg440_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg441_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg442_1, (16384, ), (1, ))
    assert_size_stride(arg443_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg444_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg445_1, (16384, ), (1, ))
    assert_size_stride(arg446_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg447_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg448_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg449_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg450_1, (16384, ), (1, ))
    assert_size_stride(arg451_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg452_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg453_1, (16384, ), (1, ))
    assert_size_stride(arg454_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg455_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg456_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg457_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg458_1, (16384, ), (1, ))
    assert_size_stride(arg459_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg460_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg461_1, (16384, ), (1, ))
    assert_size_stride(arg462_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg463_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg464_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg465_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg466_1, (16384, ), (1, ))
    assert_size_stride(arg467_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg468_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg469_1, (16384, ), (1, ))
    assert_size_stride(arg470_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg471_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg472_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg473_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg474_1, (16384, ), (1, ))
    assert_size_stride(arg475_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg476_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg477_1, (16384, ), (1, ))
    assert_size_stride(arg478_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg479_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg480_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg481_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg482_1, (16384, ), (1, ))
    assert_size_stride(arg483_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg484_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg485_1, (16384, ), (1, ))
    assert_size_stride(arg486_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg487_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg488_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg489_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg490_1, (16384, ), (1, ))
    assert_size_stride(arg491_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg492_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg493_1, (16384, ), (1, ))
    assert_size_stride(arg494_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg495_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg496_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg497_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg498_1, (16384, ), (1, ))
    assert_size_stride(arg499_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg500_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg501_1, (16384, ), (1, ))
    assert_size_stride(arg502_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg503_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg504_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg505_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg506_1, (16384, ), (1, ))
    assert_size_stride(arg507_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg508_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg509_1, (16384, ), (1, ))
    assert_size_stride(arg510_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg511_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg512_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg513_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg514_1, (16384, ), (1, ))
    assert_size_stride(arg515_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg516_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg517_1, (16384, ), (1, ))
    assert_size_stride(arg518_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg519_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg520_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg521_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg522_1, (16384, ), (1, ))
    assert_size_stride(arg523_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg524_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg525_1, (16384, ), (1, ))
    assert_size_stride(arg526_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg527_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg528_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg529_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg530_1, (16384, ), (1, ))
    assert_size_stride(arg531_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg532_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg533_1, (16384, ), (1, ))
    assert_size_stride(arg534_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg535_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg536_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg537_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg538_1, (16384, ), (1, ))
    assert_size_stride(arg539_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg540_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg541_1, (16384, ), (1, ))
    assert_size_stride(arg542_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg543_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg544_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg545_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg546_1, (16384, ), (1, ))
    assert_size_stride(arg547_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg548_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg549_1, (16384, ), (1, ))
    assert_size_stride(arg550_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg551_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg552_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg553_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg554_1, (16384, ), (1, ))
    assert_size_stride(arg555_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg556_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg557_1, (16384, ), (1, ))
    assert_size_stride(arg558_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg559_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg560_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg561_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg562_1, (16384, ), (1, ))
    assert_size_stride(arg563_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg564_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg565_1, (16384, ), (1, ))
    assert_size_stride(arg566_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg567_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg568_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg569_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg570_1, (16384, ), (1, ))
    assert_size_stride(arg571_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg572_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg573_1, (16384, ), (1, ))
    assert_size_stride(arg574_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg575_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg576_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg577_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg578_1, (16384, ), (1, ))
    assert_size_stride(arg579_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg580_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg581_1, (16384, ), (1, ))
    assert_size_stride(arg582_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg583_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg584_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg585_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg586_1, (16384, ), (1, ))
    assert_size_stride(arg587_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg588_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg589_1, (16384, ), (1, ))
    assert_size_stride(arg590_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg591_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg592_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg593_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg594_1, (16384, ), (1, ))
    assert_size_stride(arg595_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg596_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg597_1, (16384, ), (1, ))
    assert_size_stride(arg598_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg599_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg600_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg601_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg602_1, (16384, ), (1, ))
    assert_size_stride(arg603_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg604_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg605_1, (16384, ), (1, ))
    assert_size_stride(arg606_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg607_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg608_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg609_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg610_1, (16384, ), (1, ))
    assert_size_stride(arg611_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg612_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg613_1, (16384, ), (1, ))
    assert_size_stride(arg614_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg615_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg616_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg617_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg618_1, (16384, ), (1, ))
    assert_size_stride(arg619_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg620_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg621_1, (16384, ), (1, ))
    assert_size_stride(arg622_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg623_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg624_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg625_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg626_1, (16384, ), (1, ))
    assert_size_stride(arg627_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg628_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg629_1, (16384, ), (1, ))
    assert_size_stride(arg630_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg631_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg632_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg633_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg634_1, (16384, ), (1, ))
    assert_size_stride(arg635_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg636_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg637_1, (16384, ), (1, ))
    assert_size_stride(arg638_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg639_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg640_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg641_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg642_1, (16384, ), (1, ))
    assert_size_stride(arg643_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg644_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg645_1, (16384, ), (1, ))
    assert_size_stride(arg646_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg647_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg648_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg649_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg650_1, (16384, ), (1, ))
    assert_size_stride(arg651_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg652_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg653_1, (16384, ), (1, ))
    assert_size_stride(arg654_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg655_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg656_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg657_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg658_1, (16384, ), (1, ))
    assert_size_stride(arg659_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg660_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg661_1, (16384, ), (1, ))
    assert_size_stride(arg662_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg663_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg664_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg665_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg666_1, (16384, ), (1, ))
    assert_size_stride(arg667_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg668_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg669_1, (16384, ), (1, ))
    assert_size_stride(arg670_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg671_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg672_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg673_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg674_1, (16384, ), (1, ))
    assert_size_stride(arg675_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg676_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg677_1, (16384, ), (1, ))
    assert_size_stride(arg678_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg679_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg680_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg681_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg682_1, (16384, ), (1, ))
    assert_size_stride(arg683_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg684_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg685_1, (16384, ), (1, ))
    assert_size_stride(arg686_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg687_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg688_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg689_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg690_1, (16384, ), (1, ))
    assert_size_stride(arg691_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg692_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg693_1, (16384, ), (1, ))
    assert_size_stride(arg694_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg695_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg696_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg697_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg698_1, (16384, ), (1, ))
    assert_size_stride(arg699_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg700_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg701_1, (16384, ), (1, ))
    assert_size_stride(arg702_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg703_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg704_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg705_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg706_1, (16384, ), (1, ))
    assert_size_stride(arg707_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg708_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg709_1, (16384, ), (1, ))
    assert_size_stride(arg710_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg711_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg712_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg713_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg714_1, (16384, ), (1, ))
    assert_size_stride(arg715_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg716_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg717_1, (16384, ), (1, ))
    assert_size_stride(arg718_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg719_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg720_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg721_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg722_1, (16384, ), (1, ))
    assert_size_stride(arg723_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg724_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg725_1, (16384, ), (1, ))
    assert_size_stride(arg726_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg727_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg728_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg729_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg730_1, (16384, ), (1, ))
    assert_size_stride(arg731_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg732_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg733_1, (16384, ), (1, ))
    assert_size_stride(arg734_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg735_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg736_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg737_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg738_1, (16384, ), (1, ))
    assert_size_stride(arg739_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg740_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg741_1, (16384, ), (1, ))
    assert_size_stride(arg742_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg743_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg744_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg745_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg746_1, (16384, ), (1, ))
    assert_size_stride(arg747_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg748_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg749_1, (16384, ), (1, ))
    assert_size_stride(arg750_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg751_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg752_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg753_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg754_1, (16384, ), (1, ))
    assert_size_stride(arg755_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg756_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg757_1, (16384, ), (1, ))
    assert_size_stride(arg758_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg759_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg760_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg761_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg762_1, (16384, ), (1, ))
    assert_size_stride(arg763_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg764_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg765_1, (16384, ), (1, ))
    assert_size_stride(arg766_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg767_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg768_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg769_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg770_1, (16384, ), (1, ))
    assert_size_stride(arg771_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg772_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg773_1, (16384, ), (1, ))
    assert_size_stride(arg774_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg775_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg776_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg777_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg778_1, (16384, ), (1, ))
    assert_size_stride(arg779_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg780_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg781_1, (16384, ), (1, ))
    assert_size_stride(arg782_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg783_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg784_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg785_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg786_1, (16384, ), (1, ))
    assert_size_stride(arg787_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg788_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg789_1, (16384, ), (1, ))
    assert_size_stride(arg790_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg791_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg792_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg793_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg794_1, (16384, ), (1, ))
    assert_size_stride(arg795_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg796_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg797_1, (16384, ), (1, ))
    assert_size_stride(arg798_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg799_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg800_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg801_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg802_1, (16384, ), (1, ))
    assert_size_stride(arg803_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg804_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg805_1, (16384, ), (1, ))
    assert_size_stride(arg806_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg807_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg808_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg809_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg810_1, (16384, ), (1, ))
    assert_size_stride(arg811_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg812_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg813_1, (16384, ), (1, ))
    assert_size_stride(arg814_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg815_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg816_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg817_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg818_1, (16384, ), (1, ))
    assert_size_stride(arg819_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg820_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg821_1, (16384, ), (1, ))
    assert_size_stride(arg822_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg823_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg824_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg825_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg826_1, (16384, ), (1, ))
    assert_size_stride(arg827_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg828_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg829_1, (16384, ), (1, ))
    assert_size_stride(arg830_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg831_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg832_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg833_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg834_1, (16384, ), (1, ))
    assert_size_stride(arg835_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg836_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg837_1, (16384, ), (1, ))
    assert_size_stride(arg838_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg839_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg840_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg841_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg842_1, (16384, ), (1, ))
    assert_size_stride(arg843_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg844_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg845_1, (16384, ), (1, ))
    assert_size_stride(arg846_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg847_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg848_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg849_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg850_1, (16384, ), (1, ))
    assert_size_stride(arg851_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg852_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg853_1, (16384, ), (1, ))
    assert_size_stride(arg854_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg855_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg856_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg857_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg858_1, (16384, ), (1, ))
    assert_size_stride(arg859_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg860_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg861_1, (16384, ), (1, ))
    assert_size_stride(arg862_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg863_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg864_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg865_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg866_1, (16384, ), (1, ))
    assert_size_stride(arg867_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg868_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg869_1, (16384, ), (1, ))
    assert_size_stride(arg870_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg871_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg872_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg873_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg874_1, (16384, ), (1, ))
    assert_size_stride(arg875_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg876_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg877_1, (16384, ), (1, ))
    assert_size_stride(arg878_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg879_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg880_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg881_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg882_1, (16384, ), (1, ))
    assert_size_stride(arg883_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg884_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg885_1, (16384, ), (1, ))
    assert_size_stride(arg886_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg887_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg888_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg889_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg890_1, (16384, ), (1, ))
    assert_size_stride(arg891_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg892_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg893_1, (16384, ), (1, ))
    assert_size_stride(arg894_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg895_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg896_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg897_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg898_1, (16384, ), (1, ))
    assert_size_stride(arg899_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg900_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg901_1, (16384, ), (1, ))
    assert_size_stride(arg902_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg903_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg904_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg905_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg906_1, (16384, ), (1, ))
    assert_size_stride(arg907_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg908_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg909_1, (16384, ), (1, ))
    assert_size_stride(arg910_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg911_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg912_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg913_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg914_1, (16384, ), (1, ))
    assert_size_stride(arg915_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg916_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg917_1, (16384, ), (1, ))
    assert_size_stride(arg918_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg919_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg920_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg921_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg922_1, (16384, ), (1, ))
    assert_size_stride(arg923_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg924_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg925_1, (16384, ), (1, ))
    assert_size_stride(arg926_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg927_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg928_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg929_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg930_1, (16384, ), (1, ))
    assert_size_stride(arg931_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg932_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg933_1, (16384, ), (1, ))
    assert_size_stride(arg934_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg935_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg936_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg937_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg938_1, (16384, ), (1, ))
    assert_size_stride(arg939_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg940_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg941_1, (16384, ), (1, ))
    assert_size_stride(arg942_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg943_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg944_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg945_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg946_1, (16384, ), (1, ))
    assert_size_stride(arg947_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg948_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg949_1, (16384, ), (1, ))
    assert_size_stride(arg950_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg951_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg952_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg953_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg954_1, (16384, ), (1, ))
    assert_size_stride(arg955_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg956_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg957_1, (16384, ), (1, ))
    assert_size_stride(arg958_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg959_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg960_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg961_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg962_1, (16384, ), (1, ))
    assert_size_stride(arg963_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg964_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg965_1, (16384, ), (1, ))
    assert_size_stride(arg966_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg967_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg968_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg969_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg970_1, (16384, ), (1, ))
    assert_size_stride(arg971_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg972_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg973_1, (16384, ), (1, ))
    assert_size_stride(arg974_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg975_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg976_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg977_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg978_1, (16384, ), (1, ))
    assert_size_stride(arg979_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg980_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg981_1, (16384, ), (1, ))
    assert_size_stride(arg982_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg983_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg984_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg985_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg986_1, (16384, ), (1, ))
    assert_size_stride(arg987_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg988_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg989_1, (16384, ), (1, ))
    assert_size_stride(arg990_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg991_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg992_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg993_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg994_1, (16384, ), (1, ))
    assert_size_stride(arg995_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg996_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg997_1, (16384, ), (1, ))
    assert_size_stride(arg998_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg999_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg1000_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg1001_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg1002_1, (16384, ), (1, ))
    assert_size_stride(arg1003_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg1004_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg1005_1, (16384, ), (1, ))
    assert_size_stride(arg1006_1, (1280, 16384), (16384, 1))
    assert_size_stride(arg1007_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg1008_1, (16, 1, 1536, 128), (196608, 196608, 128, 1))
    assert_size_stride(arg1009_1, (16384, 1024), (1024, 1))
    assert_size_stride(arg1010_1, (16384, ), (1, ))
    assert_size_stride(arg1011_1, (6656, 16384), (16384, 1))
    assert_size_stride(arg1012_1, (16384, 3328), (3328, 1))
    assert_size_stride(arg1013_1, (16384, ), (1, ))
    assert_size_stride(arg1014_1, (128256, 16384), (16384, 1))
    with torch.cuda._DeviceGuard(0):
        torch.cuda.set_device(0)
        buf1 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x, float_1, mul, mean, add, rsqrt, mul_1, output, output_1], Original ATen: [aten.embedding, aten._to_copy, aten.mul, aten.mean, aten.add, aten.rsqrt]
        stream0 = get_raw_stream(0)
        triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_0.run(arg4_1, arg3_1, arg5_1, buf1, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg5_1
        buf2 = empty_strided_cuda((16384, 1280), (1280, 1), torch.float16)
        # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg6_1, (16384, 1280), (1, 16384), 0), out=buf2)
        del arg6_1
        # Topologically Sorted Source Nodes: [setitem, setitem_1], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2, arg0_1, arg7_1, arg8_1, 2097152, grid=grid(2097152), stream=stream0)
        buf4 = empty_strided_cuda((16, 8, 1024, 128), (1048576, 131072, 128, 1), torch.float32)
        # Topologically Sorted Source Nodes: [y], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2, arg2_1, arg0_1, buf4, 16777216, grid=grid(16777216), stream=stream0)
        buf5 = empty_strided_cuda((16, 8, 128, 1536), (1572864, 196608, 1536, 1), torch.float32)
        # Topologically Sorted Source Nodes: [y], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg7_1, buf5, 25165824, grid=grid(25165824), stream=stream0)
        del arg7_1
        buf6 = empty_strided_cuda((128, 1024, 1536), (1572864, 1536, 1), torch.float32)
        # Topologically Sorted Source Nodes: [y], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf4, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf5, (128, 128, 1536), (196608, 1536, 1), 0), out=buf6)
        buf11 = reinterpret_tensor(buf6, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf6  # reuse
        # Topologically Sorted Source Nodes: [mask, y], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf11, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf12 = reinterpret_tensor(buf5, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf5  # reuse
        # Topologically Sorted Source Nodes: [y], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg8_1, buf12, 25165824, grid=grid(25165824), stream=stream0)
        del arg8_1
        buf13 = reinterpret_tensor(buf4, (128, 1024, 128), (131072, 128, 1), 0); del buf4  # reuse
        # Topologically Sorted Source Nodes: [y], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf11, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf12, (128, 1536, 128), (196608, 128, 1), 0), out=buf13)
        buf14 = empty_strided_cuda((16, 1024, 8, 128), (1048576, 1024, 128, 1), torch.float16)
        # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf13, buf14, 16777216, grid=grid(16777216), stream=stream0)
        buf15 = reinterpret_tensor(buf1, (16384, 16384), (16384, 1), 0); del buf1  # reuse
        # Topologically Sorted Source Nodes: [y_2], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf14, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg9_1, (1024, 16384), (1, 1024), 0), out=buf15)
        del arg9_1
        # Topologically Sorted Source Nodes: [tensor], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf15, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_1], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf15, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf21 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x, x_2, float_4, mul_11, mean_1, add_4, rsqrt_1, mul_12, output_2, output_3], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_7.run(arg4_1, arg3_1, buf15, arg10_1, buf21, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg10_1
        buf22 = empty_strided_cuda((16384, 6656), (6656, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf21, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg11_1, (16384, 6656), (1, 16384), 0), out=buf22)
        del arg11_1
        buf23 = empty_strided_cuda((16, 1024, 3328), (3407872, 3328, 1), torch.float16)
        # Topologically Sorted Source Nodes: [silu, mul_14], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf22, buf23, 54525952, grid=grid(54525952), stream=stream0)
        buf24 = reinterpret_tensor(buf21, (16384, 16384), (16384, 1), 0); del buf21  # reuse
        # Topologically Sorted Source Nodes: [y_3], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf23, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg12_1, (3328, 16384), (1, 3328), 0), out=buf24)
        del arg12_1
        # Topologically Sorted Source Nodes: [tensor_1], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf24, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_4], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf24, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf30 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x, x_2, x_5, float_5, mul_15, mean_2, add_6, rsqrt_2, mul_16, output_4, output_5], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_9.run(arg4_1, arg3_1, buf15, buf24, arg13_1, buf30, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg13_1
        buf31 = buf2; del buf2  # reuse
        # Topologically Sorted Source Nodes: [linear_4], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf30, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg14_1, (16384, 1280), (1, 16384), 0), out=buf31)
        del arg14_1
        # Topologically Sorted Source Nodes: [setitem_2, setitem_3], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf31, arg0_1, arg15_1, arg16_1, 2097152, grid=grid(2097152), stream=stream0)
        buf33 = reinterpret_tensor(buf13, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf13  # reuse
        # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf31, arg2_1, arg0_1, buf33, 16777216, grid=grid(16777216), stream=stream0)
        buf34 = reinterpret_tensor(buf12, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf12  # reuse
        # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg15_1, buf34, 25165824, grid=grid(25165824), stream=stream0)
        del arg15_1
        buf35 = reinterpret_tensor(buf11, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf11  # reuse
        # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf33, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf34, (128, 128, 1536), (196608, 1536, 1), 0), out=buf35)
        buf40 = reinterpret_tensor(buf35, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf35  # reuse
        # Topologically Sorted Source Nodes: [mask, y_4], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf40, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf41 = reinterpret_tensor(buf34, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf34  # reuse
        # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg16_1, buf41, 25165824, grid=grid(25165824), stream=stream0)
        del arg16_1
        buf42 = reinterpret_tensor(buf33, (128, 1024, 128), (131072, 128, 1), 0); del buf33  # reuse
        # Topologically Sorted Source Nodes: [y_4], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf40, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf41, (128, 1536, 128), (196608, 128, 1), 0), out=buf42)
        buf43 = buf14; del buf14  # reuse
        # Topologically Sorted Source Nodes: [contiguous_1], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf42, buf43, 16777216, grid=grid(16777216), stream=stream0)
        buf44 = reinterpret_tensor(buf30, (16384, 16384), (16384, 1), 0); del buf30  # reuse
        # Topologically Sorted Source Nodes: [y_6], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf43, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg17_1, (1024, 16384), (1, 1024), 0), out=buf44)
        del arg17_1
        # Topologically Sorted Source Nodes: [tensor_2], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf44, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_6], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf44, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf49 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        buf51 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x, x_2, x_5, x_7, float_8, mul_26, mean_3, add_10, rsqrt_3, mul_27, output_6, output_7], Original ATen: [aten.embedding, aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_embedding_mean_mul_rsqrt_10.run(arg4_1, arg3_1, buf15, buf24, buf44, arg18_1, buf49, buf51, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg18_1
        del arg3_1
        del arg4_1
        buf52 = buf22; del buf22  # reuse
        # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf51, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg19_1, (16384, 6656), (1, 16384), 0), out=buf52)
        del arg19_1
        buf53 = buf23; del buf23  # reuse
        # Topologically Sorted Source Nodes: [silu_1, mul_29], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf52, buf53, 54525952, grid=grid(54525952), stream=stream0)
        buf54 = reinterpret_tensor(buf51, (16384, 16384), (16384, 1), 0); del buf51  # reuse
        # Topologically Sorted Source Nodes: [y_7], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf53, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg20_1, (3328, 16384), (1, 3328), 0), out=buf54)
        del arg20_1
        # Topologically Sorted Source Nodes: [tensor_3], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf54, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_9], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf54, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf60 = reinterpret_tensor(buf44, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf44  # reuse
        # Topologically Sorted Source Nodes: [x_10, float_9, mul_30, mean_4, add_12, rsqrt_4, mul_31, output_8, output_9], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf49, buf54, arg21_1, buf60, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg21_1
        buf61 = buf31; del buf31  # reuse
        # Topologically Sorted Source Nodes: [linear_8], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf60, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg22_1, (16384, 1280), (1, 16384), 0), out=buf61)
        del arg22_1
        # Topologically Sorted Source Nodes: [setitem_4, setitem_5], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf61, arg0_1, arg23_1, arg24_1, 2097152, grid=grid(2097152), stream=stream0)
        buf63 = reinterpret_tensor(buf42, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf42  # reuse
        # Topologically Sorted Source Nodes: [y_8], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf61, arg2_1, arg0_1, buf63, 16777216, grid=grid(16777216), stream=stream0)
        buf64 = reinterpret_tensor(buf41, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf41  # reuse
        # Topologically Sorted Source Nodes: [y_8], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg23_1, buf64, 25165824, grid=grid(25165824), stream=stream0)
        del arg23_1
        buf65 = reinterpret_tensor(buf40, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf40  # reuse
        # Topologically Sorted Source Nodes: [y_8], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf63, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf64, (128, 128, 1536), (196608, 1536, 1), 0), out=buf65)
        buf70 = reinterpret_tensor(buf65, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf65  # reuse
        # Topologically Sorted Source Nodes: [mask, y_8], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf70, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf71 = reinterpret_tensor(buf64, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf64  # reuse
        # Topologically Sorted Source Nodes: [y_8], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg24_1, buf71, 25165824, grid=grid(25165824), stream=stream0)
        del arg24_1
        buf72 = reinterpret_tensor(buf63, (128, 1024, 128), (131072, 128, 1), 0); del buf63  # reuse
        # Topologically Sorted Source Nodes: [y_8], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf70, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf71, (128, 1536, 128), (196608, 128, 1), 0), out=buf72)
        buf73 = buf43; del buf43  # reuse
        # Topologically Sorted Source Nodes: [contiguous_2], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf72, buf73, 16777216, grid=grid(16777216), stream=stream0)
        buf74 = reinterpret_tensor(buf60, (16384, 16384), (16384, 1), 0); del buf60  # reuse
        # Topologically Sorted Source Nodes: [y_10], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf73, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg25_1, (1024, 16384), (1, 1024), 0), out=buf74)
        del arg25_1
        # Topologically Sorted Source Nodes: [tensor_4], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf74, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_11], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf74, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf80 = reinterpret_tensor(buf24, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf24  # reuse
        # Topologically Sorted Source Nodes: [x_10, x_12, float_12, mul_41, mean_5, add_16, rsqrt_5, mul_42, output_10, output_11], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf49, buf54, buf74, arg26_1, buf80, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg26_1
        buf81 = buf52; del buf52  # reuse
        # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf80, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg27_1, (16384, 6656), (1, 16384), 0), out=buf81)
        del arg27_1
        buf82 = buf53; del buf53  # reuse
        # Topologically Sorted Source Nodes: [silu_2, mul_44], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf81, buf82, 54525952, grid=grid(54525952), stream=stream0)
        buf83 = reinterpret_tensor(buf80, (16384, 16384), (16384, 1), 0); del buf80  # reuse
        # Topologically Sorted Source Nodes: [y_11], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf82, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg28_1, (3328, 16384), (1, 3328), 0), out=buf83)
        del arg28_1
        # Topologically Sorted Source Nodes: [tensor_5], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf83, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_14], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf83, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf89 = reinterpret_tensor(buf15, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf15  # reuse
        # Topologically Sorted Source Nodes: [x_10, x_12, x_15, float_13, mul_45, mean_6, add_18, rsqrt_6, mul_46, output_12, output_13], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf49, buf54, buf74, buf83, arg29_1, buf89, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg29_1
        buf90 = buf61; del buf61  # reuse
        # Topologically Sorted Source Nodes: [linear_12], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf89, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg30_1, (16384, 1280), (1, 16384), 0), out=buf90)
        del arg30_1
        # Topologically Sorted Source Nodes: [setitem_6, setitem_7], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf90, arg0_1, arg31_1, arg32_1, 2097152, grid=grid(2097152), stream=stream0)
        buf92 = reinterpret_tensor(buf72, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf72  # reuse
        # Topologically Sorted Source Nodes: [y_12], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf90, arg2_1, arg0_1, buf92, 16777216, grid=grid(16777216), stream=stream0)
        buf93 = reinterpret_tensor(buf71, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf71  # reuse
        # Topologically Sorted Source Nodes: [y_12], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg31_1, buf93, 25165824, grid=grid(25165824), stream=stream0)
        del arg31_1
        buf94 = reinterpret_tensor(buf70, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf70  # reuse
        # Topologically Sorted Source Nodes: [y_12], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf92, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf93, (128, 128, 1536), (196608, 1536, 1), 0), out=buf94)
        buf99 = reinterpret_tensor(buf94, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf94  # reuse
        # Topologically Sorted Source Nodes: [mask, y_12], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf99, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf100 = reinterpret_tensor(buf93, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf93  # reuse
        # Topologically Sorted Source Nodes: [y_12], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg32_1, buf100, 25165824, grid=grid(25165824), stream=stream0)
        del arg32_1
        buf101 = reinterpret_tensor(buf92, (128, 1024, 128), (131072, 128, 1), 0); del buf92  # reuse
        # Topologically Sorted Source Nodes: [y_12], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf99, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf100, (128, 1536, 128), (196608, 128, 1), 0), out=buf101)
        buf102 = buf73; del buf73  # reuse
        # Topologically Sorted Source Nodes: [contiguous_3], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf101, buf102, 16777216, grid=grid(16777216), stream=stream0)
        buf103 = reinterpret_tensor(buf89, (16384, 16384), (16384, 1), 0); del buf89  # reuse
        # Topologically Sorted Source Nodes: [y_14], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf102, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg33_1, (1024, 16384), (1, 1024), 0), out=buf103)
        del arg33_1
        # Topologically Sorted Source Nodes: [tensor_6], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf103, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_16], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf103, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf108 = buf49; del buf49  # reuse
        buf110 = empty_strided_cuda((16, 1024, 16384), (16777216, 16384, 1), torch.float16)
        # Topologically Sorted Source Nodes: [x_10, x_12, x_15, x_17, float_16, mul_56, mean_7, add_22, rsqrt_7, mul_57, output_14, output_15], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf108, buf54, buf74, buf83, buf103, arg34_1, buf110, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg34_1
        buf111 = buf81; del buf81  # reuse
        # Topologically Sorted Source Nodes: [x_18], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf110, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg35_1, (16384, 6656), (1, 16384), 0), out=buf111)
        del arg35_1
        buf112 = buf82; del buf82  # reuse
        # Topologically Sorted Source Nodes: [silu_3, mul_59], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf111, buf112, 54525952, grid=grid(54525952), stream=stream0)
        buf113 = reinterpret_tensor(buf110, (16384, 16384), (16384, 1), 0); del buf110  # reuse
        # Topologically Sorted Source Nodes: [y_15], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf112, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg36_1, (3328, 16384), (1, 3328), 0), out=buf113)
        del arg36_1
        # Topologically Sorted Source Nodes: [tensor_7], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf113, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_19], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf113, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf119 = reinterpret_tensor(buf103, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf103  # reuse
        # Topologically Sorted Source Nodes: [x_20, float_17, mul_60, mean_8, add_24, rsqrt_8, mul_61, output_16, output_17], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf108, buf113, arg37_1, buf119, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg37_1
        buf120 = buf90; del buf90  # reuse
        # Topologically Sorted Source Nodes: [linear_16], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf119, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg38_1, (16384, 1280), (1, 16384), 0), out=buf120)
        del arg38_1
        # Topologically Sorted Source Nodes: [setitem_8, setitem_9], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf120, arg0_1, arg39_1, arg40_1, 2097152, grid=grid(2097152), stream=stream0)
        buf122 = reinterpret_tensor(buf101, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf101  # reuse
        # Topologically Sorted Source Nodes: [y_16], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf120, arg2_1, arg0_1, buf122, 16777216, grid=grid(16777216), stream=stream0)
        buf123 = reinterpret_tensor(buf100, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf100  # reuse
        # Topologically Sorted Source Nodes: [y_16], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg39_1, buf123, 25165824, grid=grid(25165824), stream=stream0)
        del arg39_1
        buf124 = reinterpret_tensor(buf99, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf99  # reuse
        # Topologically Sorted Source Nodes: [y_16], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf122, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf123, (128, 128, 1536), (196608, 1536, 1), 0), out=buf124)
        buf129 = reinterpret_tensor(buf124, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf124  # reuse
        # Topologically Sorted Source Nodes: [mask, y_16], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf129, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf130 = reinterpret_tensor(buf123, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf123  # reuse
        # Topologically Sorted Source Nodes: [y_16], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg40_1, buf130, 25165824, grid=grid(25165824), stream=stream0)
        del arg40_1
        buf131 = reinterpret_tensor(buf122, (128, 1024, 128), (131072, 128, 1), 0); del buf122  # reuse
        # Topologically Sorted Source Nodes: [y_16], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf129, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf130, (128, 1536, 128), (196608, 128, 1), 0), out=buf131)
        buf132 = buf102; del buf102  # reuse
        # Topologically Sorted Source Nodes: [contiguous_4], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf131, buf132, 16777216, grid=grid(16777216), stream=stream0)
        buf133 = reinterpret_tensor(buf119, (16384, 16384), (16384, 1), 0); del buf119  # reuse
        # Topologically Sorted Source Nodes: [y_18], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf132, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg41_1, (1024, 16384), (1, 1024), 0), out=buf133)
        del arg41_1
        # Topologically Sorted Source Nodes: [tensor_8], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf133, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_21], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf133, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf139 = reinterpret_tensor(buf83, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf83  # reuse
        # Topologically Sorted Source Nodes: [x_20, x_22, float_20, mul_71, mean_9, add_28, rsqrt_9, mul_72, output_18, output_19], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf108, buf113, buf133, arg42_1, buf139, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg42_1
        buf140 = buf111; del buf111  # reuse
        # Topologically Sorted Source Nodes: [x_23], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf139, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg43_1, (16384, 6656), (1, 16384), 0), out=buf140)
        del arg43_1
        buf141 = buf112; del buf112  # reuse
        # Topologically Sorted Source Nodes: [silu_4, mul_74], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf140, buf141, 54525952, grid=grid(54525952), stream=stream0)
        buf142 = reinterpret_tensor(buf139, (16384, 16384), (16384, 1), 0); del buf139  # reuse
        # Topologically Sorted Source Nodes: [y_19], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf141, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg44_1, (3328, 16384), (1, 3328), 0), out=buf142)
        del arg44_1
        # Topologically Sorted Source Nodes: [tensor_9], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf142, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_24], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf142, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf148 = reinterpret_tensor(buf74, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf74  # reuse
        # Topologically Sorted Source Nodes: [x_20, x_22, x_25, float_21, mul_75, mean_10, add_30, rsqrt_10, mul_76, output_20, output_21], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf108, buf113, buf133, buf142, arg45_1, buf148, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg45_1
        buf149 = buf120; del buf120  # reuse
        # Topologically Sorted Source Nodes: [linear_20], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf148, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg46_1, (16384, 1280), (1, 16384), 0), out=buf149)
        del arg46_1
        # Topologically Sorted Source Nodes: [setitem_10, setitem_11], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf149, arg0_1, arg47_1, arg48_1, 2097152, grid=grid(2097152), stream=stream0)
        buf151 = reinterpret_tensor(buf131, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf131  # reuse
        # Topologically Sorted Source Nodes: [y_20], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf149, arg2_1, arg0_1, buf151, 16777216, grid=grid(16777216), stream=stream0)
        buf152 = reinterpret_tensor(buf130, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf130  # reuse
        # Topologically Sorted Source Nodes: [y_20], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg47_1, buf152, 25165824, grid=grid(25165824), stream=stream0)
        del arg47_1
        buf153 = reinterpret_tensor(buf129, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf129  # reuse
        # Topologically Sorted Source Nodes: [y_20], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf151, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf152, (128, 128, 1536), (196608, 1536, 1), 0), out=buf153)
        buf158 = reinterpret_tensor(buf153, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf153  # reuse
        # Topologically Sorted Source Nodes: [mask, y_20], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf158, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf159 = reinterpret_tensor(buf152, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf152  # reuse
        # Topologically Sorted Source Nodes: [y_20], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg48_1, buf159, 25165824, grid=grid(25165824), stream=stream0)
        del arg48_1
        buf160 = reinterpret_tensor(buf151, (128, 1024, 128), (131072, 128, 1), 0); del buf151  # reuse
        # Topologically Sorted Source Nodes: [y_20], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf158, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf159, (128, 1536, 128), (196608, 128, 1), 0), out=buf160)
        buf161 = buf132; del buf132  # reuse
        # Topologically Sorted Source Nodes: [contiguous_5], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf160, buf161, 16777216, grid=grid(16777216), stream=stream0)
        buf162 = reinterpret_tensor(buf148, (16384, 16384), (16384, 1), 0); del buf148  # reuse
        # Topologically Sorted Source Nodes: [y_22], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf161, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg49_1, (1024, 16384), (1, 1024), 0), out=buf162)
        del arg49_1
        # Topologically Sorted Source Nodes: [tensor_10], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf162, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_26], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf162, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf167 = buf108; del buf108  # reuse
        buf169 = reinterpret_tensor(buf54, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf54  # reuse
        # Topologically Sorted Source Nodes: [x_20, x_22, x_25, x_27, float_24, mul_86, mean_11, add_34, rsqrt_11, mul_87, output_22, output_23], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf167, buf113, buf133, buf142, buf162, arg50_1, buf169, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg50_1
        buf170 = buf140; del buf140  # reuse
        # Topologically Sorted Source Nodes: [x_28], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf169, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg51_1, (16384, 6656), (1, 16384), 0), out=buf170)
        del arg51_1
        buf171 = buf141; del buf141  # reuse
        # Topologically Sorted Source Nodes: [silu_5, mul_89], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf170, buf171, 54525952, grid=grid(54525952), stream=stream0)
        buf172 = reinterpret_tensor(buf169, (16384, 16384), (16384, 1), 0); del buf169  # reuse
        # Topologically Sorted Source Nodes: [y_23], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf171, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg52_1, (3328, 16384), (1, 3328), 0), out=buf172)
        del arg52_1
        # Topologically Sorted Source Nodes: [tensor_11], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf172, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_29], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf172, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf178 = reinterpret_tensor(buf162, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf162  # reuse
        # Topologically Sorted Source Nodes: [x_30, float_25, mul_90, mean_12, add_36, rsqrt_12, mul_91, output_24, output_25], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf167, buf172, arg53_1, buf178, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg53_1
        buf179 = buf149; del buf149  # reuse
        # Topologically Sorted Source Nodes: [linear_24], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf178, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg54_1, (16384, 1280), (1, 16384), 0), out=buf179)
        del arg54_1
        # Topologically Sorted Source Nodes: [setitem_12, setitem_13], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf179, arg0_1, arg55_1, arg56_1, 2097152, grid=grid(2097152), stream=stream0)
        buf181 = reinterpret_tensor(buf160, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf160  # reuse
        # Topologically Sorted Source Nodes: [y_24], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf179, arg2_1, arg0_1, buf181, 16777216, grid=grid(16777216), stream=stream0)
        buf182 = reinterpret_tensor(buf159, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf159  # reuse
        # Topologically Sorted Source Nodes: [y_24], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg55_1, buf182, 25165824, grid=grid(25165824), stream=stream0)
        del arg55_1
        buf183 = reinterpret_tensor(buf158, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf158  # reuse
        # Topologically Sorted Source Nodes: [y_24], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf181, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf182, (128, 128, 1536), (196608, 1536, 1), 0), out=buf183)
        buf188 = reinterpret_tensor(buf183, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf183  # reuse
        # Topologically Sorted Source Nodes: [mask, y_24], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf188, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf189 = reinterpret_tensor(buf182, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf182  # reuse
        # Topologically Sorted Source Nodes: [y_24], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg56_1, buf189, 25165824, grid=grid(25165824), stream=stream0)
        del arg56_1
        buf190 = reinterpret_tensor(buf181, (128, 1024, 128), (131072, 128, 1), 0); del buf181  # reuse
        # Topologically Sorted Source Nodes: [y_24], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf188, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf189, (128, 1536, 128), (196608, 128, 1), 0), out=buf190)
        buf191 = buf161; del buf161  # reuse
        # Topologically Sorted Source Nodes: [contiguous_6], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf190, buf191, 16777216, grid=grid(16777216), stream=stream0)
        buf192 = reinterpret_tensor(buf178, (16384, 16384), (16384, 1), 0); del buf178  # reuse
        # Topologically Sorted Source Nodes: [y_26], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf191, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg57_1, (1024, 16384), (1, 1024), 0), out=buf192)
        del arg57_1
        # Topologically Sorted Source Nodes: [tensor_12], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf192, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_31], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf192, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf198 = reinterpret_tensor(buf142, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf142  # reuse
        # Topologically Sorted Source Nodes: [x_30, x_32, float_28, mul_101, mean_13, add_40, rsqrt_13, mul_102, output_26, output_27], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf167, buf172, buf192, arg58_1, buf198, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg58_1
        buf199 = buf170; del buf170  # reuse
        # Topologically Sorted Source Nodes: [x_33], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf198, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg59_1, (16384, 6656), (1, 16384), 0), out=buf199)
        del arg59_1
        buf200 = buf171; del buf171  # reuse
        # Topologically Sorted Source Nodes: [silu_6, mul_104], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf199, buf200, 54525952, grid=grid(54525952), stream=stream0)
        buf201 = reinterpret_tensor(buf198, (16384, 16384), (16384, 1), 0); del buf198  # reuse
        # Topologically Sorted Source Nodes: [y_27], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf200, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg60_1, (3328, 16384), (1, 3328), 0), out=buf201)
        del arg60_1
        # Topologically Sorted Source Nodes: [tensor_13], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf201, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_34], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf201, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf207 = reinterpret_tensor(buf133, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf133  # reuse
        # Topologically Sorted Source Nodes: [x_30, x_32, x_35, float_29, mul_105, mean_14, add_42, rsqrt_14, mul_106, output_28, output_29], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf167, buf172, buf192, buf201, arg61_1, buf207, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg61_1
        buf208 = buf179; del buf179  # reuse
        # Topologically Sorted Source Nodes: [linear_28], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf207, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg62_1, (16384, 1280), (1, 16384), 0), out=buf208)
        del arg62_1
        # Topologically Sorted Source Nodes: [setitem_14, setitem_15], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf208, arg0_1, arg63_1, arg64_1, 2097152, grid=grid(2097152), stream=stream0)
        buf210 = reinterpret_tensor(buf190, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf190  # reuse
        # Topologically Sorted Source Nodes: [y_28], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf208, arg2_1, arg0_1, buf210, 16777216, grid=grid(16777216), stream=stream0)
        buf211 = reinterpret_tensor(buf189, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf189  # reuse
        # Topologically Sorted Source Nodes: [y_28], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg63_1, buf211, 25165824, grid=grid(25165824), stream=stream0)
        del arg63_1
        buf212 = reinterpret_tensor(buf188, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf188  # reuse
        # Topologically Sorted Source Nodes: [y_28], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf210, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf211, (128, 128, 1536), (196608, 1536, 1), 0), out=buf212)
        buf217 = reinterpret_tensor(buf212, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf212  # reuse
        # Topologically Sorted Source Nodes: [mask, y_28], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf217, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf218 = reinterpret_tensor(buf211, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf211  # reuse
        # Topologically Sorted Source Nodes: [y_28], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg64_1, buf218, 25165824, grid=grid(25165824), stream=stream0)
        del arg64_1
        buf219 = reinterpret_tensor(buf210, (128, 1024, 128), (131072, 128, 1), 0); del buf210  # reuse
        # Topologically Sorted Source Nodes: [y_28], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf217, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf218, (128, 1536, 128), (196608, 128, 1), 0), out=buf219)
        buf220 = buf191; del buf191  # reuse
        # Topologically Sorted Source Nodes: [contiguous_7], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf219, buf220, 16777216, grid=grid(16777216), stream=stream0)
        buf221 = reinterpret_tensor(buf207, (16384, 16384), (16384, 1), 0); del buf207  # reuse
        # Topologically Sorted Source Nodes: [y_30], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf220, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg65_1, (1024, 16384), (1, 1024), 0), out=buf221)
        del arg65_1
        # Topologically Sorted Source Nodes: [tensor_14], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf221, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_36], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf221, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf226 = buf167; del buf167  # reuse
        buf228 = reinterpret_tensor(buf113, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf113  # reuse
        # Topologically Sorted Source Nodes: [x_30, x_32, x_35, x_37, float_32, mul_116, mean_15, add_46, rsqrt_15, mul_117, output_30, output_31], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf226, buf172, buf192, buf201, buf221, arg66_1, buf228, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg66_1
        buf229 = buf199; del buf199  # reuse
        # Topologically Sorted Source Nodes: [x_38], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf228, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg67_1, (16384, 6656), (1, 16384), 0), out=buf229)
        del arg67_1
        buf230 = buf200; del buf200  # reuse
        # Topologically Sorted Source Nodes: [silu_7, mul_119], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf229, buf230, 54525952, grid=grid(54525952), stream=stream0)
        buf231 = reinterpret_tensor(buf228, (16384, 16384), (16384, 1), 0); del buf228  # reuse
        # Topologically Sorted Source Nodes: [y_31], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf230, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg68_1, (3328, 16384), (1, 3328), 0), out=buf231)
        del arg68_1
        # Topologically Sorted Source Nodes: [tensor_15], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf231, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_39], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf231, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf237 = reinterpret_tensor(buf221, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf221  # reuse
        # Topologically Sorted Source Nodes: [x_40, float_33, mul_120, mean_16, add_48, rsqrt_16, mul_121, output_32, output_33], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf226, buf231, arg69_1, buf237, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg69_1
        buf238 = buf208; del buf208  # reuse
        # Topologically Sorted Source Nodes: [linear_32], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf237, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg70_1, (16384, 1280), (1, 16384), 0), out=buf238)
        del arg70_1
        # Topologically Sorted Source Nodes: [setitem_16, setitem_17], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf238, arg0_1, arg71_1, arg72_1, 2097152, grid=grid(2097152), stream=stream0)
        buf240 = reinterpret_tensor(buf219, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf219  # reuse
        # Topologically Sorted Source Nodes: [y_32], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf238, arg2_1, arg0_1, buf240, 16777216, grid=grid(16777216), stream=stream0)
        buf241 = reinterpret_tensor(buf218, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf218  # reuse
        # Topologically Sorted Source Nodes: [y_32], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg71_1, buf241, 25165824, grid=grid(25165824), stream=stream0)
        del arg71_1
        buf242 = reinterpret_tensor(buf217, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf217  # reuse
        # Topologically Sorted Source Nodes: [y_32], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf240, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf241, (128, 128, 1536), (196608, 1536, 1), 0), out=buf242)
        buf247 = reinterpret_tensor(buf242, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf242  # reuse
        # Topologically Sorted Source Nodes: [mask, y_32], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf247, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf248 = reinterpret_tensor(buf241, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf241  # reuse
        # Topologically Sorted Source Nodes: [y_32], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg72_1, buf248, 25165824, grid=grid(25165824), stream=stream0)
        del arg72_1
        buf249 = reinterpret_tensor(buf240, (128, 1024, 128), (131072, 128, 1), 0); del buf240  # reuse
        # Topologically Sorted Source Nodes: [y_32], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf247, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf248, (128, 1536, 128), (196608, 128, 1), 0), out=buf249)
        buf250 = buf220; del buf220  # reuse
        # Topologically Sorted Source Nodes: [contiguous_8], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf249, buf250, 16777216, grid=grid(16777216), stream=stream0)
        buf251 = reinterpret_tensor(buf237, (16384, 16384), (16384, 1), 0); del buf237  # reuse
        # Topologically Sorted Source Nodes: [y_34], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf250, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg73_1, (1024, 16384), (1, 1024), 0), out=buf251)
        del arg73_1
        # Topologically Sorted Source Nodes: [tensor_16], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf251, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_41], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf251, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf257 = reinterpret_tensor(buf201, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf201  # reuse
        # Topologically Sorted Source Nodes: [x_40, x_42, float_36, mul_131, mean_17, add_52, rsqrt_17, mul_132, output_34, output_35], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf226, buf231, buf251, arg74_1, buf257, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg74_1
        buf258 = buf229; del buf229  # reuse
        # Topologically Sorted Source Nodes: [x_43], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf257, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg75_1, (16384, 6656), (1, 16384), 0), out=buf258)
        del arg75_1
        buf259 = buf230; del buf230  # reuse
        # Topologically Sorted Source Nodes: [silu_8, mul_134], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf258, buf259, 54525952, grid=grid(54525952), stream=stream0)
        buf260 = reinterpret_tensor(buf257, (16384, 16384), (16384, 1), 0); del buf257  # reuse
        # Topologically Sorted Source Nodes: [y_35], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf259, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg76_1, (3328, 16384), (1, 3328), 0), out=buf260)
        del arg76_1
        # Topologically Sorted Source Nodes: [tensor_17], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf260, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_44], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf260, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf266 = reinterpret_tensor(buf192, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf192  # reuse
        # Topologically Sorted Source Nodes: [x_40, x_42, x_45, float_37, mul_135, mean_18, add_54, rsqrt_18, mul_136, output_36, output_37], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf226, buf231, buf251, buf260, arg77_1, buf266, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg77_1
        buf267 = buf238; del buf238  # reuse
        # Topologically Sorted Source Nodes: [linear_36], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf266, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg78_1, (16384, 1280), (1, 16384), 0), out=buf267)
        del arg78_1
        # Topologically Sorted Source Nodes: [setitem_18, setitem_19], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf267, arg0_1, arg79_1, arg80_1, 2097152, grid=grid(2097152), stream=stream0)
        buf269 = reinterpret_tensor(buf249, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf249  # reuse
        # Topologically Sorted Source Nodes: [y_36], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf267, arg2_1, arg0_1, buf269, 16777216, grid=grid(16777216), stream=stream0)
        buf270 = reinterpret_tensor(buf248, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf248  # reuse
        # Topologically Sorted Source Nodes: [y_36], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg79_1, buf270, 25165824, grid=grid(25165824), stream=stream0)
        del arg79_1
        buf271 = reinterpret_tensor(buf247, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf247  # reuse
        # Topologically Sorted Source Nodes: [y_36], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf269, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf270, (128, 128, 1536), (196608, 1536, 1), 0), out=buf271)
        buf276 = reinterpret_tensor(buf271, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf271  # reuse
        # Topologically Sorted Source Nodes: [mask, y_36], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf276, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf277 = reinterpret_tensor(buf270, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf270  # reuse
        # Topologically Sorted Source Nodes: [y_36], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg80_1, buf277, 25165824, grid=grid(25165824), stream=stream0)
        del arg80_1
        buf278 = reinterpret_tensor(buf269, (128, 1024, 128), (131072, 128, 1), 0); del buf269  # reuse
        # Topologically Sorted Source Nodes: [y_36], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf276, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf277, (128, 1536, 128), (196608, 128, 1), 0), out=buf278)
        buf279 = buf250; del buf250  # reuse
        # Topologically Sorted Source Nodes: [contiguous_9], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf278, buf279, 16777216, grid=grid(16777216), stream=stream0)
        buf280 = reinterpret_tensor(buf266, (16384, 16384), (16384, 1), 0); del buf266  # reuse
        # Topologically Sorted Source Nodes: [y_38], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf279, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg81_1, (1024, 16384), (1, 1024), 0), out=buf280)
        del arg81_1
        # Topologically Sorted Source Nodes: [tensor_18], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf280, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_46], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf280, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf285 = buf226; del buf226  # reuse
        buf287 = reinterpret_tensor(buf172, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf172  # reuse
        # Topologically Sorted Source Nodes: [x_40, x_42, x_45, x_47, float_40, mul_146, mean_19, add_58, rsqrt_19, mul_147, output_38, output_39], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf285, buf231, buf251, buf260, buf280, arg82_1, buf287, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg82_1
        buf288 = buf258; del buf258  # reuse
        # Topologically Sorted Source Nodes: [x_48], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf287, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg83_1, (16384, 6656), (1, 16384), 0), out=buf288)
        del arg83_1
        buf289 = buf259; del buf259  # reuse
        # Topologically Sorted Source Nodes: [silu_9, mul_149], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf288, buf289, 54525952, grid=grid(54525952), stream=stream0)
        buf290 = reinterpret_tensor(buf287, (16384, 16384), (16384, 1), 0); del buf287  # reuse
        # Topologically Sorted Source Nodes: [y_39], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf289, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg84_1, (3328, 16384), (1, 3328), 0), out=buf290)
        del arg84_1
        # Topologically Sorted Source Nodes: [tensor_19], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf290, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_49], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf290, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf296 = reinterpret_tensor(buf280, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf280  # reuse
        # Topologically Sorted Source Nodes: [x_50, float_41, mul_150, mean_20, add_60, rsqrt_20, mul_151, output_40, output_41], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf285, buf290, arg85_1, buf296, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg85_1
        buf297 = buf267; del buf267  # reuse
        # Topologically Sorted Source Nodes: [linear_40], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf296, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg86_1, (16384, 1280), (1, 16384), 0), out=buf297)
        del arg86_1
        # Topologically Sorted Source Nodes: [setitem_20, setitem_21], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf297, arg0_1, arg87_1, arg88_1, 2097152, grid=grid(2097152), stream=stream0)
        buf299 = reinterpret_tensor(buf278, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf278  # reuse
        # Topologically Sorted Source Nodes: [y_40], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf297, arg2_1, arg0_1, buf299, 16777216, grid=grid(16777216), stream=stream0)
        buf300 = reinterpret_tensor(buf277, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf277  # reuse
        # Topologically Sorted Source Nodes: [y_40], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg87_1, buf300, 25165824, grid=grid(25165824), stream=stream0)
        del arg87_1
        buf301 = reinterpret_tensor(buf276, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf276  # reuse
        # Topologically Sorted Source Nodes: [y_40], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf299, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf300, (128, 128, 1536), (196608, 1536, 1), 0), out=buf301)
        buf306 = reinterpret_tensor(buf301, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf301  # reuse
        # Topologically Sorted Source Nodes: [mask, y_40], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf306, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf307 = reinterpret_tensor(buf300, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf300  # reuse
        # Topologically Sorted Source Nodes: [y_40], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg88_1, buf307, 25165824, grid=grid(25165824), stream=stream0)
        del arg88_1
        buf308 = reinterpret_tensor(buf299, (128, 1024, 128), (131072, 128, 1), 0); del buf299  # reuse
        # Topologically Sorted Source Nodes: [y_40], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf306, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf307, (128, 1536, 128), (196608, 128, 1), 0), out=buf308)
        buf309 = buf279; del buf279  # reuse
        # Topologically Sorted Source Nodes: [contiguous_10], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf308, buf309, 16777216, grid=grid(16777216), stream=stream0)
        buf310 = reinterpret_tensor(buf296, (16384, 16384), (16384, 1), 0); del buf296  # reuse
        # Topologically Sorted Source Nodes: [y_42], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf309, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg89_1, (1024, 16384), (1, 1024), 0), out=buf310)
        del arg89_1
        # Topologically Sorted Source Nodes: [tensor_20], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf310, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_51], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf310, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf316 = reinterpret_tensor(buf260, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf260  # reuse
        # Topologically Sorted Source Nodes: [x_50, x_52, float_44, mul_161, mean_21, add_64, rsqrt_21, mul_162, output_42, output_43], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf285, buf290, buf310, arg90_1, buf316, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg90_1
        buf317 = buf288; del buf288  # reuse
        # Topologically Sorted Source Nodes: [x_53], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf316, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg91_1, (16384, 6656), (1, 16384), 0), out=buf317)
        del arg91_1
        buf318 = buf289; del buf289  # reuse
        # Topologically Sorted Source Nodes: [silu_10, mul_164], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf317, buf318, 54525952, grid=grid(54525952), stream=stream0)
        buf319 = reinterpret_tensor(buf316, (16384, 16384), (16384, 1), 0); del buf316  # reuse
        # Topologically Sorted Source Nodes: [y_43], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf318, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg92_1, (3328, 16384), (1, 3328), 0), out=buf319)
        del arg92_1
        # Topologically Sorted Source Nodes: [tensor_21], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf319, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_54], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf319, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf325 = reinterpret_tensor(buf251, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf251  # reuse
        # Topologically Sorted Source Nodes: [x_50, x_52, x_55, float_45, mul_165, mean_22, add_66, rsqrt_22, mul_166, output_44, output_45], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf285, buf290, buf310, buf319, arg93_1, buf325, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg93_1
        buf326 = buf297; del buf297  # reuse
        # Topologically Sorted Source Nodes: [linear_44], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf325, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg94_1, (16384, 1280), (1, 16384), 0), out=buf326)
        del arg94_1
        # Topologically Sorted Source Nodes: [setitem_22, setitem_23], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf326, arg0_1, arg95_1, arg96_1, 2097152, grid=grid(2097152), stream=stream0)
        buf328 = reinterpret_tensor(buf308, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf308  # reuse
        # Topologically Sorted Source Nodes: [y_44], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf326, arg2_1, arg0_1, buf328, 16777216, grid=grid(16777216), stream=stream0)
        buf329 = reinterpret_tensor(buf307, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf307  # reuse
        # Topologically Sorted Source Nodes: [y_44], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg95_1, buf329, 25165824, grid=grid(25165824), stream=stream0)
        del arg95_1
        buf330 = reinterpret_tensor(buf306, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf306  # reuse
        # Topologically Sorted Source Nodes: [y_44], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf328, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf329, (128, 128, 1536), (196608, 1536, 1), 0), out=buf330)
        buf335 = reinterpret_tensor(buf330, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf330  # reuse
        # Topologically Sorted Source Nodes: [mask, y_44], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf335, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf336 = reinterpret_tensor(buf329, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf329  # reuse
        # Topologically Sorted Source Nodes: [y_44], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg96_1, buf336, 25165824, grid=grid(25165824), stream=stream0)
        del arg96_1
        buf337 = reinterpret_tensor(buf328, (128, 1024, 128), (131072, 128, 1), 0); del buf328  # reuse
        # Topologically Sorted Source Nodes: [y_44], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf335, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf336, (128, 1536, 128), (196608, 128, 1), 0), out=buf337)
        buf338 = buf309; del buf309  # reuse
        # Topologically Sorted Source Nodes: [contiguous_11], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf337, buf338, 16777216, grid=grid(16777216), stream=stream0)
        buf339 = reinterpret_tensor(buf325, (16384, 16384), (16384, 1), 0); del buf325  # reuse
        # Topologically Sorted Source Nodes: [y_46], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf338, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg97_1, (1024, 16384), (1, 1024), 0), out=buf339)
        del arg97_1
        # Topologically Sorted Source Nodes: [tensor_22], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf339, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_56], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf339, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf344 = buf285; del buf285  # reuse
        buf346 = reinterpret_tensor(buf231, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf231  # reuse
        # Topologically Sorted Source Nodes: [x_50, x_52, x_55, x_57, float_48, mul_176, mean_23, add_70, rsqrt_23, mul_177, output_46, output_47], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf344, buf290, buf310, buf319, buf339, arg98_1, buf346, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg98_1
        buf347 = buf317; del buf317  # reuse
        # Topologically Sorted Source Nodes: [x_58], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf346, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg99_1, (16384, 6656), (1, 16384), 0), out=buf347)
        del arg99_1
        buf348 = buf318; del buf318  # reuse
        # Topologically Sorted Source Nodes: [silu_11, mul_179], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf347, buf348, 54525952, grid=grid(54525952), stream=stream0)
        buf349 = reinterpret_tensor(buf346, (16384, 16384), (16384, 1), 0); del buf346  # reuse
        # Topologically Sorted Source Nodes: [y_47], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf348, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg100_1, (3328, 16384), (1, 3328), 0), out=buf349)
        del arg100_1
        # Topologically Sorted Source Nodes: [tensor_23], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf349, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_59], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf349, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf355 = reinterpret_tensor(buf339, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf339  # reuse
        # Topologically Sorted Source Nodes: [x_60, float_49, mul_180, mean_24, add_72, rsqrt_24, mul_181, output_48, output_49], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf344, buf349, arg101_1, buf355, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg101_1
        buf356 = buf326; del buf326  # reuse
        # Topologically Sorted Source Nodes: [linear_48], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf355, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg102_1, (16384, 1280), (1, 16384), 0), out=buf356)
        del arg102_1
        # Topologically Sorted Source Nodes: [setitem_24, setitem_25], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf356, arg0_1, arg103_1, arg104_1, 2097152, grid=grid(2097152), stream=stream0)
        buf358 = reinterpret_tensor(buf337, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf337  # reuse
        # Topologically Sorted Source Nodes: [y_48], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf356, arg2_1, arg0_1, buf358, 16777216, grid=grid(16777216), stream=stream0)
        buf359 = reinterpret_tensor(buf336, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf336  # reuse
        # Topologically Sorted Source Nodes: [y_48], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg103_1, buf359, 25165824, grid=grid(25165824), stream=stream0)
        del arg103_1
        buf360 = reinterpret_tensor(buf335, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf335  # reuse
        # Topologically Sorted Source Nodes: [y_48], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf358, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf359, (128, 128, 1536), (196608, 1536, 1), 0), out=buf360)
        buf365 = reinterpret_tensor(buf360, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf360  # reuse
        # Topologically Sorted Source Nodes: [mask, y_48], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf365, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf366 = reinterpret_tensor(buf359, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf359  # reuse
        # Topologically Sorted Source Nodes: [y_48], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg104_1, buf366, 25165824, grid=grid(25165824), stream=stream0)
        del arg104_1
        buf367 = reinterpret_tensor(buf358, (128, 1024, 128), (131072, 128, 1), 0); del buf358  # reuse
        # Topologically Sorted Source Nodes: [y_48], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf365, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf366, (128, 1536, 128), (196608, 128, 1), 0), out=buf367)
        buf368 = buf338; del buf338  # reuse
        # Topologically Sorted Source Nodes: [contiguous_12], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf367, buf368, 16777216, grid=grid(16777216), stream=stream0)
        buf369 = reinterpret_tensor(buf355, (16384, 16384), (16384, 1), 0); del buf355  # reuse
        # Topologically Sorted Source Nodes: [y_50], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf368, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg105_1, (1024, 16384), (1, 1024), 0), out=buf369)
        del arg105_1
        # Topologically Sorted Source Nodes: [tensor_24], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf369, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_61], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf369, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf375 = reinterpret_tensor(buf319, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf319  # reuse
        # Topologically Sorted Source Nodes: [x_60, x_62, float_52, mul_191, mean_25, add_76, rsqrt_25, mul_192, output_50, output_51], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf344, buf349, buf369, arg106_1, buf375, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg106_1
        buf376 = buf347; del buf347  # reuse
        # Topologically Sorted Source Nodes: [x_63], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf375, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg107_1, (16384, 6656), (1, 16384), 0), out=buf376)
        del arg107_1
        buf377 = buf348; del buf348  # reuse
        # Topologically Sorted Source Nodes: [silu_12, mul_194], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf376, buf377, 54525952, grid=grid(54525952), stream=stream0)
        buf378 = reinterpret_tensor(buf375, (16384, 16384), (16384, 1), 0); del buf375  # reuse
        # Topologically Sorted Source Nodes: [y_51], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf377, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg108_1, (3328, 16384), (1, 3328), 0), out=buf378)
        del arg108_1
        # Topologically Sorted Source Nodes: [tensor_25], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf378, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_64], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf378, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf384 = reinterpret_tensor(buf310, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf310  # reuse
        # Topologically Sorted Source Nodes: [x_60, x_62, x_65, float_53, mul_195, mean_26, add_78, rsqrt_26, mul_196, output_52, output_53], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf344, buf349, buf369, buf378, arg109_1, buf384, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg109_1
        buf385 = buf356; del buf356  # reuse
        # Topologically Sorted Source Nodes: [linear_52], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf384, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg110_1, (16384, 1280), (1, 16384), 0), out=buf385)
        del arg110_1
        # Topologically Sorted Source Nodes: [setitem_26, setitem_27], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf385, arg0_1, arg111_1, arg112_1, 2097152, grid=grid(2097152), stream=stream0)
        buf387 = reinterpret_tensor(buf367, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf367  # reuse
        # Topologically Sorted Source Nodes: [y_52], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf385, arg2_1, arg0_1, buf387, 16777216, grid=grid(16777216), stream=stream0)
        buf388 = reinterpret_tensor(buf366, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf366  # reuse
        # Topologically Sorted Source Nodes: [y_52], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg111_1, buf388, 25165824, grid=grid(25165824), stream=stream0)
        del arg111_1
        buf389 = reinterpret_tensor(buf365, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf365  # reuse
        # Topologically Sorted Source Nodes: [y_52], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf387, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf388, (128, 128, 1536), (196608, 1536, 1), 0), out=buf389)
        buf394 = reinterpret_tensor(buf389, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf389  # reuse
        # Topologically Sorted Source Nodes: [mask, y_52], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf394, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf395 = reinterpret_tensor(buf388, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf388  # reuse
        # Topologically Sorted Source Nodes: [y_52], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg112_1, buf395, 25165824, grid=grid(25165824), stream=stream0)
        del arg112_1
        buf396 = reinterpret_tensor(buf387, (128, 1024, 128), (131072, 128, 1), 0); del buf387  # reuse
        # Topologically Sorted Source Nodes: [y_52], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf394, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf395, (128, 1536, 128), (196608, 128, 1), 0), out=buf396)
        buf397 = buf368; del buf368  # reuse
        # Topologically Sorted Source Nodes: [contiguous_13], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf396, buf397, 16777216, grid=grid(16777216), stream=stream0)
        buf398 = reinterpret_tensor(buf384, (16384, 16384), (16384, 1), 0); del buf384  # reuse
        # Topologically Sorted Source Nodes: [y_54], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf397, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg113_1, (1024, 16384), (1, 1024), 0), out=buf398)
        del arg113_1
        # Topologically Sorted Source Nodes: [tensor_26], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf398, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_66], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf398, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf403 = buf344; del buf344  # reuse
        buf405 = reinterpret_tensor(buf290, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf290  # reuse
        # Topologically Sorted Source Nodes: [x_60, x_62, x_65, x_67, float_56, mul_206, mean_27, add_82, rsqrt_27, mul_207, output_54, output_55], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf403, buf349, buf369, buf378, buf398, arg114_1, buf405, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg114_1
        buf406 = buf376; del buf376  # reuse
        # Topologically Sorted Source Nodes: [x_68], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf405, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg115_1, (16384, 6656), (1, 16384), 0), out=buf406)
        del arg115_1
        buf407 = buf377; del buf377  # reuse
        # Topologically Sorted Source Nodes: [silu_13, mul_209], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf406, buf407, 54525952, grid=grid(54525952), stream=stream0)
        buf408 = reinterpret_tensor(buf405, (16384, 16384), (16384, 1), 0); del buf405  # reuse
        # Topologically Sorted Source Nodes: [y_55], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf407, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg116_1, (3328, 16384), (1, 3328), 0), out=buf408)
        del arg116_1
        # Topologically Sorted Source Nodes: [tensor_27], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf408, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_69], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf408, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf414 = reinterpret_tensor(buf398, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf398  # reuse
        # Topologically Sorted Source Nodes: [x_70, float_57, mul_210, mean_28, add_84, rsqrt_28, mul_211, output_56, output_57], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf403, buf408, arg117_1, buf414, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg117_1
        buf415 = buf385; del buf385  # reuse
        # Topologically Sorted Source Nodes: [linear_56], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf414, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg118_1, (16384, 1280), (1, 16384), 0), out=buf415)
        del arg118_1
        # Topologically Sorted Source Nodes: [setitem_28, setitem_29], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf415, arg0_1, arg119_1, arg120_1, 2097152, grid=grid(2097152), stream=stream0)
        buf417 = reinterpret_tensor(buf396, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf396  # reuse
        # Topologically Sorted Source Nodes: [y_56], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf415, arg2_1, arg0_1, buf417, 16777216, grid=grid(16777216), stream=stream0)
        buf418 = reinterpret_tensor(buf395, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf395  # reuse
        # Topologically Sorted Source Nodes: [y_56], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg119_1, buf418, 25165824, grid=grid(25165824), stream=stream0)
        del arg119_1
        buf419 = reinterpret_tensor(buf394, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf394  # reuse
        # Topologically Sorted Source Nodes: [y_56], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf417, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf418, (128, 128, 1536), (196608, 1536, 1), 0), out=buf419)
        buf424 = reinterpret_tensor(buf419, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf419  # reuse
        # Topologically Sorted Source Nodes: [mask, y_56], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf424, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf425 = reinterpret_tensor(buf418, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf418  # reuse
        # Topologically Sorted Source Nodes: [y_56], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg120_1, buf425, 25165824, grid=grid(25165824), stream=stream0)
        del arg120_1
        buf426 = reinterpret_tensor(buf417, (128, 1024, 128), (131072, 128, 1), 0); del buf417  # reuse
        # Topologically Sorted Source Nodes: [y_56], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf424, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf425, (128, 1536, 128), (196608, 128, 1), 0), out=buf426)
        buf427 = buf397; del buf397  # reuse
        # Topologically Sorted Source Nodes: [contiguous_14], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf426, buf427, 16777216, grid=grid(16777216), stream=stream0)
        buf428 = reinterpret_tensor(buf414, (16384, 16384), (16384, 1), 0); del buf414  # reuse
        # Topologically Sorted Source Nodes: [y_58], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf427, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg121_1, (1024, 16384), (1, 1024), 0), out=buf428)
        del arg121_1
        # Topologically Sorted Source Nodes: [tensor_28], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf428, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_71], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf428, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf434 = reinterpret_tensor(buf378, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf378  # reuse
        # Topologically Sorted Source Nodes: [x_70, x_72, float_60, mul_221, mean_29, add_88, rsqrt_29, mul_222, output_58, output_59], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf403, buf408, buf428, arg122_1, buf434, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg122_1
        buf435 = buf406; del buf406  # reuse
        # Topologically Sorted Source Nodes: [x_73], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf434, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg123_1, (16384, 6656), (1, 16384), 0), out=buf435)
        del arg123_1
        buf436 = buf407; del buf407  # reuse
        # Topologically Sorted Source Nodes: [silu_14, mul_224], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf435, buf436, 54525952, grid=grid(54525952), stream=stream0)
        buf437 = reinterpret_tensor(buf434, (16384, 16384), (16384, 1), 0); del buf434  # reuse
        # Topologically Sorted Source Nodes: [y_59], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf436, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg124_1, (3328, 16384), (1, 3328), 0), out=buf437)
        del arg124_1
        # Topologically Sorted Source Nodes: [tensor_29], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf437, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_74], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf437, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf443 = reinterpret_tensor(buf369, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf369  # reuse
        # Topologically Sorted Source Nodes: [x_70, x_72, x_75, float_61, mul_225, mean_30, add_90, rsqrt_30, mul_226, output_60, output_61], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf403, buf408, buf428, buf437, arg125_1, buf443, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg125_1
        buf444 = buf415; del buf415  # reuse
        # Topologically Sorted Source Nodes: [linear_60], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf443, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg126_1, (16384, 1280), (1, 16384), 0), out=buf444)
        del arg126_1
        # Topologically Sorted Source Nodes: [setitem_30, setitem_31], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf444, arg0_1, arg127_1, arg128_1, 2097152, grid=grid(2097152), stream=stream0)
        buf446 = reinterpret_tensor(buf426, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf426  # reuse
        # Topologically Sorted Source Nodes: [y_60], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf444, arg2_1, arg0_1, buf446, 16777216, grid=grid(16777216), stream=stream0)
        buf447 = reinterpret_tensor(buf425, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf425  # reuse
        # Topologically Sorted Source Nodes: [y_60], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg127_1, buf447, 25165824, grid=grid(25165824), stream=stream0)
        del arg127_1
        buf448 = reinterpret_tensor(buf424, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf424  # reuse
        # Topologically Sorted Source Nodes: [y_60], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf446, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf447, (128, 128, 1536), (196608, 1536, 1), 0), out=buf448)
        buf453 = reinterpret_tensor(buf448, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf448  # reuse
        # Topologically Sorted Source Nodes: [mask, y_60], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf453, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf454 = reinterpret_tensor(buf447, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf447  # reuse
        # Topologically Sorted Source Nodes: [y_60], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg128_1, buf454, 25165824, grid=grid(25165824), stream=stream0)
        del arg128_1
        buf455 = reinterpret_tensor(buf446, (128, 1024, 128), (131072, 128, 1), 0); del buf446  # reuse
        # Topologically Sorted Source Nodes: [y_60], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf453, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf454, (128, 1536, 128), (196608, 128, 1), 0), out=buf455)
        buf456 = buf427; del buf427  # reuse
        # Topologically Sorted Source Nodes: [contiguous_15], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf455, buf456, 16777216, grid=grid(16777216), stream=stream0)
        buf457 = reinterpret_tensor(buf443, (16384, 16384), (16384, 1), 0); del buf443  # reuse
        # Topologically Sorted Source Nodes: [y_62], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf456, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg129_1, (1024, 16384), (1, 1024), 0), out=buf457)
        del arg129_1
        # Topologically Sorted Source Nodes: [tensor_30], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf457, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_76], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf457, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf462 = buf403; del buf403  # reuse
        buf464 = reinterpret_tensor(buf349, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf349  # reuse
        # Topologically Sorted Source Nodes: [x_70, x_72, x_75, x_77, float_64, mul_236, mean_31, add_94, rsqrt_31, mul_237, output_62, output_63], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf462, buf408, buf428, buf437, buf457, arg130_1, buf464, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg130_1
        buf465 = buf435; del buf435  # reuse
        # Topologically Sorted Source Nodes: [x_78], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf464, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg131_1, (16384, 6656), (1, 16384), 0), out=buf465)
        del arg131_1
        buf466 = buf436; del buf436  # reuse
        # Topologically Sorted Source Nodes: [silu_15, mul_239], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf465, buf466, 54525952, grid=grid(54525952), stream=stream0)
        buf467 = reinterpret_tensor(buf464, (16384, 16384), (16384, 1), 0); del buf464  # reuse
        # Topologically Sorted Source Nodes: [y_63], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf466, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg132_1, (3328, 16384), (1, 3328), 0), out=buf467)
        del arg132_1
        # Topologically Sorted Source Nodes: [tensor_31], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf467, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_79], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf467, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf473 = reinterpret_tensor(buf457, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf457  # reuse
        # Topologically Sorted Source Nodes: [x_80, float_65, mul_240, mean_32, add_96, rsqrt_32, mul_241, output_64, output_65], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf462, buf467, arg133_1, buf473, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg133_1
        buf474 = buf444; del buf444  # reuse
        # Topologically Sorted Source Nodes: [linear_64], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf473, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg134_1, (16384, 1280), (1, 16384), 0), out=buf474)
        del arg134_1
        # Topologically Sorted Source Nodes: [setitem_32, setitem_33], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf474, arg0_1, arg135_1, arg136_1, 2097152, grid=grid(2097152), stream=stream0)
        buf476 = reinterpret_tensor(buf455, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf455  # reuse
        # Topologically Sorted Source Nodes: [y_64], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf474, arg2_1, arg0_1, buf476, 16777216, grid=grid(16777216), stream=stream0)
        buf477 = reinterpret_tensor(buf454, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf454  # reuse
        # Topologically Sorted Source Nodes: [y_64], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg135_1, buf477, 25165824, grid=grid(25165824), stream=stream0)
        del arg135_1
        buf478 = reinterpret_tensor(buf453, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf453  # reuse
        # Topologically Sorted Source Nodes: [y_64], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf476, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf477, (128, 128, 1536), (196608, 1536, 1), 0), out=buf478)
        buf483 = reinterpret_tensor(buf478, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf478  # reuse
        # Topologically Sorted Source Nodes: [mask, y_64], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf483, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf484 = reinterpret_tensor(buf477, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf477  # reuse
        # Topologically Sorted Source Nodes: [y_64], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg136_1, buf484, 25165824, grid=grid(25165824), stream=stream0)
        del arg136_1
        buf485 = reinterpret_tensor(buf476, (128, 1024, 128), (131072, 128, 1), 0); del buf476  # reuse
        # Topologically Sorted Source Nodes: [y_64], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf483, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf484, (128, 1536, 128), (196608, 128, 1), 0), out=buf485)
        buf486 = buf456; del buf456  # reuse
        # Topologically Sorted Source Nodes: [contiguous_16], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf485, buf486, 16777216, grid=grid(16777216), stream=stream0)
        buf487 = reinterpret_tensor(buf473, (16384, 16384), (16384, 1), 0); del buf473  # reuse
        # Topologically Sorted Source Nodes: [y_66], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf486, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg137_1, (1024, 16384), (1, 1024), 0), out=buf487)
        del arg137_1
        # Topologically Sorted Source Nodes: [tensor_32], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf487, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_81], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf487, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf493 = reinterpret_tensor(buf437, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf437  # reuse
        # Topologically Sorted Source Nodes: [x_80, x_82, float_68, mul_251, mean_33, add_100, rsqrt_33, mul_252, output_66, output_67], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf462, buf467, buf487, arg138_1, buf493, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg138_1
        buf494 = buf465; del buf465  # reuse
        # Topologically Sorted Source Nodes: [x_83], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf493, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg139_1, (16384, 6656), (1, 16384), 0), out=buf494)
        del arg139_1
        buf495 = buf466; del buf466  # reuse
        # Topologically Sorted Source Nodes: [silu_16, mul_254], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf494, buf495, 54525952, grid=grid(54525952), stream=stream0)
        buf496 = reinterpret_tensor(buf493, (16384, 16384), (16384, 1), 0); del buf493  # reuse
        # Topologically Sorted Source Nodes: [y_67], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf495, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg140_1, (3328, 16384), (1, 3328), 0), out=buf496)
        del arg140_1
        # Topologically Sorted Source Nodes: [tensor_33], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf496, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_84], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf496, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf502 = reinterpret_tensor(buf428, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf428  # reuse
        # Topologically Sorted Source Nodes: [x_80, x_82, x_85, float_69, mul_255, mean_34, add_102, rsqrt_34, mul_256, output_68, output_69], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf462, buf467, buf487, buf496, arg141_1, buf502, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg141_1
        buf503 = buf474; del buf474  # reuse
        # Topologically Sorted Source Nodes: [linear_68], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf502, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg142_1, (16384, 1280), (1, 16384), 0), out=buf503)
        del arg142_1
        # Topologically Sorted Source Nodes: [setitem_34, setitem_35], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf503, arg0_1, arg143_1, arg144_1, 2097152, grid=grid(2097152), stream=stream0)
        buf505 = reinterpret_tensor(buf485, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf485  # reuse
        # Topologically Sorted Source Nodes: [y_68], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf503, arg2_1, arg0_1, buf505, 16777216, grid=grid(16777216), stream=stream0)
        buf506 = reinterpret_tensor(buf484, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf484  # reuse
        # Topologically Sorted Source Nodes: [y_68], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg143_1, buf506, 25165824, grid=grid(25165824), stream=stream0)
        del arg143_1
        buf507 = reinterpret_tensor(buf483, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf483  # reuse
        # Topologically Sorted Source Nodes: [y_68], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf505, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf506, (128, 128, 1536), (196608, 1536, 1), 0), out=buf507)
        buf512 = reinterpret_tensor(buf507, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf507  # reuse
        # Topologically Sorted Source Nodes: [mask, y_68], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf512, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf513 = reinterpret_tensor(buf506, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf506  # reuse
        # Topologically Sorted Source Nodes: [y_68], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg144_1, buf513, 25165824, grid=grid(25165824), stream=stream0)
        del arg144_1
        buf514 = reinterpret_tensor(buf505, (128, 1024, 128), (131072, 128, 1), 0); del buf505  # reuse
        # Topologically Sorted Source Nodes: [y_68], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf512, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf513, (128, 1536, 128), (196608, 128, 1), 0), out=buf514)
        buf515 = buf486; del buf486  # reuse
        # Topologically Sorted Source Nodes: [contiguous_17], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf514, buf515, 16777216, grid=grid(16777216), stream=stream0)
        buf516 = reinterpret_tensor(buf502, (16384, 16384), (16384, 1), 0); del buf502  # reuse
        # Topologically Sorted Source Nodes: [y_70], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf515, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg145_1, (1024, 16384), (1, 1024), 0), out=buf516)
        del arg145_1
        # Topologically Sorted Source Nodes: [tensor_34], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf516, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_86], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf516, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf521 = buf462; del buf462  # reuse
        buf523 = reinterpret_tensor(buf408, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf408  # reuse
        # Topologically Sorted Source Nodes: [x_80, x_82, x_85, x_87, float_72, mul_266, mean_35, add_106, rsqrt_35, mul_267, output_70, output_71], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf521, buf467, buf487, buf496, buf516, arg146_1, buf523, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg146_1
        buf524 = buf494; del buf494  # reuse
        # Topologically Sorted Source Nodes: [x_88], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf523, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg147_1, (16384, 6656), (1, 16384), 0), out=buf524)
        del arg147_1
        buf525 = buf495; del buf495  # reuse
        # Topologically Sorted Source Nodes: [silu_17, mul_269], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf524, buf525, 54525952, grid=grid(54525952), stream=stream0)
        buf526 = reinterpret_tensor(buf523, (16384, 16384), (16384, 1), 0); del buf523  # reuse
        # Topologically Sorted Source Nodes: [y_71], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf525, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg148_1, (3328, 16384), (1, 3328), 0), out=buf526)
        del arg148_1
        # Topologically Sorted Source Nodes: [tensor_35], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf526, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_89], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf526, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf532 = reinterpret_tensor(buf516, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf516  # reuse
        # Topologically Sorted Source Nodes: [x_90, float_73, mul_270, mean_36, add_108, rsqrt_36, mul_271, output_72, output_73], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf521, buf526, arg149_1, buf532, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg149_1
        buf533 = buf503; del buf503  # reuse
        # Topologically Sorted Source Nodes: [linear_72], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf532, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg150_1, (16384, 1280), (1, 16384), 0), out=buf533)
        del arg150_1
        # Topologically Sorted Source Nodes: [setitem_36, setitem_37], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf533, arg0_1, arg151_1, arg152_1, 2097152, grid=grid(2097152), stream=stream0)
        buf535 = reinterpret_tensor(buf514, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf514  # reuse
        # Topologically Sorted Source Nodes: [y_72], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf533, arg2_1, arg0_1, buf535, 16777216, grid=grid(16777216), stream=stream0)
        buf536 = reinterpret_tensor(buf513, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf513  # reuse
        # Topologically Sorted Source Nodes: [y_72], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg151_1, buf536, 25165824, grid=grid(25165824), stream=stream0)
        del arg151_1
        buf537 = reinterpret_tensor(buf512, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf512  # reuse
        # Topologically Sorted Source Nodes: [y_72], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf535, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf536, (128, 128, 1536), (196608, 1536, 1), 0), out=buf537)
        buf542 = reinterpret_tensor(buf537, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf537  # reuse
        # Topologically Sorted Source Nodes: [mask, y_72], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf542, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf543 = reinterpret_tensor(buf536, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf536  # reuse
        # Topologically Sorted Source Nodes: [y_72], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg152_1, buf543, 25165824, grid=grid(25165824), stream=stream0)
        del arg152_1
        buf544 = reinterpret_tensor(buf535, (128, 1024, 128), (131072, 128, 1), 0); del buf535  # reuse
        # Topologically Sorted Source Nodes: [y_72], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf542, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf543, (128, 1536, 128), (196608, 128, 1), 0), out=buf544)
        buf545 = buf515; del buf515  # reuse
        # Topologically Sorted Source Nodes: [contiguous_18], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf544, buf545, 16777216, grid=grid(16777216), stream=stream0)
        buf546 = reinterpret_tensor(buf532, (16384, 16384), (16384, 1), 0); del buf532  # reuse
        # Topologically Sorted Source Nodes: [y_74], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf545, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg153_1, (1024, 16384), (1, 1024), 0), out=buf546)
        del arg153_1
        # Topologically Sorted Source Nodes: [tensor_36], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf546, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_91], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf546, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf552 = reinterpret_tensor(buf496, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf496  # reuse
        # Topologically Sorted Source Nodes: [x_90, x_92, float_76, mul_281, mean_37, add_112, rsqrt_37, mul_282, output_74, output_75], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf521, buf526, buf546, arg154_1, buf552, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg154_1
        buf553 = buf524; del buf524  # reuse
        # Topologically Sorted Source Nodes: [x_93], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf552, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg155_1, (16384, 6656), (1, 16384), 0), out=buf553)
        del arg155_1
        buf554 = buf525; del buf525  # reuse
        # Topologically Sorted Source Nodes: [silu_18, mul_284], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf553, buf554, 54525952, grid=grid(54525952), stream=stream0)
        buf555 = reinterpret_tensor(buf552, (16384, 16384), (16384, 1), 0); del buf552  # reuse
        # Topologically Sorted Source Nodes: [y_75], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf554, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg156_1, (3328, 16384), (1, 3328), 0), out=buf555)
        del arg156_1
        # Topologically Sorted Source Nodes: [tensor_37], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf555, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_94], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf555, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf561 = reinterpret_tensor(buf487, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf487  # reuse
        # Topologically Sorted Source Nodes: [x_90, x_92, x_95, float_77, mul_285, mean_38, add_114, rsqrt_38, mul_286, output_76, output_77], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf521, buf526, buf546, buf555, arg157_1, buf561, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg157_1
        buf562 = buf533; del buf533  # reuse
        # Topologically Sorted Source Nodes: [linear_76], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf561, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg158_1, (16384, 1280), (1, 16384), 0), out=buf562)
        del arg158_1
        # Topologically Sorted Source Nodes: [setitem_38, setitem_39], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf562, arg0_1, arg159_1, arg160_1, 2097152, grid=grid(2097152), stream=stream0)
        buf564 = reinterpret_tensor(buf544, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf544  # reuse
        # Topologically Sorted Source Nodes: [y_76], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf562, arg2_1, arg0_1, buf564, 16777216, grid=grid(16777216), stream=stream0)
        buf565 = reinterpret_tensor(buf543, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf543  # reuse
        # Topologically Sorted Source Nodes: [y_76], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg159_1, buf565, 25165824, grid=grid(25165824), stream=stream0)
        del arg159_1
        buf566 = reinterpret_tensor(buf542, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf542  # reuse
        # Topologically Sorted Source Nodes: [y_76], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf564, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf565, (128, 128, 1536), (196608, 1536, 1), 0), out=buf566)
        buf571 = reinterpret_tensor(buf566, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf566  # reuse
        # Topologically Sorted Source Nodes: [mask, y_76], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf571, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf572 = reinterpret_tensor(buf565, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf565  # reuse
        # Topologically Sorted Source Nodes: [y_76], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg160_1, buf572, 25165824, grid=grid(25165824), stream=stream0)
        del arg160_1
        buf573 = reinterpret_tensor(buf564, (128, 1024, 128), (131072, 128, 1), 0); del buf564  # reuse
        # Topologically Sorted Source Nodes: [y_76], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf571, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf572, (128, 1536, 128), (196608, 128, 1), 0), out=buf573)
        buf574 = buf545; del buf545  # reuse
        # Topologically Sorted Source Nodes: [contiguous_19], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf573, buf574, 16777216, grid=grid(16777216), stream=stream0)
        buf575 = reinterpret_tensor(buf561, (16384, 16384), (16384, 1), 0); del buf561  # reuse
        # Topologically Sorted Source Nodes: [y_78], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf574, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg161_1, (1024, 16384), (1, 1024), 0), out=buf575)
        del arg161_1
        # Topologically Sorted Source Nodes: [tensor_38], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf575, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_96], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf575, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf580 = buf521; del buf521  # reuse
        buf582 = reinterpret_tensor(buf467, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf467  # reuse
        # Topologically Sorted Source Nodes: [x_90, x_92, x_95, x_97, float_80, mul_296, mean_39, add_118, rsqrt_39, mul_297, output_78, output_79], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf580, buf526, buf546, buf555, buf575, arg162_1, buf582, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg162_1
        buf583 = buf553; del buf553  # reuse
        # Topologically Sorted Source Nodes: [x_98], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf582, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg163_1, (16384, 6656), (1, 16384), 0), out=buf583)
        del arg163_1
        buf584 = buf554; del buf554  # reuse
        # Topologically Sorted Source Nodes: [silu_19, mul_299], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf583, buf584, 54525952, grid=grid(54525952), stream=stream0)
        buf585 = reinterpret_tensor(buf582, (16384, 16384), (16384, 1), 0); del buf582  # reuse
        # Topologically Sorted Source Nodes: [y_79], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf584, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg164_1, (3328, 16384), (1, 3328), 0), out=buf585)
        del arg164_1
        # Topologically Sorted Source Nodes: [tensor_39], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf585, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_99], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf585, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf591 = reinterpret_tensor(buf575, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf575  # reuse
        # Topologically Sorted Source Nodes: [x_100, float_81, mul_300, mean_40, add_120, rsqrt_40, mul_301, output_80, output_81], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf580, buf585, arg165_1, buf591, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg165_1
        buf592 = buf562; del buf562  # reuse
        # Topologically Sorted Source Nodes: [linear_80], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf591, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg166_1, (16384, 1280), (1, 16384), 0), out=buf592)
        del arg166_1
        # Topologically Sorted Source Nodes: [setitem_40, setitem_41], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf592, arg0_1, arg167_1, arg168_1, 2097152, grid=grid(2097152), stream=stream0)
        buf594 = reinterpret_tensor(buf573, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf573  # reuse
        # Topologically Sorted Source Nodes: [y_80], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf592, arg2_1, arg0_1, buf594, 16777216, grid=grid(16777216), stream=stream0)
        buf595 = reinterpret_tensor(buf572, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf572  # reuse
        # Topologically Sorted Source Nodes: [y_80], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg167_1, buf595, 25165824, grid=grid(25165824), stream=stream0)
        del arg167_1
        buf596 = reinterpret_tensor(buf571, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf571  # reuse
        # Topologically Sorted Source Nodes: [y_80], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf594, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf595, (128, 128, 1536), (196608, 1536, 1), 0), out=buf596)
        buf601 = reinterpret_tensor(buf596, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf596  # reuse
        # Topologically Sorted Source Nodes: [mask, y_80], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf601, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf602 = reinterpret_tensor(buf595, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf595  # reuse
        # Topologically Sorted Source Nodes: [y_80], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg168_1, buf602, 25165824, grid=grid(25165824), stream=stream0)
        del arg168_1
        buf603 = reinterpret_tensor(buf594, (128, 1024, 128), (131072, 128, 1), 0); del buf594  # reuse
        # Topologically Sorted Source Nodes: [y_80], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf601, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf602, (128, 1536, 128), (196608, 128, 1), 0), out=buf603)
        buf604 = buf574; del buf574  # reuse
        # Topologically Sorted Source Nodes: [contiguous_20], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf603, buf604, 16777216, grid=grid(16777216), stream=stream0)
        buf605 = reinterpret_tensor(buf591, (16384, 16384), (16384, 1), 0); del buf591  # reuse
        # Topologically Sorted Source Nodes: [y_82], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf604, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg169_1, (1024, 16384), (1, 1024), 0), out=buf605)
        del arg169_1
        # Topologically Sorted Source Nodes: [tensor_40], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf605, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_101], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf605, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf611 = reinterpret_tensor(buf555, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf555  # reuse
        # Topologically Sorted Source Nodes: [x_100, x_102, float_84, mul_311, mean_41, add_124, rsqrt_41, mul_312, output_82, output_83], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf580, buf585, buf605, arg170_1, buf611, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg170_1
        buf612 = buf583; del buf583  # reuse
        # Topologically Sorted Source Nodes: [x_103], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf611, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg171_1, (16384, 6656), (1, 16384), 0), out=buf612)
        del arg171_1
        buf613 = buf584; del buf584  # reuse
        # Topologically Sorted Source Nodes: [silu_20, mul_314], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf612, buf613, 54525952, grid=grid(54525952), stream=stream0)
        buf614 = reinterpret_tensor(buf611, (16384, 16384), (16384, 1), 0); del buf611  # reuse
        # Topologically Sorted Source Nodes: [y_83], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf613, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg172_1, (3328, 16384), (1, 3328), 0), out=buf614)
        del arg172_1
        # Topologically Sorted Source Nodes: [tensor_41], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf614, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_104], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf614, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf620 = reinterpret_tensor(buf546, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf546  # reuse
        # Topologically Sorted Source Nodes: [x_100, x_102, x_105, float_85, mul_315, mean_42, add_126, rsqrt_42, mul_316, output_84, output_85], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf580, buf585, buf605, buf614, arg173_1, buf620, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg173_1
        buf621 = buf592; del buf592  # reuse
        # Topologically Sorted Source Nodes: [linear_84], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf620, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg174_1, (16384, 1280), (1, 16384), 0), out=buf621)
        del arg174_1
        # Topologically Sorted Source Nodes: [setitem_42, setitem_43], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf621, arg0_1, arg175_1, arg176_1, 2097152, grid=grid(2097152), stream=stream0)
        buf623 = reinterpret_tensor(buf603, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf603  # reuse
        # Topologically Sorted Source Nodes: [y_84], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf621, arg2_1, arg0_1, buf623, 16777216, grid=grid(16777216), stream=stream0)
        buf624 = reinterpret_tensor(buf602, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf602  # reuse
        # Topologically Sorted Source Nodes: [y_84], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg175_1, buf624, 25165824, grid=grid(25165824), stream=stream0)
        del arg175_1
        buf625 = reinterpret_tensor(buf601, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf601  # reuse
        # Topologically Sorted Source Nodes: [y_84], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf623, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf624, (128, 128, 1536), (196608, 1536, 1), 0), out=buf625)
        buf630 = reinterpret_tensor(buf625, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf625  # reuse
        # Topologically Sorted Source Nodes: [mask, y_84], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf630, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf631 = reinterpret_tensor(buf624, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf624  # reuse
        # Topologically Sorted Source Nodes: [y_84], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg176_1, buf631, 25165824, grid=grid(25165824), stream=stream0)
        del arg176_1
        buf632 = reinterpret_tensor(buf623, (128, 1024, 128), (131072, 128, 1), 0); del buf623  # reuse
        # Topologically Sorted Source Nodes: [y_84], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf630, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf631, (128, 1536, 128), (196608, 128, 1), 0), out=buf632)
        buf633 = buf604; del buf604  # reuse
        # Topologically Sorted Source Nodes: [contiguous_21], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf632, buf633, 16777216, grid=grid(16777216), stream=stream0)
        buf634 = reinterpret_tensor(buf620, (16384, 16384), (16384, 1), 0); del buf620  # reuse
        # Topologically Sorted Source Nodes: [y_86], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf633, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg177_1, (1024, 16384), (1, 1024), 0), out=buf634)
        del arg177_1
        # Topologically Sorted Source Nodes: [tensor_42], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf634, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_106], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf634, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf639 = buf580; del buf580  # reuse
        buf641 = reinterpret_tensor(buf526, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf526  # reuse
        # Topologically Sorted Source Nodes: [x_100, x_102, x_105, x_107, float_88, mul_326, mean_43, add_130, rsqrt_43, mul_327, output_86, output_87], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf639, buf585, buf605, buf614, buf634, arg178_1, buf641, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg178_1
        buf642 = buf612; del buf612  # reuse
        # Topologically Sorted Source Nodes: [x_108], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf641, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg179_1, (16384, 6656), (1, 16384), 0), out=buf642)
        del arg179_1
        buf643 = buf613; del buf613  # reuse
        # Topologically Sorted Source Nodes: [silu_21, mul_329], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf642, buf643, 54525952, grid=grid(54525952), stream=stream0)
        buf644 = reinterpret_tensor(buf641, (16384, 16384), (16384, 1), 0); del buf641  # reuse
        # Topologically Sorted Source Nodes: [y_87], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf643, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg180_1, (3328, 16384), (1, 3328), 0), out=buf644)
        del arg180_1
        # Topologically Sorted Source Nodes: [tensor_43], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf644, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_109], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf644, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf650 = reinterpret_tensor(buf634, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf634  # reuse
        # Topologically Sorted Source Nodes: [x_110, float_89, mul_330, mean_44, add_132, rsqrt_44, mul_331, output_88, output_89], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf639, buf644, arg181_1, buf650, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg181_1
        buf651 = buf621; del buf621  # reuse
        # Topologically Sorted Source Nodes: [linear_88], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf650, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg182_1, (16384, 1280), (1, 16384), 0), out=buf651)
        del arg182_1
        # Topologically Sorted Source Nodes: [setitem_44, setitem_45], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf651, arg0_1, arg183_1, arg184_1, 2097152, grid=grid(2097152), stream=stream0)
        buf653 = reinterpret_tensor(buf632, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf632  # reuse
        # Topologically Sorted Source Nodes: [y_88], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf651, arg2_1, arg0_1, buf653, 16777216, grid=grid(16777216), stream=stream0)
        buf654 = reinterpret_tensor(buf631, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf631  # reuse
        # Topologically Sorted Source Nodes: [y_88], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg183_1, buf654, 25165824, grid=grid(25165824), stream=stream0)
        del arg183_1
        buf655 = reinterpret_tensor(buf630, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf630  # reuse
        # Topologically Sorted Source Nodes: [y_88], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf653, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf654, (128, 128, 1536), (196608, 1536, 1), 0), out=buf655)
        buf660 = reinterpret_tensor(buf655, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf655  # reuse
        # Topologically Sorted Source Nodes: [mask, y_88], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf660, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf661 = reinterpret_tensor(buf654, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf654  # reuse
        # Topologically Sorted Source Nodes: [y_88], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg184_1, buf661, 25165824, grid=grid(25165824), stream=stream0)
        del arg184_1
        buf662 = reinterpret_tensor(buf653, (128, 1024, 128), (131072, 128, 1), 0); del buf653  # reuse
        # Topologically Sorted Source Nodes: [y_88], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf660, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf661, (128, 1536, 128), (196608, 128, 1), 0), out=buf662)
        buf663 = buf633; del buf633  # reuse
        # Topologically Sorted Source Nodes: [contiguous_22], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf662, buf663, 16777216, grid=grid(16777216), stream=stream0)
        buf664 = reinterpret_tensor(buf650, (16384, 16384), (16384, 1), 0); del buf650  # reuse
        # Topologically Sorted Source Nodes: [y_90], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf663, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg185_1, (1024, 16384), (1, 1024), 0), out=buf664)
        del arg185_1
        # Topologically Sorted Source Nodes: [tensor_44], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf664, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_111], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf664, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf670 = reinterpret_tensor(buf614, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf614  # reuse
        # Topologically Sorted Source Nodes: [x_110, x_112, float_92, mul_341, mean_45, add_136, rsqrt_45, mul_342, output_90, output_91], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf639, buf644, buf664, arg186_1, buf670, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg186_1
        buf671 = buf642; del buf642  # reuse
        # Topologically Sorted Source Nodes: [x_113], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf670, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg187_1, (16384, 6656), (1, 16384), 0), out=buf671)
        del arg187_1
        buf672 = buf643; del buf643  # reuse
        # Topologically Sorted Source Nodes: [silu_22, mul_344], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf671, buf672, 54525952, grid=grid(54525952), stream=stream0)
        buf673 = reinterpret_tensor(buf670, (16384, 16384), (16384, 1), 0); del buf670  # reuse
        # Topologically Sorted Source Nodes: [y_91], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf672, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg188_1, (3328, 16384), (1, 3328), 0), out=buf673)
        del arg188_1
        # Topologically Sorted Source Nodes: [tensor_45], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf673, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_114], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf673, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf679 = reinterpret_tensor(buf605, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf605  # reuse
        # Topologically Sorted Source Nodes: [x_110, x_112, x_115, float_93, mul_345, mean_46, add_138, rsqrt_46, mul_346, output_92, output_93], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf639, buf644, buf664, buf673, arg189_1, buf679, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg189_1
        buf680 = buf651; del buf651  # reuse
        # Topologically Sorted Source Nodes: [linear_92], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf679, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg190_1, (16384, 1280), (1, 16384), 0), out=buf680)
        del arg190_1
        # Topologically Sorted Source Nodes: [setitem_46, setitem_47], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf680, arg0_1, arg191_1, arg192_1, 2097152, grid=grid(2097152), stream=stream0)
        buf682 = reinterpret_tensor(buf662, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf662  # reuse
        # Topologically Sorted Source Nodes: [y_92], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf680, arg2_1, arg0_1, buf682, 16777216, grid=grid(16777216), stream=stream0)
        buf683 = reinterpret_tensor(buf661, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf661  # reuse
        # Topologically Sorted Source Nodes: [y_92], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg191_1, buf683, 25165824, grid=grid(25165824), stream=stream0)
        del arg191_1
        buf684 = reinterpret_tensor(buf660, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf660  # reuse
        # Topologically Sorted Source Nodes: [y_92], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf682, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf683, (128, 128, 1536), (196608, 1536, 1), 0), out=buf684)
        buf689 = reinterpret_tensor(buf684, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf684  # reuse
        # Topologically Sorted Source Nodes: [mask, y_92], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf689, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf690 = reinterpret_tensor(buf683, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf683  # reuse
        # Topologically Sorted Source Nodes: [y_92], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg192_1, buf690, 25165824, grid=grid(25165824), stream=stream0)
        del arg192_1
        buf691 = reinterpret_tensor(buf682, (128, 1024, 128), (131072, 128, 1), 0); del buf682  # reuse
        # Topologically Sorted Source Nodes: [y_92], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf689, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf690, (128, 1536, 128), (196608, 128, 1), 0), out=buf691)
        buf692 = buf663; del buf663  # reuse
        # Topologically Sorted Source Nodes: [contiguous_23], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf691, buf692, 16777216, grid=grid(16777216), stream=stream0)
        buf693 = reinterpret_tensor(buf679, (16384, 16384), (16384, 1), 0); del buf679  # reuse
        # Topologically Sorted Source Nodes: [y_94], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf692, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg193_1, (1024, 16384), (1, 1024), 0), out=buf693)
        del arg193_1
        # Topologically Sorted Source Nodes: [tensor_46], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf693, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_116], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf693, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf698 = buf639; del buf639  # reuse
        buf700 = reinterpret_tensor(buf585, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf585  # reuse
        # Topologically Sorted Source Nodes: [x_110, x_112, x_115, x_117, float_96, mul_356, mean_47, add_142, rsqrt_47, mul_357, output_94, output_95], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf698, buf644, buf664, buf673, buf693, arg194_1, buf700, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg194_1
        buf701 = buf671; del buf671  # reuse
        # Topologically Sorted Source Nodes: [x_118], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf700, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg195_1, (16384, 6656), (1, 16384), 0), out=buf701)
        del arg195_1
        buf702 = buf672; del buf672  # reuse
        # Topologically Sorted Source Nodes: [silu_23, mul_359], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf701, buf702, 54525952, grid=grid(54525952), stream=stream0)
        buf703 = reinterpret_tensor(buf700, (16384, 16384), (16384, 1), 0); del buf700  # reuse
        # Topologically Sorted Source Nodes: [y_95], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf702, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg196_1, (3328, 16384), (1, 3328), 0), out=buf703)
        del arg196_1
        # Topologically Sorted Source Nodes: [tensor_47], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf703, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_119], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf703, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf709 = reinterpret_tensor(buf693, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf693  # reuse
        # Topologically Sorted Source Nodes: [x_120, float_97, mul_360, mean_48, add_144, rsqrt_48, mul_361, output_96, output_97], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf698, buf703, arg197_1, buf709, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg197_1
        buf710 = buf680; del buf680  # reuse
        # Topologically Sorted Source Nodes: [linear_96], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf709, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg198_1, (16384, 1280), (1, 16384), 0), out=buf710)
        del arg198_1
        # Topologically Sorted Source Nodes: [setitem_48, setitem_49], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf710, arg0_1, arg199_1, arg200_1, 2097152, grid=grid(2097152), stream=stream0)
        buf712 = reinterpret_tensor(buf691, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf691  # reuse
        # Topologically Sorted Source Nodes: [y_96], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf710, arg2_1, arg0_1, buf712, 16777216, grid=grid(16777216), stream=stream0)
        buf713 = reinterpret_tensor(buf690, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf690  # reuse
        # Topologically Sorted Source Nodes: [y_96], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg199_1, buf713, 25165824, grid=grid(25165824), stream=stream0)
        del arg199_1
        buf714 = reinterpret_tensor(buf689, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf689  # reuse
        # Topologically Sorted Source Nodes: [y_96], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf712, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf713, (128, 128, 1536), (196608, 1536, 1), 0), out=buf714)
        buf719 = reinterpret_tensor(buf714, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf714  # reuse
        # Topologically Sorted Source Nodes: [mask, y_96], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf719, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf720 = reinterpret_tensor(buf713, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf713  # reuse
        # Topologically Sorted Source Nodes: [y_96], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg200_1, buf720, 25165824, grid=grid(25165824), stream=stream0)
        del arg200_1
        buf721 = reinterpret_tensor(buf712, (128, 1024, 128), (131072, 128, 1), 0); del buf712  # reuse
        # Topologically Sorted Source Nodes: [y_96], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf719, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf720, (128, 1536, 128), (196608, 128, 1), 0), out=buf721)
        buf722 = buf692; del buf692  # reuse
        # Topologically Sorted Source Nodes: [contiguous_24], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf721, buf722, 16777216, grid=grid(16777216), stream=stream0)
        buf723 = reinterpret_tensor(buf709, (16384, 16384), (16384, 1), 0); del buf709  # reuse
        # Topologically Sorted Source Nodes: [y_98], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf722, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg201_1, (1024, 16384), (1, 1024), 0), out=buf723)
        del arg201_1
        # Topologically Sorted Source Nodes: [tensor_48], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf723, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_121], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf723, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf729 = reinterpret_tensor(buf673, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf673  # reuse
        # Topologically Sorted Source Nodes: [x_120, x_122, float_100, mul_371, mean_49, add_148, rsqrt_49, mul_372, output_98, output_99], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf698, buf703, buf723, arg202_1, buf729, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg202_1
        buf730 = buf701; del buf701  # reuse
        # Topologically Sorted Source Nodes: [x_123], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf729, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg203_1, (16384, 6656), (1, 16384), 0), out=buf730)
        del arg203_1
        buf731 = buf702; del buf702  # reuse
        # Topologically Sorted Source Nodes: [silu_24, mul_374], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf730, buf731, 54525952, grid=grid(54525952), stream=stream0)
        buf732 = reinterpret_tensor(buf729, (16384, 16384), (16384, 1), 0); del buf729  # reuse
        # Topologically Sorted Source Nodes: [y_99], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf731, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg204_1, (3328, 16384), (1, 3328), 0), out=buf732)
        del arg204_1
        # Topologically Sorted Source Nodes: [tensor_49], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf732, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_124], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf732, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf738 = reinterpret_tensor(buf664, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf664  # reuse
        # Topologically Sorted Source Nodes: [x_120, x_122, x_125, float_101, mul_375, mean_50, add_150, rsqrt_50, mul_376, output_100, output_101], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf698, buf703, buf723, buf732, arg205_1, buf738, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg205_1
        buf739 = buf710; del buf710  # reuse
        # Topologically Sorted Source Nodes: [linear_100], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf738, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg206_1, (16384, 1280), (1, 16384), 0), out=buf739)
        del arg206_1
        # Topologically Sorted Source Nodes: [setitem_50, setitem_51], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf739, arg0_1, arg207_1, arg208_1, 2097152, grid=grid(2097152), stream=stream0)
        buf741 = reinterpret_tensor(buf721, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf721  # reuse
        # Topologically Sorted Source Nodes: [y_100], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf739, arg2_1, arg0_1, buf741, 16777216, grid=grid(16777216), stream=stream0)
        buf742 = reinterpret_tensor(buf720, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf720  # reuse
        # Topologically Sorted Source Nodes: [y_100], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg207_1, buf742, 25165824, grid=grid(25165824), stream=stream0)
        del arg207_1
        buf743 = reinterpret_tensor(buf719, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf719  # reuse
        # Topologically Sorted Source Nodes: [y_100], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf741, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf742, (128, 128, 1536), (196608, 1536, 1), 0), out=buf743)
        buf748 = reinterpret_tensor(buf743, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf743  # reuse
        # Topologically Sorted Source Nodes: [mask, y_100], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf748, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf749 = reinterpret_tensor(buf742, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf742  # reuse
        # Topologically Sorted Source Nodes: [y_100], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg208_1, buf749, 25165824, grid=grid(25165824), stream=stream0)
        del arg208_1
        buf750 = reinterpret_tensor(buf741, (128, 1024, 128), (131072, 128, 1), 0); del buf741  # reuse
        # Topologically Sorted Source Nodes: [y_100], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf748, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf749, (128, 1536, 128), (196608, 128, 1), 0), out=buf750)
        buf751 = buf722; del buf722  # reuse
        # Topologically Sorted Source Nodes: [contiguous_25], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf750, buf751, 16777216, grid=grid(16777216), stream=stream0)
        buf752 = reinterpret_tensor(buf738, (16384, 16384), (16384, 1), 0); del buf738  # reuse
        # Topologically Sorted Source Nodes: [y_102], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf751, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg209_1, (1024, 16384), (1, 1024), 0), out=buf752)
        del arg209_1
        # Topologically Sorted Source Nodes: [tensor_50], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf752, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_126], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf752, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf757 = buf698; del buf698  # reuse
        buf759 = reinterpret_tensor(buf644, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf644  # reuse
        # Topologically Sorted Source Nodes: [x_120, x_122, x_125, x_127, float_104, mul_386, mean_51, add_154, rsqrt_51, mul_387, output_102, output_103], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf757, buf703, buf723, buf732, buf752, arg210_1, buf759, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg210_1
        buf760 = buf730; del buf730  # reuse
        # Topologically Sorted Source Nodes: [x_128], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf759, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg211_1, (16384, 6656), (1, 16384), 0), out=buf760)
        del arg211_1
        buf761 = buf731; del buf731  # reuse
        # Topologically Sorted Source Nodes: [silu_25, mul_389], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf760, buf761, 54525952, grid=grid(54525952), stream=stream0)
        buf762 = reinterpret_tensor(buf759, (16384, 16384), (16384, 1), 0); del buf759  # reuse
        # Topologically Sorted Source Nodes: [y_103], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf761, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg212_1, (3328, 16384), (1, 3328), 0), out=buf762)
        del arg212_1
        # Topologically Sorted Source Nodes: [tensor_51], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf762, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_129], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf762, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf768 = reinterpret_tensor(buf752, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf752  # reuse
        # Topologically Sorted Source Nodes: [x_130, float_105, mul_390, mean_52, add_156, rsqrt_52, mul_391, output_104, output_105], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf757, buf762, arg213_1, buf768, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg213_1
        buf769 = buf739; del buf739  # reuse
        # Topologically Sorted Source Nodes: [linear_104], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf768, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg214_1, (16384, 1280), (1, 16384), 0), out=buf769)
        del arg214_1
        # Topologically Sorted Source Nodes: [setitem_52, setitem_53], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf769, arg0_1, arg215_1, arg216_1, 2097152, grid=grid(2097152), stream=stream0)
        buf771 = reinterpret_tensor(buf750, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf750  # reuse
        # Topologically Sorted Source Nodes: [y_104], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf769, arg2_1, arg0_1, buf771, 16777216, grid=grid(16777216), stream=stream0)
        buf772 = reinterpret_tensor(buf749, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf749  # reuse
        # Topologically Sorted Source Nodes: [y_104], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg215_1, buf772, 25165824, grid=grid(25165824), stream=stream0)
        del arg215_1
        buf773 = reinterpret_tensor(buf748, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf748  # reuse
        # Topologically Sorted Source Nodes: [y_104], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf771, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf772, (128, 128, 1536), (196608, 1536, 1), 0), out=buf773)
        buf778 = reinterpret_tensor(buf773, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf773  # reuse
        # Topologically Sorted Source Nodes: [mask, y_104], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf778, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf779 = reinterpret_tensor(buf772, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf772  # reuse
        # Topologically Sorted Source Nodes: [y_104], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg216_1, buf779, 25165824, grid=grid(25165824), stream=stream0)
        del arg216_1
        buf780 = reinterpret_tensor(buf771, (128, 1024, 128), (131072, 128, 1), 0); del buf771  # reuse
        # Topologically Sorted Source Nodes: [y_104], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf778, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf779, (128, 1536, 128), (196608, 128, 1), 0), out=buf780)
        buf781 = buf751; del buf751  # reuse
        # Topologically Sorted Source Nodes: [contiguous_26], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf780, buf781, 16777216, grid=grid(16777216), stream=stream0)
        buf782 = reinterpret_tensor(buf768, (16384, 16384), (16384, 1), 0); del buf768  # reuse
        # Topologically Sorted Source Nodes: [y_106], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf781, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg217_1, (1024, 16384), (1, 1024), 0), out=buf782)
        del arg217_1
        # Topologically Sorted Source Nodes: [tensor_52], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf782, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_131], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf782, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf788 = reinterpret_tensor(buf732, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf732  # reuse
        # Topologically Sorted Source Nodes: [x_130, x_132, float_108, mul_401, mean_53, add_160, rsqrt_53, mul_402, output_106, output_107], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf757, buf762, buf782, arg218_1, buf788, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg218_1
        buf789 = buf760; del buf760  # reuse
        # Topologically Sorted Source Nodes: [x_133], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf788, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg219_1, (16384, 6656), (1, 16384), 0), out=buf789)
        del arg219_1
        buf790 = buf761; del buf761  # reuse
        # Topologically Sorted Source Nodes: [silu_26, mul_404], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf789, buf790, 54525952, grid=grid(54525952), stream=stream0)
        buf791 = reinterpret_tensor(buf788, (16384, 16384), (16384, 1), 0); del buf788  # reuse
        # Topologically Sorted Source Nodes: [y_107], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf790, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg220_1, (3328, 16384), (1, 3328), 0), out=buf791)
        del arg220_1
        # Topologically Sorted Source Nodes: [tensor_53], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf791, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_134], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf791, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf797 = reinterpret_tensor(buf723, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf723  # reuse
        # Topologically Sorted Source Nodes: [x_130, x_132, x_135, float_109, mul_405, mean_54, add_162, rsqrt_54, mul_406, output_108, output_109], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf757, buf762, buf782, buf791, arg221_1, buf797, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg221_1
        buf798 = buf769; del buf769  # reuse
        # Topologically Sorted Source Nodes: [linear_108], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf797, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg222_1, (16384, 1280), (1, 16384), 0), out=buf798)
        del arg222_1
        # Topologically Sorted Source Nodes: [setitem_54, setitem_55], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf798, arg0_1, arg223_1, arg224_1, 2097152, grid=grid(2097152), stream=stream0)
        buf800 = reinterpret_tensor(buf780, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf780  # reuse
        # Topologically Sorted Source Nodes: [y_108], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf798, arg2_1, arg0_1, buf800, 16777216, grid=grid(16777216), stream=stream0)
        buf801 = reinterpret_tensor(buf779, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf779  # reuse
        # Topologically Sorted Source Nodes: [y_108], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg223_1, buf801, 25165824, grid=grid(25165824), stream=stream0)
        del arg223_1
        buf802 = reinterpret_tensor(buf778, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf778  # reuse
        # Topologically Sorted Source Nodes: [y_108], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf800, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf801, (128, 128, 1536), (196608, 1536, 1), 0), out=buf802)
        buf807 = reinterpret_tensor(buf802, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf802  # reuse
        # Topologically Sorted Source Nodes: [mask, y_108], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf807, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf808 = reinterpret_tensor(buf801, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf801  # reuse
        # Topologically Sorted Source Nodes: [y_108], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg224_1, buf808, 25165824, grid=grid(25165824), stream=stream0)
        del arg224_1
        buf809 = reinterpret_tensor(buf800, (128, 1024, 128), (131072, 128, 1), 0); del buf800  # reuse
        # Topologically Sorted Source Nodes: [y_108], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf807, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf808, (128, 1536, 128), (196608, 128, 1), 0), out=buf809)
        buf810 = buf781; del buf781  # reuse
        # Topologically Sorted Source Nodes: [contiguous_27], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf809, buf810, 16777216, grid=grid(16777216), stream=stream0)
        buf811 = reinterpret_tensor(buf797, (16384, 16384), (16384, 1), 0); del buf797  # reuse
        # Topologically Sorted Source Nodes: [y_110], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf810, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg225_1, (1024, 16384), (1, 1024), 0), out=buf811)
        del arg225_1
        # Topologically Sorted Source Nodes: [tensor_54], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf811, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_136], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf811, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf816 = buf757; del buf757  # reuse
        buf818 = reinterpret_tensor(buf703, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf703  # reuse
        # Topologically Sorted Source Nodes: [x_130, x_132, x_135, x_137, float_112, mul_416, mean_55, add_166, rsqrt_55, mul_417, output_110, output_111], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf816, buf762, buf782, buf791, buf811, arg226_1, buf818, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg226_1
        buf819 = buf789; del buf789  # reuse
        # Topologically Sorted Source Nodes: [x_138], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf818, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg227_1, (16384, 6656), (1, 16384), 0), out=buf819)
        del arg227_1
        buf820 = buf790; del buf790  # reuse
        # Topologically Sorted Source Nodes: [silu_27, mul_419], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf819, buf820, 54525952, grid=grid(54525952), stream=stream0)
        buf821 = reinterpret_tensor(buf818, (16384, 16384), (16384, 1), 0); del buf818  # reuse
        # Topologically Sorted Source Nodes: [y_111], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf820, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg228_1, (3328, 16384), (1, 3328), 0), out=buf821)
        del arg228_1
        # Topologically Sorted Source Nodes: [tensor_55], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf821, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_139], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf821, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf827 = reinterpret_tensor(buf811, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf811  # reuse
        # Topologically Sorted Source Nodes: [x_140, float_113, mul_420, mean_56, add_168, rsqrt_56, mul_421, output_112, output_113], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf816, buf821, arg229_1, buf827, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg229_1
        buf828 = buf798; del buf798  # reuse
        # Topologically Sorted Source Nodes: [linear_112], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf827, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg230_1, (16384, 1280), (1, 16384), 0), out=buf828)
        del arg230_1
        # Topologically Sorted Source Nodes: [setitem_56, setitem_57], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf828, arg0_1, arg231_1, arg232_1, 2097152, grid=grid(2097152), stream=stream0)
        buf830 = reinterpret_tensor(buf809, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf809  # reuse
        # Topologically Sorted Source Nodes: [y_112], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf828, arg2_1, arg0_1, buf830, 16777216, grid=grid(16777216), stream=stream0)
        buf831 = reinterpret_tensor(buf808, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf808  # reuse
        # Topologically Sorted Source Nodes: [y_112], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg231_1, buf831, 25165824, grid=grid(25165824), stream=stream0)
        del arg231_1
        buf832 = reinterpret_tensor(buf807, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf807  # reuse
        # Topologically Sorted Source Nodes: [y_112], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf830, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf831, (128, 128, 1536), (196608, 1536, 1), 0), out=buf832)
        buf837 = reinterpret_tensor(buf832, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf832  # reuse
        # Topologically Sorted Source Nodes: [mask, y_112], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf837, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf838 = reinterpret_tensor(buf831, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf831  # reuse
        # Topologically Sorted Source Nodes: [y_112], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg232_1, buf838, 25165824, grid=grid(25165824), stream=stream0)
        del arg232_1
        buf839 = reinterpret_tensor(buf830, (128, 1024, 128), (131072, 128, 1), 0); del buf830  # reuse
        # Topologically Sorted Source Nodes: [y_112], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf837, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf838, (128, 1536, 128), (196608, 128, 1), 0), out=buf839)
        buf840 = buf810; del buf810  # reuse
        # Topologically Sorted Source Nodes: [contiguous_28], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf839, buf840, 16777216, grid=grid(16777216), stream=stream0)
        buf841 = reinterpret_tensor(buf827, (16384, 16384), (16384, 1), 0); del buf827  # reuse
        # Topologically Sorted Source Nodes: [y_114], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf840, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg233_1, (1024, 16384), (1, 1024), 0), out=buf841)
        del arg233_1
        # Topologically Sorted Source Nodes: [tensor_56], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf841, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_141], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf841, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf847 = reinterpret_tensor(buf791, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf791  # reuse
        # Topologically Sorted Source Nodes: [x_140, x_142, float_116, mul_431, mean_57, add_172, rsqrt_57, mul_432, output_114, output_115], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf816, buf821, buf841, arg234_1, buf847, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg234_1
        buf848 = buf819; del buf819  # reuse
        # Topologically Sorted Source Nodes: [x_143], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf847, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg235_1, (16384, 6656), (1, 16384), 0), out=buf848)
        del arg235_1
        buf849 = buf820; del buf820  # reuse
        # Topologically Sorted Source Nodes: [silu_28, mul_434], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf848, buf849, 54525952, grid=grid(54525952), stream=stream0)
        buf850 = reinterpret_tensor(buf847, (16384, 16384), (16384, 1), 0); del buf847  # reuse
        # Topologically Sorted Source Nodes: [y_115], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf849, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg236_1, (3328, 16384), (1, 3328), 0), out=buf850)
        del arg236_1
        # Topologically Sorted Source Nodes: [tensor_57], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf850, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_144], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf850, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf856 = reinterpret_tensor(buf782, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf782  # reuse
        # Topologically Sorted Source Nodes: [x_140, x_142, x_145, float_117, mul_435, mean_58, add_174, rsqrt_58, mul_436, output_116, output_117], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf816, buf821, buf841, buf850, arg237_1, buf856, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg237_1
        buf857 = buf828; del buf828  # reuse
        # Topologically Sorted Source Nodes: [linear_116], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf856, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg238_1, (16384, 1280), (1, 16384), 0), out=buf857)
        del arg238_1
        # Topologically Sorted Source Nodes: [setitem_58, setitem_59], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf857, arg0_1, arg239_1, arg240_1, 2097152, grid=grid(2097152), stream=stream0)
        buf859 = reinterpret_tensor(buf839, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf839  # reuse
        # Topologically Sorted Source Nodes: [y_116], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf857, arg2_1, arg0_1, buf859, 16777216, grid=grid(16777216), stream=stream0)
        buf860 = reinterpret_tensor(buf838, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf838  # reuse
        # Topologically Sorted Source Nodes: [y_116], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg239_1, buf860, 25165824, grid=grid(25165824), stream=stream0)
        del arg239_1
        buf861 = reinterpret_tensor(buf837, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf837  # reuse
        # Topologically Sorted Source Nodes: [y_116], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf859, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf860, (128, 128, 1536), (196608, 1536, 1), 0), out=buf861)
        buf866 = reinterpret_tensor(buf861, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf861  # reuse
        # Topologically Sorted Source Nodes: [mask, y_116], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf866, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf867 = reinterpret_tensor(buf860, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf860  # reuse
        # Topologically Sorted Source Nodes: [y_116], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg240_1, buf867, 25165824, grid=grid(25165824), stream=stream0)
        del arg240_1
        buf868 = reinterpret_tensor(buf859, (128, 1024, 128), (131072, 128, 1), 0); del buf859  # reuse
        # Topologically Sorted Source Nodes: [y_116], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf866, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf867, (128, 1536, 128), (196608, 128, 1), 0), out=buf868)
        buf869 = buf840; del buf840  # reuse
        # Topologically Sorted Source Nodes: [contiguous_29], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf868, buf869, 16777216, grid=grid(16777216), stream=stream0)
        buf870 = reinterpret_tensor(buf856, (16384, 16384), (16384, 1), 0); del buf856  # reuse
        # Topologically Sorted Source Nodes: [y_118], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf869, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg241_1, (1024, 16384), (1, 1024), 0), out=buf870)
        del arg241_1
        # Topologically Sorted Source Nodes: [tensor_58], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf870, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_146], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf870, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf875 = buf816; del buf816  # reuse
        buf877 = reinterpret_tensor(buf762, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf762  # reuse
        # Topologically Sorted Source Nodes: [x_140, x_142, x_145, x_147, float_120, mul_446, mean_59, add_178, rsqrt_59, mul_447, output_118, output_119], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf875, buf821, buf841, buf850, buf870, arg242_1, buf877, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg242_1
        buf878 = buf848; del buf848  # reuse
        # Topologically Sorted Source Nodes: [x_148], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf877, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg243_1, (16384, 6656), (1, 16384), 0), out=buf878)
        del arg243_1
        buf879 = buf849; del buf849  # reuse
        # Topologically Sorted Source Nodes: [silu_29, mul_449], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf878, buf879, 54525952, grid=grid(54525952), stream=stream0)
        buf880 = reinterpret_tensor(buf877, (16384, 16384), (16384, 1), 0); del buf877  # reuse
        # Topologically Sorted Source Nodes: [y_119], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf879, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg244_1, (3328, 16384), (1, 3328), 0), out=buf880)
        del arg244_1
        # Topologically Sorted Source Nodes: [tensor_59], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf880, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_149], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf880, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf886 = reinterpret_tensor(buf870, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf870  # reuse
        # Topologically Sorted Source Nodes: [x_150, float_121, mul_450, mean_60, add_180, rsqrt_60, mul_451, output_120, output_121], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf875, buf880, arg245_1, buf886, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg245_1
        buf887 = buf857; del buf857  # reuse
        # Topologically Sorted Source Nodes: [linear_120], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf886, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg246_1, (16384, 1280), (1, 16384), 0), out=buf887)
        del arg246_1
        # Topologically Sorted Source Nodes: [setitem_60, setitem_61], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf887, arg0_1, arg247_1, arg248_1, 2097152, grid=grid(2097152), stream=stream0)
        buf889 = reinterpret_tensor(buf868, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf868  # reuse
        # Topologically Sorted Source Nodes: [y_120], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf887, arg2_1, arg0_1, buf889, 16777216, grid=grid(16777216), stream=stream0)
        buf890 = reinterpret_tensor(buf867, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf867  # reuse
        # Topologically Sorted Source Nodes: [y_120], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg247_1, buf890, 25165824, grid=grid(25165824), stream=stream0)
        del arg247_1
        buf891 = reinterpret_tensor(buf866, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf866  # reuse
        # Topologically Sorted Source Nodes: [y_120], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf889, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf890, (128, 128, 1536), (196608, 1536, 1), 0), out=buf891)
        buf896 = reinterpret_tensor(buf891, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf891  # reuse
        # Topologically Sorted Source Nodes: [mask, y_120], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf896, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf897 = reinterpret_tensor(buf890, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf890  # reuse
        # Topologically Sorted Source Nodes: [y_120], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg248_1, buf897, 25165824, grid=grid(25165824), stream=stream0)
        del arg248_1
        buf898 = reinterpret_tensor(buf889, (128, 1024, 128), (131072, 128, 1), 0); del buf889  # reuse
        # Topologically Sorted Source Nodes: [y_120], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf896, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf897, (128, 1536, 128), (196608, 128, 1), 0), out=buf898)
        buf899 = buf869; del buf869  # reuse
        # Topologically Sorted Source Nodes: [contiguous_30], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf898, buf899, 16777216, grid=grid(16777216), stream=stream0)
        buf900 = reinterpret_tensor(buf886, (16384, 16384), (16384, 1), 0); del buf886  # reuse
        # Topologically Sorted Source Nodes: [y_122], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf899, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg249_1, (1024, 16384), (1, 1024), 0), out=buf900)
        del arg249_1
        # Topologically Sorted Source Nodes: [tensor_60], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf900, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_151], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf900, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf906 = reinterpret_tensor(buf850, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf850  # reuse
        # Topologically Sorted Source Nodes: [x_150, x_152, float_124, mul_461, mean_61, add_184, rsqrt_61, mul_462, output_122, output_123], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf875, buf880, buf900, arg250_1, buf906, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg250_1
        buf907 = buf878; del buf878  # reuse
        # Topologically Sorted Source Nodes: [x_153], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf906, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg251_1, (16384, 6656), (1, 16384), 0), out=buf907)
        del arg251_1
        buf908 = buf879; del buf879  # reuse
        # Topologically Sorted Source Nodes: [silu_30, mul_464], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf907, buf908, 54525952, grid=grid(54525952), stream=stream0)
        buf909 = reinterpret_tensor(buf906, (16384, 16384), (16384, 1), 0); del buf906  # reuse
        # Topologically Sorted Source Nodes: [y_123], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf908, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg252_1, (3328, 16384), (1, 3328), 0), out=buf909)
        del arg252_1
        # Topologically Sorted Source Nodes: [tensor_61], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf909, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_154], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf909, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf915 = reinterpret_tensor(buf841, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf841  # reuse
        # Topologically Sorted Source Nodes: [x_150, x_152, x_155, float_125, mul_465, mean_62, add_186, rsqrt_62, mul_466, output_124, output_125], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf875, buf880, buf900, buf909, arg253_1, buf915, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg253_1
        buf916 = buf887; del buf887  # reuse
        # Topologically Sorted Source Nodes: [linear_124], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf915, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg254_1, (16384, 1280), (1, 16384), 0), out=buf916)
        del arg254_1
        # Topologically Sorted Source Nodes: [setitem_62, setitem_63], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf916, arg0_1, arg255_1, arg256_1, 2097152, grid=grid(2097152), stream=stream0)
        buf918 = reinterpret_tensor(buf898, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf898  # reuse
        # Topologically Sorted Source Nodes: [y_124], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf916, arg2_1, arg0_1, buf918, 16777216, grid=grid(16777216), stream=stream0)
        buf919 = reinterpret_tensor(buf897, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf897  # reuse
        # Topologically Sorted Source Nodes: [y_124], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg255_1, buf919, 25165824, grid=grid(25165824), stream=stream0)
        del arg255_1
        buf920 = reinterpret_tensor(buf896, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf896  # reuse
        # Topologically Sorted Source Nodes: [y_124], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf918, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf919, (128, 128, 1536), (196608, 1536, 1), 0), out=buf920)
        buf925 = reinterpret_tensor(buf920, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf920  # reuse
        # Topologically Sorted Source Nodes: [mask, y_124], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf925, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf926 = reinterpret_tensor(buf919, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf919  # reuse
        # Topologically Sorted Source Nodes: [y_124], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg256_1, buf926, 25165824, grid=grid(25165824), stream=stream0)
        del arg256_1
        buf927 = reinterpret_tensor(buf918, (128, 1024, 128), (131072, 128, 1), 0); del buf918  # reuse
        # Topologically Sorted Source Nodes: [y_124], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf925, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf926, (128, 1536, 128), (196608, 128, 1), 0), out=buf927)
        buf928 = buf899; del buf899  # reuse
        # Topologically Sorted Source Nodes: [contiguous_31], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf927, buf928, 16777216, grid=grid(16777216), stream=stream0)
        buf929 = reinterpret_tensor(buf915, (16384, 16384), (16384, 1), 0); del buf915  # reuse
        # Topologically Sorted Source Nodes: [y_126], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf928, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg257_1, (1024, 16384), (1, 1024), 0), out=buf929)
        del arg257_1
        # Topologically Sorted Source Nodes: [tensor_62], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf929, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_156], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf929, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf934 = buf875; del buf875  # reuse
        buf936 = reinterpret_tensor(buf821, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf821  # reuse
        # Topologically Sorted Source Nodes: [x_150, x_152, x_155, x_157, float_128, mul_476, mean_63, add_190, rsqrt_63, mul_477, output_126, output_127], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf934, buf880, buf900, buf909, buf929, arg258_1, buf936, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg258_1
        buf937 = buf907; del buf907  # reuse
        # Topologically Sorted Source Nodes: [x_158], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf936, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg259_1, (16384, 6656), (1, 16384), 0), out=buf937)
        del arg259_1
        buf938 = buf908; del buf908  # reuse
        # Topologically Sorted Source Nodes: [silu_31, mul_479], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf937, buf938, 54525952, grid=grid(54525952), stream=stream0)
        buf939 = reinterpret_tensor(buf936, (16384, 16384), (16384, 1), 0); del buf936  # reuse
        # Topologically Sorted Source Nodes: [y_127], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf938, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg260_1, (3328, 16384), (1, 3328), 0), out=buf939)
        del arg260_1
        # Topologically Sorted Source Nodes: [tensor_63], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf939, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_159], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf939, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf945 = reinterpret_tensor(buf929, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf929  # reuse
        # Topologically Sorted Source Nodes: [x_160, float_129, mul_480, mean_64, add_192, rsqrt_64, mul_481, output_128, output_129], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf934, buf939, arg261_1, buf945, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg261_1
        buf946 = buf916; del buf916  # reuse
        # Topologically Sorted Source Nodes: [linear_128], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf945, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg262_1, (16384, 1280), (1, 16384), 0), out=buf946)
        del arg262_1
        # Topologically Sorted Source Nodes: [setitem_64, setitem_65], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf946, arg0_1, arg263_1, arg264_1, 2097152, grid=grid(2097152), stream=stream0)
        buf948 = reinterpret_tensor(buf927, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf927  # reuse
        # Topologically Sorted Source Nodes: [y_128], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf946, arg2_1, arg0_1, buf948, 16777216, grid=grid(16777216), stream=stream0)
        buf949 = reinterpret_tensor(buf926, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf926  # reuse
        # Topologically Sorted Source Nodes: [y_128], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg263_1, buf949, 25165824, grid=grid(25165824), stream=stream0)
        del arg263_1
        buf950 = reinterpret_tensor(buf925, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf925  # reuse
        # Topologically Sorted Source Nodes: [y_128], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf948, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf949, (128, 128, 1536), (196608, 1536, 1), 0), out=buf950)
        buf955 = reinterpret_tensor(buf950, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf950  # reuse
        # Topologically Sorted Source Nodes: [mask, y_128], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf955, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf956 = reinterpret_tensor(buf949, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf949  # reuse
        # Topologically Sorted Source Nodes: [y_128], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg264_1, buf956, 25165824, grid=grid(25165824), stream=stream0)
        del arg264_1
        buf957 = reinterpret_tensor(buf948, (128, 1024, 128), (131072, 128, 1), 0); del buf948  # reuse
        # Topologically Sorted Source Nodes: [y_128], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf955, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf956, (128, 1536, 128), (196608, 128, 1), 0), out=buf957)
        buf958 = buf928; del buf928  # reuse
        # Topologically Sorted Source Nodes: [contiguous_32], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf957, buf958, 16777216, grid=grid(16777216), stream=stream0)
        buf959 = reinterpret_tensor(buf945, (16384, 16384), (16384, 1), 0); del buf945  # reuse
        # Topologically Sorted Source Nodes: [y_130], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf958, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg265_1, (1024, 16384), (1, 1024), 0), out=buf959)
        del arg265_1
        # Topologically Sorted Source Nodes: [tensor_64], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf959, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_161], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf959, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf965 = reinterpret_tensor(buf909, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf909  # reuse
        # Topologically Sorted Source Nodes: [x_160, x_162, float_132, mul_491, mean_65, add_196, rsqrt_65, mul_492, output_130, output_131], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf934, buf939, buf959, arg266_1, buf965, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg266_1
        buf966 = buf937; del buf937  # reuse
        # Topologically Sorted Source Nodes: [x_163], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf965, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg267_1, (16384, 6656), (1, 16384), 0), out=buf966)
        del arg267_1
        buf967 = buf938; del buf938  # reuse
        # Topologically Sorted Source Nodes: [silu_32, mul_494], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf966, buf967, 54525952, grid=grid(54525952), stream=stream0)
        buf968 = reinterpret_tensor(buf965, (16384, 16384), (16384, 1), 0); del buf965  # reuse
        # Topologically Sorted Source Nodes: [y_131], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf967, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg268_1, (3328, 16384), (1, 3328), 0), out=buf968)
        del arg268_1
        # Topologically Sorted Source Nodes: [tensor_65], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf968, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_164], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf968, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf974 = reinterpret_tensor(buf900, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf900  # reuse
        # Topologically Sorted Source Nodes: [x_160, x_162, x_165, float_133, mul_495, mean_66, add_198, rsqrt_66, mul_496, output_132, output_133], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf934, buf939, buf959, buf968, arg269_1, buf974, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg269_1
        buf975 = buf946; del buf946  # reuse
        # Topologically Sorted Source Nodes: [linear_132], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf974, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg270_1, (16384, 1280), (1, 16384), 0), out=buf975)
        del arg270_1
        # Topologically Sorted Source Nodes: [setitem_66, setitem_67], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf975, arg0_1, arg271_1, arg272_1, 2097152, grid=grid(2097152), stream=stream0)
        buf977 = reinterpret_tensor(buf957, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf957  # reuse
        # Topologically Sorted Source Nodes: [y_132], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf975, arg2_1, arg0_1, buf977, 16777216, grid=grid(16777216), stream=stream0)
        buf978 = reinterpret_tensor(buf956, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf956  # reuse
        # Topologically Sorted Source Nodes: [y_132], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg271_1, buf978, 25165824, grid=grid(25165824), stream=stream0)
        del arg271_1
        buf979 = reinterpret_tensor(buf955, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf955  # reuse
        # Topologically Sorted Source Nodes: [y_132], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf977, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf978, (128, 128, 1536), (196608, 1536, 1), 0), out=buf979)
        buf984 = reinterpret_tensor(buf979, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf979  # reuse
        # Topologically Sorted Source Nodes: [mask, y_132], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf984, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf985 = reinterpret_tensor(buf978, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf978  # reuse
        # Topologically Sorted Source Nodes: [y_132], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg272_1, buf985, 25165824, grid=grid(25165824), stream=stream0)
        del arg272_1
        buf986 = reinterpret_tensor(buf977, (128, 1024, 128), (131072, 128, 1), 0); del buf977  # reuse
        # Topologically Sorted Source Nodes: [y_132], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf984, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf985, (128, 1536, 128), (196608, 128, 1), 0), out=buf986)
        buf987 = buf958; del buf958  # reuse
        # Topologically Sorted Source Nodes: [contiguous_33], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf986, buf987, 16777216, grid=grid(16777216), stream=stream0)
        buf988 = reinterpret_tensor(buf974, (16384, 16384), (16384, 1), 0); del buf974  # reuse
        # Topologically Sorted Source Nodes: [y_134], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf987, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg273_1, (1024, 16384), (1, 1024), 0), out=buf988)
        del arg273_1
        # Topologically Sorted Source Nodes: [tensor_66], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf988, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_166], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf988, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf993 = buf934; del buf934  # reuse
        buf995 = reinterpret_tensor(buf880, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf880  # reuse
        # Topologically Sorted Source Nodes: [x_160, x_162, x_165, x_167, float_136, mul_506, mean_67, add_202, rsqrt_67, mul_507, output_134, output_135], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf993, buf939, buf959, buf968, buf988, arg274_1, buf995, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg274_1
        buf996 = buf966; del buf966  # reuse
        # Topologically Sorted Source Nodes: [x_168], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf995, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg275_1, (16384, 6656), (1, 16384), 0), out=buf996)
        del arg275_1
        buf997 = buf967; del buf967  # reuse
        # Topologically Sorted Source Nodes: [silu_33, mul_509], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf996, buf997, 54525952, grid=grid(54525952), stream=stream0)
        buf998 = reinterpret_tensor(buf995, (16384, 16384), (16384, 1), 0); del buf995  # reuse
        # Topologically Sorted Source Nodes: [y_135], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf997, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg276_1, (3328, 16384), (1, 3328), 0), out=buf998)
        del arg276_1
        # Topologically Sorted Source Nodes: [tensor_67], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf998, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_169], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf998, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1004 = reinterpret_tensor(buf988, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf988  # reuse
        # Topologically Sorted Source Nodes: [x_170, float_137, mul_510, mean_68, add_204, rsqrt_68, mul_511, output_136, output_137], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf993, buf998, arg277_1, buf1004, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg277_1
        buf1005 = buf975; del buf975  # reuse
        # Topologically Sorted Source Nodes: [linear_136], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1004, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg278_1, (16384, 1280), (1, 16384), 0), out=buf1005)
        del arg278_1
        # Topologically Sorted Source Nodes: [setitem_68, setitem_69], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1005, arg0_1, arg279_1, arg280_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1007 = reinterpret_tensor(buf986, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf986  # reuse
        # Topologically Sorted Source Nodes: [y_136], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1005, arg2_1, arg0_1, buf1007, 16777216, grid=grid(16777216), stream=stream0)
        buf1008 = reinterpret_tensor(buf985, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf985  # reuse
        # Topologically Sorted Source Nodes: [y_136], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg279_1, buf1008, 25165824, grid=grid(25165824), stream=stream0)
        del arg279_1
        buf1009 = reinterpret_tensor(buf984, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf984  # reuse
        # Topologically Sorted Source Nodes: [y_136], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1007, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1008, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1009)
        buf1014 = reinterpret_tensor(buf1009, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1009  # reuse
        # Topologically Sorted Source Nodes: [mask, y_136], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1014, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1015 = reinterpret_tensor(buf1008, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1008  # reuse
        # Topologically Sorted Source Nodes: [y_136], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg280_1, buf1015, 25165824, grid=grid(25165824), stream=stream0)
        del arg280_1
        buf1016 = reinterpret_tensor(buf1007, (128, 1024, 128), (131072, 128, 1), 0); del buf1007  # reuse
        # Topologically Sorted Source Nodes: [y_136], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1014, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1015, (128, 1536, 128), (196608, 128, 1), 0), out=buf1016)
        buf1017 = buf987; del buf987  # reuse
        # Topologically Sorted Source Nodes: [contiguous_34], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1016, buf1017, 16777216, grid=grid(16777216), stream=stream0)
        buf1018 = reinterpret_tensor(buf1004, (16384, 16384), (16384, 1), 0); del buf1004  # reuse
        # Topologically Sorted Source Nodes: [y_138], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1017, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg281_1, (1024, 16384), (1, 1024), 0), out=buf1018)
        del arg281_1
        # Topologically Sorted Source Nodes: [tensor_68], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1018, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_171], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1018, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1024 = reinterpret_tensor(buf968, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf968  # reuse
        # Topologically Sorted Source Nodes: [x_170, x_172, float_140, mul_521, mean_69, add_208, rsqrt_69, mul_522, output_138, output_139], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf993, buf998, buf1018, arg282_1, buf1024, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg282_1
        buf1025 = buf996; del buf996  # reuse
        # Topologically Sorted Source Nodes: [x_173], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1024, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg283_1, (16384, 6656), (1, 16384), 0), out=buf1025)
        del arg283_1
        buf1026 = buf997; del buf997  # reuse
        # Topologically Sorted Source Nodes: [silu_34, mul_524], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1025, buf1026, 54525952, grid=grid(54525952), stream=stream0)
        buf1027 = reinterpret_tensor(buf1024, (16384, 16384), (16384, 1), 0); del buf1024  # reuse
        # Topologically Sorted Source Nodes: [y_139], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1026, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg284_1, (3328, 16384), (1, 3328), 0), out=buf1027)
        del arg284_1
        # Topologically Sorted Source Nodes: [tensor_69], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1027, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_174], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1027, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1033 = reinterpret_tensor(buf959, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf959  # reuse
        # Topologically Sorted Source Nodes: [x_170, x_172, x_175, float_141, mul_525, mean_70, add_210, rsqrt_70, mul_526, output_140, output_141], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf993, buf998, buf1018, buf1027, arg285_1, buf1033, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg285_1
        buf1034 = buf1005; del buf1005  # reuse
        # Topologically Sorted Source Nodes: [linear_140], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1033, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg286_1, (16384, 1280), (1, 16384), 0), out=buf1034)
        del arg286_1
        # Topologically Sorted Source Nodes: [setitem_70, setitem_71], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1034, arg0_1, arg287_1, arg288_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1036 = reinterpret_tensor(buf1016, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1016  # reuse
        # Topologically Sorted Source Nodes: [y_140], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1034, arg2_1, arg0_1, buf1036, 16777216, grid=grid(16777216), stream=stream0)
        buf1037 = reinterpret_tensor(buf1015, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1015  # reuse
        # Topologically Sorted Source Nodes: [y_140], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg287_1, buf1037, 25165824, grid=grid(25165824), stream=stream0)
        del arg287_1
        buf1038 = reinterpret_tensor(buf1014, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1014  # reuse
        # Topologically Sorted Source Nodes: [y_140], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1036, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1037, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1038)
        buf1043 = reinterpret_tensor(buf1038, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1038  # reuse
        # Topologically Sorted Source Nodes: [mask, y_140], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1043, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1044 = reinterpret_tensor(buf1037, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1037  # reuse
        # Topologically Sorted Source Nodes: [y_140], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg288_1, buf1044, 25165824, grid=grid(25165824), stream=stream0)
        del arg288_1
        buf1045 = reinterpret_tensor(buf1036, (128, 1024, 128), (131072, 128, 1), 0); del buf1036  # reuse
        # Topologically Sorted Source Nodes: [y_140], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1043, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1044, (128, 1536, 128), (196608, 128, 1), 0), out=buf1045)
        buf1046 = buf1017; del buf1017  # reuse
        # Topologically Sorted Source Nodes: [contiguous_35], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1045, buf1046, 16777216, grid=grid(16777216), stream=stream0)
        buf1047 = reinterpret_tensor(buf1033, (16384, 16384), (16384, 1), 0); del buf1033  # reuse
        # Topologically Sorted Source Nodes: [y_142], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1046, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg289_1, (1024, 16384), (1, 1024), 0), out=buf1047)
        del arg289_1
        # Topologically Sorted Source Nodes: [tensor_70], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1047, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_176], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1047, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1052 = buf993; del buf993  # reuse
        buf1054 = reinterpret_tensor(buf939, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf939  # reuse
        # Topologically Sorted Source Nodes: [x_170, x_172, x_175, x_177, float_144, mul_536, mean_71, add_214, rsqrt_71, mul_537, output_142, output_143], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1052, buf998, buf1018, buf1027, buf1047, arg290_1, buf1054, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg290_1
        buf1055 = buf1025; del buf1025  # reuse
        # Topologically Sorted Source Nodes: [x_178], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1054, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg291_1, (16384, 6656), (1, 16384), 0), out=buf1055)
        del arg291_1
        buf1056 = buf1026; del buf1026  # reuse
        # Topologically Sorted Source Nodes: [silu_35, mul_539], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1055, buf1056, 54525952, grid=grid(54525952), stream=stream0)
        buf1057 = reinterpret_tensor(buf1054, (16384, 16384), (16384, 1), 0); del buf1054  # reuse
        # Topologically Sorted Source Nodes: [y_143], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1056, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg292_1, (3328, 16384), (1, 3328), 0), out=buf1057)
        del arg292_1
        # Topologically Sorted Source Nodes: [tensor_71], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1057, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_179], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1057, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1063 = reinterpret_tensor(buf1047, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1047  # reuse
        # Topologically Sorted Source Nodes: [x_180, float_145, mul_540, mean_72, add_216, rsqrt_72, mul_541, output_144, output_145], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1052, buf1057, arg293_1, buf1063, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg293_1
        buf1064 = buf1034; del buf1034  # reuse
        # Topologically Sorted Source Nodes: [linear_144], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1063, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg294_1, (16384, 1280), (1, 16384), 0), out=buf1064)
        del arg294_1
        # Topologically Sorted Source Nodes: [setitem_72, setitem_73], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1064, arg0_1, arg295_1, arg296_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1066 = reinterpret_tensor(buf1045, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1045  # reuse
        # Topologically Sorted Source Nodes: [y_144], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1064, arg2_1, arg0_1, buf1066, 16777216, grid=grid(16777216), stream=stream0)
        buf1067 = reinterpret_tensor(buf1044, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1044  # reuse
        # Topologically Sorted Source Nodes: [y_144], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg295_1, buf1067, 25165824, grid=grid(25165824), stream=stream0)
        del arg295_1
        buf1068 = reinterpret_tensor(buf1043, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1043  # reuse
        # Topologically Sorted Source Nodes: [y_144], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1066, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1067, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1068)
        buf1073 = reinterpret_tensor(buf1068, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1068  # reuse
        # Topologically Sorted Source Nodes: [mask, y_144], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1073, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1074 = reinterpret_tensor(buf1067, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1067  # reuse
        # Topologically Sorted Source Nodes: [y_144], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg296_1, buf1074, 25165824, grid=grid(25165824), stream=stream0)
        del arg296_1
        buf1075 = reinterpret_tensor(buf1066, (128, 1024, 128), (131072, 128, 1), 0); del buf1066  # reuse
        # Topologically Sorted Source Nodes: [y_144], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1073, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1074, (128, 1536, 128), (196608, 128, 1), 0), out=buf1075)
        buf1076 = buf1046; del buf1046  # reuse
        # Topologically Sorted Source Nodes: [contiguous_36], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1075, buf1076, 16777216, grid=grid(16777216), stream=stream0)
        buf1077 = reinterpret_tensor(buf1063, (16384, 16384), (16384, 1), 0); del buf1063  # reuse
        # Topologically Sorted Source Nodes: [y_146], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1076, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg297_1, (1024, 16384), (1, 1024), 0), out=buf1077)
        del arg297_1
        # Topologically Sorted Source Nodes: [tensor_72], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1077, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_181], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1077, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1083 = reinterpret_tensor(buf998, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf998  # reuse
        # Topologically Sorted Source Nodes: [x_180, x_182, float_148, mul_551, mean_73, add_220, rsqrt_73, mul_552, output_146, output_147], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1052, buf1057, buf1077, arg298_1, buf1083, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg298_1
        buf1084 = buf1055; del buf1055  # reuse
        # Topologically Sorted Source Nodes: [x_183], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1083, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg299_1, (16384, 6656), (1, 16384), 0), out=buf1084)
        del arg299_1
        buf1085 = buf1056; del buf1056  # reuse
        # Topologically Sorted Source Nodes: [silu_36, mul_554], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1084, buf1085, 54525952, grid=grid(54525952), stream=stream0)
        buf1086 = reinterpret_tensor(buf1083, (16384, 16384), (16384, 1), 0); del buf1083  # reuse
        # Topologically Sorted Source Nodes: [y_147], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1085, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg300_1, (3328, 16384), (1, 3328), 0), out=buf1086)
        del arg300_1
        # Topologically Sorted Source Nodes: [tensor_73], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1086, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_184], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1086, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1092 = reinterpret_tensor(buf1027, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1027  # reuse
        # Topologically Sorted Source Nodes: [x_180, x_182, x_185, float_149, mul_555, mean_74, add_222, rsqrt_74, mul_556, output_148, output_149], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1052, buf1057, buf1077, buf1086, arg301_1, buf1092, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg301_1
        buf1093 = buf1064; del buf1064  # reuse
        # Topologically Sorted Source Nodes: [linear_148], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1092, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg302_1, (16384, 1280), (1, 16384), 0), out=buf1093)
        del arg302_1
        # Topologically Sorted Source Nodes: [setitem_74, setitem_75], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1093, arg0_1, arg303_1, arg304_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1095 = reinterpret_tensor(buf1075, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1075  # reuse
        # Topologically Sorted Source Nodes: [y_148], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1093, arg2_1, arg0_1, buf1095, 16777216, grid=grid(16777216), stream=stream0)
        buf1096 = reinterpret_tensor(buf1074, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1074  # reuse
        # Topologically Sorted Source Nodes: [y_148], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg303_1, buf1096, 25165824, grid=grid(25165824), stream=stream0)
        del arg303_1
        buf1097 = reinterpret_tensor(buf1073, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1073  # reuse
        # Topologically Sorted Source Nodes: [y_148], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1095, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1096, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1097)
        buf1102 = reinterpret_tensor(buf1097, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1097  # reuse
        # Topologically Sorted Source Nodes: [mask, y_148], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1102, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1103 = reinterpret_tensor(buf1096, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1096  # reuse
        # Topologically Sorted Source Nodes: [y_148], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg304_1, buf1103, 25165824, grid=grid(25165824), stream=stream0)
        del arg304_1
        buf1104 = reinterpret_tensor(buf1095, (128, 1024, 128), (131072, 128, 1), 0); del buf1095  # reuse
        # Topologically Sorted Source Nodes: [y_148], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1102, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1103, (128, 1536, 128), (196608, 128, 1), 0), out=buf1104)
        buf1105 = buf1076; del buf1076  # reuse
        # Topologically Sorted Source Nodes: [contiguous_37], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1104, buf1105, 16777216, grid=grid(16777216), stream=stream0)
        buf1106 = reinterpret_tensor(buf1092, (16384, 16384), (16384, 1), 0); del buf1092  # reuse
        # Topologically Sorted Source Nodes: [y_150], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1105, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg305_1, (1024, 16384), (1, 1024), 0), out=buf1106)
        del arg305_1
        # Topologically Sorted Source Nodes: [tensor_74], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1106, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_186], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1106, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1111 = buf1052; del buf1052  # reuse
        buf1113 = reinterpret_tensor(buf1018, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1018  # reuse
        # Topologically Sorted Source Nodes: [x_180, x_182, x_185, x_187, float_152, mul_566, mean_75, add_226, rsqrt_75, mul_567, output_150, output_151], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1111, buf1057, buf1077, buf1086, buf1106, arg306_1, buf1113, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg306_1
        buf1114 = buf1084; del buf1084  # reuse
        # Topologically Sorted Source Nodes: [x_188], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1113, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg307_1, (16384, 6656), (1, 16384), 0), out=buf1114)
        del arg307_1
        buf1115 = buf1085; del buf1085  # reuse
        # Topologically Sorted Source Nodes: [silu_37, mul_569], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1114, buf1115, 54525952, grid=grid(54525952), stream=stream0)
        buf1116 = reinterpret_tensor(buf1113, (16384, 16384), (16384, 1), 0); del buf1113  # reuse
        # Topologically Sorted Source Nodes: [y_151], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1115, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg308_1, (3328, 16384), (1, 3328), 0), out=buf1116)
        del arg308_1
        # Topologically Sorted Source Nodes: [tensor_75], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1116, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_189], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1116, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1122 = reinterpret_tensor(buf1106, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1106  # reuse
        # Topologically Sorted Source Nodes: [x_190, float_153, mul_570, mean_76, add_228, rsqrt_76, mul_571, output_152, output_153], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1111, buf1116, arg309_1, buf1122, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg309_1
        buf1123 = buf1093; del buf1093  # reuse
        # Topologically Sorted Source Nodes: [linear_152], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1122, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg310_1, (16384, 1280), (1, 16384), 0), out=buf1123)
        del arg310_1
        # Topologically Sorted Source Nodes: [setitem_76, setitem_77], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1123, arg0_1, arg311_1, arg312_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1125 = reinterpret_tensor(buf1104, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1104  # reuse
        # Topologically Sorted Source Nodes: [y_152], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1123, arg2_1, arg0_1, buf1125, 16777216, grid=grid(16777216), stream=stream0)
        buf1126 = reinterpret_tensor(buf1103, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1103  # reuse
        # Topologically Sorted Source Nodes: [y_152], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg311_1, buf1126, 25165824, grid=grid(25165824), stream=stream0)
        del arg311_1
        buf1127 = reinterpret_tensor(buf1102, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1102  # reuse
        # Topologically Sorted Source Nodes: [y_152], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1125, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1126, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1127)
        buf1132 = reinterpret_tensor(buf1127, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1127  # reuse
        # Topologically Sorted Source Nodes: [mask, y_152], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1132, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1133 = reinterpret_tensor(buf1126, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1126  # reuse
        # Topologically Sorted Source Nodes: [y_152], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg312_1, buf1133, 25165824, grid=grid(25165824), stream=stream0)
        del arg312_1
        buf1134 = reinterpret_tensor(buf1125, (128, 1024, 128), (131072, 128, 1), 0); del buf1125  # reuse
        # Topologically Sorted Source Nodes: [y_152], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1132, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1133, (128, 1536, 128), (196608, 128, 1), 0), out=buf1134)
        buf1135 = buf1105; del buf1105  # reuse
        # Topologically Sorted Source Nodes: [contiguous_38], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1134, buf1135, 16777216, grid=grid(16777216), stream=stream0)
        buf1136 = reinterpret_tensor(buf1122, (16384, 16384), (16384, 1), 0); del buf1122  # reuse
        # Topologically Sorted Source Nodes: [y_154], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1135, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg313_1, (1024, 16384), (1, 1024), 0), out=buf1136)
        del arg313_1
        # Topologically Sorted Source Nodes: [tensor_76], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1136, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_191], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1136, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1142 = reinterpret_tensor(buf1086, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1086  # reuse
        # Topologically Sorted Source Nodes: [x_190, x_192, float_156, mul_581, mean_77, add_232, rsqrt_77, mul_582, output_154, output_155], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1111, buf1116, buf1136, arg314_1, buf1142, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg314_1
        buf1143 = buf1114; del buf1114  # reuse
        # Topologically Sorted Source Nodes: [x_193], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1142, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg315_1, (16384, 6656), (1, 16384), 0), out=buf1143)
        del arg315_1
        buf1144 = buf1115; del buf1115  # reuse
        # Topologically Sorted Source Nodes: [silu_38, mul_584], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1143, buf1144, 54525952, grid=grid(54525952), stream=stream0)
        buf1145 = reinterpret_tensor(buf1142, (16384, 16384), (16384, 1), 0); del buf1142  # reuse
        # Topologically Sorted Source Nodes: [y_155], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1144, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg316_1, (3328, 16384), (1, 3328), 0), out=buf1145)
        del arg316_1
        # Topologically Sorted Source Nodes: [tensor_77], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1145, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_194], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1145, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1151 = reinterpret_tensor(buf1077, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1077  # reuse
        # Topologically Sorted Source Nodes: [x_190, x_192, x_195, float_157, mul_585, mean_78, add_234, rsqrt_78, mul_586, output_156, output_157], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1111, buf1116, buf1136, buf1145, arg317_1, buf1151, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg317_1
        buf1152 = buf1123; del buf1123  # reuse
        # Topologically Sorted Source Nodes: [linear_156], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1151, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg318_1, (16384, 1280), (1, 16384), 0), out=buf1152)
        del arg318_1
        # Topologically Sorted Source Nodes: [setitem_78, setitem_79], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1152, arg0_1, arg319_1, arg320_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1154 = reinterpret_tensor(buf1134, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1134  # reuse
        # Topologically Sorted Source Nodes: [y_156], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1152, arg2_1, arg0_1, buf1154, 16777216, grid=grid(16777216), stream=stream0)
        buf1155 = reinterpret_tensor(buf1133, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1133  # reuse
        # Topologically Sorted Source Nodes: [y_156], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg319_1, buf1155, 25165824, grid=grid(25165824), stream=stream0)
        del arg319_1
        buf1156 = reinterpret_tensor(buf1132, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1132  # reuse
        # Topologically Sorted Source Nodes: [y_156], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1154, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1155, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1156)
        buf1161 = reinterpret_tensor(buf1156, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1156  # reuse
        # Topologically Sorted Source Nodes: [mask, y_156], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1161, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1162 = reinterpret_tensor(buf1155, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1155  # reuse
        # Topologically Sorted Source Nodes: [y_156], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg320_1, buf1162, 25165824, grid=grid(25165824), stream=stream0)
        del arg320_1
        buf1163 = reinterpret_tensor(buf1154, (128, 1024, 128), (131072, 128, 1), 0); del buf1154  # reuse
        # Topologically Sorted Source Nodes: [y_156], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1161, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1162, (128, 1536, 128), (196608, 128, 1), 0), out=buf1163)
        buf1164 = buf1135; del buf1135  # reuse
        # Topologically Sorted Source Nodes: [contiguous_39], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1163, buf1164, 16777216, grid=grid(16777216), stream=stream0)
        buf1165 = reinterpret_tensor(buf1151, (16384, 16384), (16384, 1), 0); del buf1151  # reuse
        # Topologically Sorted Source Nodes: [y_158], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1164, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg321_1, (1024, 16384), (1, 1024), 0), out=buf1165)
        del arg321_1
        # Topologically Sorted Source Nodes: [tensor_78], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1165, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_196], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1165, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1170 = buf1111; del buf1111  # reuse
        buf1172 = reinterpret_tensor(buf1057, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1057  # reuse
        # Topologically Sorted Source Nodes: [x_190, x_192, x_195, x_197, float_160, mul_596, mean_79, add_238, rsqrt_79, mul_597, output_158, output_159], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1170, buf1116, buf1136, buf1145, buf1165, arg322_1, buf1172, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg322_1
        buf1173 = buf1143; del buf1143  # reuse
        # Topologically Sorted Source Nodes: [x_198], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1172, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg323_1, (16384, 6656), (1, 16384), 0), out=buf1173)
        del arg323_1
        buf1174 = buf1144; del buf1144  # reuse
        # Topologically Sorted Source Nodes: [silu_39, mul_599], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1173, buf1174, 54525952, grid=grid(54525952), stream=stream0)
        buf1175 = reinterpret_tensor(buf1172, (16384, 16384), (16384, 1), 0); del buf1172  # reuse
        # Topologically Sorted Source Nodes: [y_159], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1174, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg324_1, (3328, 16384), (1, 3328), 0), out=buf1175)
        del arg324_1
        # Topologically Sorted Source Nodes: [tensor_79], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1175, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_199], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1175, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1181 = reinterpret_tensor(buf1165, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1165  # reuse
        # Topologically Sorted Source Nodes: [x_200, float_161, mul_600, mean_80, add_240, rsqrt_80, mul_601, output_160, output_161], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1170, buf1175, arg325_1, buf1181, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg325_1
        buf1182 = buf1152; del buf1152  # reuse
        # Topologically Sorted Source Nodes: [linear_160], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1181, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg326_1, (16384, 1280), (1, 16384), 0), out=buf1182)
        del arg326_1
        # Topologically Sorted Source Nodes: [setitem_80, setitem_81], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1182, arg0_1, arg327_1, arg328_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1184 = reinterpret_tensor(buf1163, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1163  # reuse
        # Topologically Sorted Source Nodes: [y_160], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1182, arg2_1, arg0_1, buf1184, 16777216, grid=grid(16777216), stream=stream0)
        buf1185 = reinterpret_tensor(buf1162, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1162  # reuse
        # Topologically Sorted Source Nodes: [y_160], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg327_1, buf1185, 25165824, grid=grid(25165824), stream=stream0)
        del arg327_1
        buf1186 = reinterpret_tensor(buf1161, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1161  # reuse
        # Topologically Sorted Source Nodes: [y_160], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1184, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1185, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1186)
        buf1191 = reinterpret_tensor(buf1186, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1186  # reuse
        # Topologically Sorted Source Nodes: [mask, y_160], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1191, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1192 = reinterpret_tensor(buf1185, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1185  # reuse
        # Topologically Sorted Source Nodes: [y_160], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg328_1, buf1192, 25165824, grid=grid(25165824), stream=stream0)
        del arg328_1
        buf1193 = reinterpret_tensor(buf1184, (128, 1024, 128), (131072, 128, 1), 0); del buf1184  # reuse
        # Topologically Sorted Source Nodes: [y_160], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1191, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1192, (128, 1536, 128), (196608, 128, 1), 0), out=buf1193)
        buf1194 = buf1164; del buf1164  # reuse
        # Topologically Sorted Source Nodes: [contiguous_40], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1193, buf1194, 16777216, grid=grid(16777216), stream=stream0)
        buf1195 = reinterpret_tensor(buf1181, (16384, 16384), (16384, 1), 0); del buf1181  # reuse
        # Topologically Sorted Source Nodes: [y_162], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1194, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg329_1, (1024, 16384), (1, 1024), 0), out=buf1195)
        del arg329_1
        # Topologically Sorted Source Nodes: [tensor_80], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1195, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_201], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1195, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1201 = reinterpret_tensor(buf1145, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1145  # reuse
        # Topologically Sorted Source Nodes: [x_200, x_202, float_164, mul_611, mean_81, add_244, rsqrt_81, mul_612, output_162, output_163], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1170, buf1175, buf1195, arg330_1, buf1201, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg330_1
        buf1202 = buf1173; del buf1173  # reuse
        # Topologically Sorted Source Nodes: [x_203], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1201, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg331_1, (16384, 6656), (1, 16384), 0), out=buf1202)
        del arg331_1
        buf1203 = buf1174; del buf1174  # reuse
        # Topologically Sorted Source Nodes: [silu_40, mul_614], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1202, buf1203, 54525952, grid=grid(54525952), stream=stream0)
        buf1204 = reinterpret_tensor(buf1201, (16384, 16384), (16384, 1), 0); del buf1201  # reuse
        # Topologically Sorted Source Nodes: [y_163], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1203, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg332_1, (3328, 16384), (1, 3328), 0), out=buf1204)
        del arg332_1
        # Topologically Sorted Source Nodes: [tensor_81], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1204, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_204], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1204, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1210 = reinterpret_tensor(buf1136, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1136  # reuse
        # Topologically Sorted Source Nodes: [x_200, x_202, x_205, float_165, mul_615, mean_82, add_246, rsqrt_82, mul_616, output_164, output_165], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1170, buf1175, buf1195, buf1204, arg333_1, buf1210, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg333_1
        buf1211 = buf1182; del buf1182  # reuse
        # Topologically Sorted Source Nodes: [linear_164], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1210, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg334_1, (16384, 1280), (1, 16384), 0), out=buf1211)
        del arg334_1
        # Topologically Sorted Source Nodes: [setitem_82, setitem_83], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1211, arg0_1, arg335_1, arg336_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1213 = reinterpret_tensor(buf1193, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1193  # reuse
        # Topologically Sorted Source Nodes: [y_164], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1211, arg2_1, arg0_1, buf1213, 16777216, grid=grid(16777216), stream=stream0)
        buf1214 = reinterpret_tensor(buf1192, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1192  # reuse
        # Topologically Sorted Source Nodes: [y_164], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg335_1, buf1214, 25165824, grid=grid(25165824), stream=stream0)
        del arg335_1
        buf1215 = reinterpret_tensor(buf1191, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1191  # reuse
        # Topologically Sorted Source Nodes: [y_164], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1213, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1214, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1215)
        buf1220 = reinterpret_tensor(buf1215, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1215  # reuse
        # Topologically Sorted Source Nodes: [mask, y_164], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1220, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1221 = reinterpret_tensor(buf1214, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1214  # reuse
        # Topologically Sorted Source Nodes: [y_164], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg336_1, buf1221, 25165824, grid=grid(25165824), stream=stream0)
        del arg336_1
        buf1222 = reinterpret_tensor(buf1213, (128, 1024, 128), (131072, 128, 1), 0); del buf1213  # reuse
        # Topologically Sorted Source Nodes: [y_164], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1220, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1221, (128, 1536, 128), (196608, 128, 1), 0), out=buf1222)
        buf1223 = buf1194; del buf1194  # reuse
        # Topologically Sorted Source Nodes: [contiguous_41], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1222, buf1223, 16777216, grid=grid(16777216), stream=stream0)
        buf1224 = reinterpret_tensor(buf1210, (16384, 16384), (16384, 1), 0); del buf1210  # reuse
        # Topologically Sorted Source Nodes: [y_166], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1223, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg337_1, (1024, 16384), (1, 1024), 0), out=buf1224)
        del arg337_1
        # Topologically Sorted Source Nodes: [tensor_82], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1224, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_206], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1224, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1229 = buf1170; del buf1170  # reuse
        buf1231 = reinterpret_tensor(buf1116, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1116  # reuse
        # Topologically Sorted Source Nodes: [x_200, x_202, x_205, x_207, float_168, mul_626, mean_83, add_250, rsqrt_83, mul_627, output_166, output_167], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1229, buf1175, buf1195, buf1204, buf1224, arg338_1, buf1231, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg338_1
        buf1232 = buf1202; del buf1202  # reuse
        # Topologically Sorted Source Nodes: [x_208], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1231, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg339_1, (16384, 6656), (1, 16384), 0), out=buf1232)
        del arg339_1
        buf1233 = buf1203; del buf1203  # reuse
        # Topologically Sorted Source Nodes: [silu_41, mul_629], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1232, buf1233, 54525952, grid=grid(54525952), stream=stream0)
        buf1234 = reinterpret_tensor(buf1231, (16384, 16384), (16384, 1), 0); del buf1231  # reuse
        # Topologically Sorted Source Nodes: [y_167], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1233, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg340_1, (3328, 16384), (1, 3328), 0), out=buf1234)
        del arg340_1
        # Topologically Sorted Source Nodes: [tensor_83], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1234, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_209], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1234, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1240 = reinterpret_tensor(buf1224, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1224  # reuse
        # Topologically Sorted Source Nodes: [x_210, float_169, mul_630, mean_84, add_252, rsqrt_84, mul_631, output_168, output_169], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1229, buf1234, arg341_1, buf1240, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg341_1
        buf1241 = buf1211; del buf1211  # reuse
        # Topologically Sorted Source Nodes: [linear_168], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1240, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg342_1, (16384, 1280), (1, 16384), 0), out=buf1241)
        del arg342_1
        # Topologically Sorted Source Nodes: [setitem_84, setitem_85], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1241, arg0_1, arg343_1, arg344_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1243 = reinterpret_tensor(buf1222, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1222  # reuse
        # Topologically Sorted Source Nodes: [y_168], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1241, arg2_1, arg0_1, buf1243, 16777216, grid=grid(16777216), stream=stream0)
        buf1244 = reinterpret_tensor(buf1221, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1221  # reuse
        # Topologically Sorted Source Nodes: [y_168], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg343_1, buf1244, 25165824, grid=grid(25165824), stream=stream0)
        del arg343_1
        buf1245 = reinterpret_tensor(buf1220, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1220  # reuse
        # Topologically Sorted Source Nodes: [y_168], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1243, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1244, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1245)
        buf1250 = reinterpret_tensor(buf1245, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1245  # reuse
        # Topologically Sorted Source Nodes: [mask, y_168], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1250, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1251 = reinterpret_tensor(buf1244, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1244  # reuse
        # Topologically Sorted Source Nodes: [y_168], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg344_1, buf1251, 25165824, grid=grid(25165824), stream=stream0)
        del arg344_1
        buf1252 = reinterpret_tensor(buf1243, (128, 1024, 128), (131072, 128, 1), 0); del buf1243  # reuse
        # Topologically Sorted Source Nodes: [y_168], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1250, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1251, (128, 1536, 128), (196608, 128, 1), 0), out=buf1252)
        buf1253 = buf1223; del buf1223  # reuse
        # Topologically Sorted Source Nodes: [contiguous_42], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1252, buf1253, 16777216, grid=grid(16777216), stream=stream0)
        buf1254 = reinterpret_tensor(buf1240, (16384, 16384), (16384, 1), 0); del buf1240  # reuse
        # Topologically Sorted Source Nodes: [y_170], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1253, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg345_1, (1024, 16384), (1, 1024), 0), out=buf1254)
        del arg345_1
        # Topologically Sorted Source Nodes: [tensor_84], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1254, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_211], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1254, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1260 = reinterpret_tensor(buf1204, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1204  # reuse
        # Topologically Sorted Source Nodes: [x_210, x_212, float_172, mul_641, mean_85, add_256, rsqrt_85, mul_642, output_170, output_171], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1229, buf1234, buf1254, arg346_1, buf1260, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg346_1
        buf1261 = buf1232; del buf1232  # reuse
        # Topologically Sorted Source Nodes: [x_213], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1260, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg347_1, (16384, 6656), (1, 16384), 0), out=buf1261)
        del arg347_1
        buf1262 = buf1233; del buf1233  # reuse
        # Topologically Sorted Source Nodes: [silu_42, mul_644], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1261, buf1262, 54525952, grid=grid(54525952), stream=stream0)
        buf1263 = reinterpret_tensor(buf1260, (16384, 16384), (16384, 1), 0); del buf1260  # reuse
        # Topologically Sorted Source Nodes: [y_171], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1262, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg348_1, (3328, 16384), (1, 3328), 0), out=buf1263)
        del arg348_1
        # Topologically Sorted Source Nodes: [tensor_85], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1263, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_214], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1263, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1269 = reinterpret_tensor(buf1195, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1195  # reuse
        # Topologically Sorted Source Nodes: [x_210, x_212, x_215, float_173, mul_645, mean_86, add_258, rsqrt_86, mul_646, output_172, output_173], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1229, buf1234, buf1254, buf1263, arg349_1, buf1269, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg349_1
        buf1270 = buf1241; del buf1241  # reuse
        # Topologically Sorted Source Nodes: [linear_172], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1269, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg350_1, (16384, 1280), (1, 16384), 0), out=buf1270)
        del arg350_1
        # Topologically Sorted Source Nodes: [setitem_86, setitem_87], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1270, arg0_1, arg351_1, arg352_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1272 = reinterpret_tensor(buf1252, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1252  # reuse
        # Topologically Sorted Source Nodes: [y_172], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1270, arg2_1, arg0_1, buf1272, 16777216, grid=grid(16777216), stream=stream0)
        buf1273 = reinterpret_tensor(buf1251, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1251  # reuse
        # Topologically Sorted Source Nodes: [y_172], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg351_1, buf1273, 25165824, grid=grid(25165824), stream=stream0)
        del arg351_1
        buf1274 = reinterpret_tensor(buf1250, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1250  # reuse
        # Topologically Sorted Source Nodes: [y_172], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1272, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1273, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1274)
        buf1279 = reinterpret_tensor(buf1274, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1274  # reuse
        # Topologically Sorted Source Nodes: [mask, y_172], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1279, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1280 = reinterpret_tensor(buf1273, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1273  # reuse
        # Topologically Sorted Source Nodes: [y_172], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg352_1, buf1280, 25165824, grid=grid(25165824), stream=stream0)
        del arg352_1
        buf1281 = reinterpret_tensor(buf1272, (128, 1024, 128), (131072, 128, 1), 0); del buf1272  # reuse
        # Topologically Sorted Source Nodes: [y_172], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1279, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1280, (128, 1536, 128), (196608, 128, 1), 0), out=buf1281)
        buf1282 = buf1253; del buf1253  # reuse
        # Topologically Sorted Source Nodes: [contiguous_43], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1281, buf1282, 16777216, grid=grid(16777216), stream=stream0)
        buf1283 = reinterpret_tensor(buf1269, (16384, 16384), (16384, 1), 0); del buf1269  # reuse
        # Topologically Sorted Source Nodes: [y_174], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1282, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg353_1, (1024, 16384), (1, 1024), 0), out=buf1283)
        del arg353_1
        # Topologically Sorted Source Nodes: [tensor_86], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1283, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_216], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1283, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1288 = buf1229; del buf1229  # reuse
        buf1290 = reinterpret_tensor(buf1175, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1175  # reuse
        # Topologically Sorted Source Nodes: [x_210, x_212, x_215, x_217, float_176, mul_656, mean_87, add_262, rsqrt_87, mul_657, output_174, output_175], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1288, buf1234, buf1254, buf1263, buf1283, arg354_1, buf1290, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg354_1
        buf1291 = buf1261; del buf1261  # reuse
        # Topologically Sorted Source Nodes: [x_218], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1290, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg355_1, (16384, 6656), (1, 16384), 0), out=buf1291)
        del arg355_1
        buf1292 = buf1262; del buf1262  # reuse
        # Topologically Sorted Source Nodes: [silu_43, mul_659], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1291, buf1292, 54525952, grid=grid(54525952), stream=stream0)
        buf1293 = reinterpret_tensor(buf1290, (16384, 16384), (16384, 1), 0); del buf1290  # reuse
        # Topologically Sorted Source Nodes: [y_175], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1292, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg356_1, (3328, 16384), (1, 3328), 0), out=buf1293)
        del arg356_1
        # Topologically Sorted Source Nodes: [tensor_87], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1293, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_219], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1293, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1299 = reinterpret_tensor(buf1283, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1283  # reuse
        # Topologically Sorted Source Nodes: [x_220, float_177, mul_660, mean_88, add_264, rsqrt_88, mul_661, output_176, output_177], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1288, buf1293, arg357_1, buf1299, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg357_1
        buf1300 = buf1270; del buf1270  # reuse
        # Topologically Sorted Source Nodes: [linear_176], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1299, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg358_1, (16384, 1280), (1, 16384), 0), out=buf1300)
        del arg358_1
        # Topologically Sorted Source Nodes: [setitem_88, setitem_89], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1300, arg0_1, arg359_1, arg360_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1302 = reinterpret_tensor(buf1281, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1281  # reuse
        # Topologically Sorted Source Nodes: [y_176], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1300, arg2_1, arg0_1, buf1302, 16777216, grid=grid(16777216), stream=stream0)
        buf1303 = reinterpret_tensor(buf1280, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1280  # reuse
        # Topologically Sorted Source Nodes: [y_176], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg359_1, buf1303, 25165824, grid=grid(25165824), stream=stream0)
        del arg359_1
        buf1304 = reinterpret_tensor(buf1279, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1279  # reuse
        # Topologically Sorted Source Nodes: [y_176], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1302, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1303, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1304)
        buf1309 = reinterpret_tensor(buf1304, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1304  # reuse
        # Topologically Sorted Source Nodes: [mask, y_176], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1309, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1310 = reinterpret_tensor(buf1303, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1303  # reuse
        # Topologically Sorted Source Nodes: [y_176], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg360_1, buf1310, 25165824, grid=grid(25165824), stream=stream0)
        del arg360_1
        buf1311 = reinterpret_tensor(buf1302, (128, 1024, 128), (131072, 128, 1), 0); del buf1302  # reuse
        # Topologically Sorted Source Nodes: [y_176], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1309, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1310, (128, 1536, 128), (196608, 128, 1), 0), out=buf1311)
        buf1312 = buf1282; del buf1282  # reuse
        # Topologically Sorted Source Nodes: [contiguous_44], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1311, buf1312, 16777216, grid=grid(16777216), stream=stream0)
        buf1313 = reinterpret_tensor(buf1299, (16384, 16384), (16384, 1), 0); del buf1299  # reuse
        # Topologically Sorted Source Nodes: [y_178], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1312, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg361_1, (1024, 16384), (1, 1024), 0), out=buf1313)
        del arg361_1
        # Topologically Sorted Source Nodes: [tensor_88], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1313, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_221], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1313, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1319 = reinterpret_tensor(buf1263, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1263  # reuse
        # Topologically Sorted Source Nodes: [x_220, x_222, float_180, mul_671, mean_89, add_268, rsqrt_89, mul_672, output_178, output_179], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1288, buf1293, buf1313, arg362_1, buf1319, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg362_1
        buf1320 = buf1291; del buf1291  # reuse
        # Topologically Sorted Source Nodes: [x_223], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1319, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg363_1, (16384, 6656), (1, 16384), 0), out=buf1320)
        del arg363_1
        buf1321 = buf1292; del buf1292  # reuse
        # Topologically Sorted Source Nodes: [silu_44, mul_674], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1320, buf1321, 54525952, grid=grid(54525952), stream=stream0)
        buf1322 = reinterpret_tensor(buf1319, (16384, 16384), (16384, 1), 0); del buf1319  # reuse
        # Topologically Sorted Source Nodes: [y_179], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1321, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg364_1, (3328, 16384), (1, 3328), 0), out=buf1322)
        del arg364_1
        # Topologically Sorted Source Nodes: [tensor_89], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1322, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_224], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1322, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1328 = reinterpret_tensor(buf1254, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1254  # reuse
        # Topologically Sorted Source Nodes: [x_220, x_222, x_225, float_181, mul_675, mean_90, add_270, rsqrt_90, mul_676, output_180, output_181], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1288, buf1293, buf1313, buf1322, arg365_1, buf1328, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg365_1
        buf1329 = buf1300; del buf1300  # reuse
        # Topologically Sorted Source Nodes: [linear_180], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1328, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg366_1, (16384, 1280), (1, 16384), 0), out=buf1329)
        del arg366_1
        # Topologically Sorted Source Nodes: [setitem_90, setitem_91], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1329, arg0_1, arg367_1, arg368_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1331 = reinterpret_tensor(buf1311, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1311  # reuse
        # Topologically Sorted Source Nodes: [y_180], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1329, arg2_1, arg0_1, buf1331, 16777216, grid=grid(16777216), stream=stream0)
        buf1332 = reinterpret_tensor(buf1310, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1310  # reuse
        # Topologically Sorted Source Nodes: [y_180], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg367_1, buf1332, 25165824, grid=grid(25165824), stream=stream0)
        del arg367_1
        buf1333 = reinterpret_tensor(buf1309, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1309  # reuse
        # Topologically Sorted Source Nodes: [y_180], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1331, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1332, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1333)
        buf1338 = reinterpret_tensor(buf1333, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1333  # reuse
        # Topologically Sorted Source Nodes: [mask, y_180], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1338, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1339 = reinterpret_tensor(buf1332, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1332  # reuse
        # Topologically Sorted Source Nodes: [y_180], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg368_1, buf1339, 25165824, grid=grid(25165824), stream=stream0)
        del arg368_1
        buf1340 = reinterpret_tensor(buf1331, (128, 1024, 128), (131072, 128, 1), 0); del buf1331  # reuse
        # Topologically Sorted Source Nodes: [y_180], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1338, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1339, (128, 1536, 128), (196608, 128, 1), 0), out=buf1340)
        buf1341 = buf1312; del buf1312  # reuse
        # Topologically Sorted Source Nodes: [contiguous_45], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1340, buf1341, 16777216, grid=grid(16777216), stream=stream0)
        buf1342 = reinterpret_tensor(buf1328, (16384, 16384), (16384, 1), 0); del buf1328  # reuse
        # Topologically Sorted Source Nodes: [y_182], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1341, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg369_1, (1024, 16384), (1, 1024), 0), out=buf1342)
        del arg369_1
        # Topologically Sorted Source Nodes: [tensor_90], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1342, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_226], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1342, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1347 = buf1288; del buf1288  # reuse
        buf1349 = reinterpret_tensor(buf1234, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1234  # reuse
        # Topologically Sorted Source Nodes: [x_220, x_222, x_225, x_227, float_184, mul_686, mean_91, add_274, rsqrt_91, mul_687, output_182, output_183], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1347, buf1293, buf1313, buf1322, buf1342, arg370_1, buf1349, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg370_1
        buf1350 = buf1320; del buf1320  # reuse
        # Topologically Sorted Source Nodes: [x_228], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1349, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg371_1, (16384, 6656), (1, 16384), 0), out=buf1350)
        del arg371_1
        buf1351 = buf1321; del buf1321  # reuse
        # Topologically Sorted Source Nodes: [silu_45, mul_689], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1350, buf1351, 54525952, grid=grid(54525952), stream=stream0)
        buf1352 = reinterpret_tensor(buf1349, (16384, 16384), (16384, 1), 0); del buf1349  # reuse
        # Topologically Sorted Source Nodes: [y_183], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1351, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg372_1, (3328, 16384), (1, 3328), 0), out=buf1352)
        del arg372_1
        # Topologically Sorted Source Nodes: [tensor_91], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1352, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_229], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1352, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1358 = reinterpret_tensor(buf1342, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1342  # reuse
        # Topologically Sorted Source Nodes: [x_230, float_185, mul_690, mean_92, add_276, rsqrt_92, mul_691, output_184, output_185], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1347, buf1352, arg373_1, buf1358, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg373_1
        buf1359 = buf1329; del buf1329  # reuse
        # Topologically Sorted Source Nodes: [linear_184], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1358, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg374_1, (16384, 1280), (1, 16384), 0), out=buf1359)
        del arg374_1
        # Topologically Sorted Source Nodes: [setitem_92, setitem_93], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1359, arg0_1, arg375_1, arg376_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1361 = reinterpret_tensor(buf1340, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1340  # reuse
        # Topologically Sorted Source Nodes: [y_184], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1359, arg2_1, arg0_1, buf1361, 16777216, grid=grid(16777216), stream=stream0)
        buf1362 = reinterpret_tensor(buf1339, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1339  # reuse
        # Topologically Sorted Source Nodes: [y_184], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg375_1, buf1362, 25165824, grid=grid(25165824), stream=stream0)
        del arg375_1
        buf1363 = reinterpret_tensor(buf1338, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1338  # reuse
        # Topologically Sorted Source Nodes: [y_184], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1361, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1362, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1363)
        buf1368 = reinterpret_tensor(buf1363, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1363  # reuse
        # Topologically Sorted Source Nodes: [mask, y_184], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1368, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1369 = reinterpret_tensor(buf1362, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1362  # reuse
        # Topologically Sorted Source Nodes: [y_184], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg376_1, buf1369, 25165824, grid=grid(25165824), stream=stream0)
        del arg376_1
        buf1370 = reinterpret_tensor(buf1361, (128, 1024, 128), (131072, 128, 1), 0); del buf1361  # reuse
        # Topologically Sorted Source Nodes: [y_184], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1368, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1369, (128, 1536, 128), (196608, 128, 1), 0), out=buf1370)
        buf1371 = buf1341; del buf1341  # reuse
        # Topologically Sorted Source Nodes: [contiguous_46], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1370, buf1371, 16777216, grid=grid(16777216), stream=stream0)
        buf1372 = reinterpret_tensor(buf1358, (16384, 16384), (16384, 1), 0); del buf1358  # reuse
        # Topologically Sorted Source Nodes: [y_186], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1371, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg377_1, (1024, 16384), (1, 1024), 0), out=buf1372)
        del arg377_1
        # Topologically Sorted Source Nodes: [tensor_92], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1372, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_231], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1372, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1378 = reinterpret_tensor(buf1322, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1322  # reuse
        # Topologically Sorted Source Nodes: [x_230, x_232, float_188, mul_701, mean_93, add_280, rsqrt_93, mul_702, output_186, output_187], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1347, buf1352, buf1372, arg378_1, buf1378, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg378_1
        buf1379 = buf1350; del buf1350  # reuse
        # Topologically Sorted Source Nodes: [x_233], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1378, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg379_1, (16384, 6656), (1, 16384), 0), out=buf1379)
        del arg379_1
        buf1380 = buf1351; del buf1351  # reuse
        # Topologically Sorted Source Nodes: [silu_46, mul_704], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1379, buf1380, 54525952, grid=grid(54525952), stream=stream0)
        buf1381 = reinterpret_tensor(buf1378, (16384, 16384), (16384, 1), 0); del buf1378  # reuse
        # Topologically Sorted Source Nodes: [y_187], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1380, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg380_1, (3328, 16384), (1, 3328), 0), out=buf1381)
        del arg380_1
        # Topologically Sorted Source Nodes: [tensor_93], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1381, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_234], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1381, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1387 = reinterpret_tensor(buf1313, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1313  # reuse
        # Topologically Sorted Source Nodes: [x_230, x_232, x_235, float_189, mul_705, mean_94, add_282, rsqrt_94, mul_706, output_188, output_189], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1347, buf1352, buf1372, buf1381, arg381_1, buf1387, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg381_1
        buf1388 = buf1359; del buf1359  # reuse
        # Topologically Sorted Source Nodes: [linear_188], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1387, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg382_1, (16384, 1280), (1, 16384), 0), out=buf1388)
        del arg382_1
        # Topologically Sorted Source Nodes: [setitem_94, setitem_95], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1388, arg0_1, arg383_1, arg384_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1390 = reinterpret_tensor(buf1370, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1370  # reuse
        # Topologically Sorted Source Nodes: [y_188], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1388, arg2_1, arg0_1, buf1390, 16777216, grid=grid(16777216), stream=stream0)
        buf1391 = reinterpret_tensor(buf1369, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1369  # reuse
        # Topologically Sorted Source Nodes: [y_188], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg383_1, buf1391, 25165824, grid=grid(25165824), stream=stream0)
        del arg383_1
        buf1392 = reinterpret_tensor(buf1368, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1368  # reuse
        # Topologically Sorted Source Nodes: [y_188], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1390, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1391, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1392)
        buf1397 = reinterpret_tensor(buf1392, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1392  # reuse
        # Topologically Sorted Source Nodes: [mask, y_188], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1397, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1398 = reinterpret_tensor(buf1391, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1391  # reuse
        # Topologically Sorted Source Nodes: [y_188], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg384_1, buf1398, 25165824, grid=grid(25165824), stream=stream0)
        del arg384_1
        buf1399 = reinterpret_tensor(buf1390, (128, 1024, 128), (131072, 128, 1), 0); del buf1390  # reuse
        # Topologically Sorted Source Nodes: [y_188], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1397, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1398, (128, 1536, 128), (196608, 128, 1), 0), out=buf1399)
        buf1400 = buf1371; del buf1371  # reuse
        # Topologically Sorted Source Nodes: [contiguous_47], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1399, buf1400, 16777216, grid=grid(16777216), stream=stream0)
        buf1401 = reinterpret_tensor(buf1387, (16384, 16384), (16384, 1), 0); del buf1387  # reuse
        # Topologically Sorted Source Nodes: [y_190], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1400, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg385_1, (1024, 16384), (1, 1024), 0), out=buf1401)
        del arg385_1
        # Topologically Sorted Source Nodes: [tensor_94], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1401, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_236], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1401, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1406 = buf1347; del buf1347  # reuse
        buf1408 = reinterpret_tensor(buf1293, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1293  # reuse
        # Topologically Sorted Source Nodes: [x_230, x_232, x_235, x_237, float_192, mul_716, mean_95, add_286, rsqrt_95, mul_717, output_190, output_191], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1406, buf1352, buf1372, buf1381, buf1401, arg386_1, buf1408, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg386_1
        buf1409 = buf1379; del buf1379  # reuse
        # Topologically Sorted Source Nodes: [x_238], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1408, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg387_1, (16384, 6656), (1, 16384), 0), out=buf1409)
        del arg387_1
        buf1410 = buf1380; del buf1380  # reuse
        # Topologically Sorted Source Nodes: [silu_47, mul_719], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1409, buf1410, 54525952, grid=grid(54525952), stream=stream0)
        buf1411 = reinterpret_tensor(buf1408, (16384, 16384), (16384, 1), 0); del buf1408  # reuse
        # Topologically Sorted Source Nodes: [y_191], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1410, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg388_1, (3328, 16384), (1, 3328), 0), out=buf1411)
        del arg388_1
        # Topologically Sorted Source Nodes: [tensor_95], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1411, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_239], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1411, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1417 = reinterpret_tensor(buf1401, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1401  # reuse
        # Topologically Sorted Source Nodes: [x_240, float_193, mul_720, mean_96, add_288, rsqrt_96, mul_721, output_192, output_193], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1406, buf1411, arg389_1, buf1417, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg389_1
        buf1418 = buf1388; del buf1388  # reuse
        # Topologically Sorted Source Nodes: [linear_192], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1417, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg390_1, (16384, 1280), (1, 16384), 0), out=buf1418)
        del arg390_1
        # Topologically Sorted Source Nodes: [setitem_96, setitem_97], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1418, arg0_1, arg391_1, arg392_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1420 = reinterpret_tensor(buf1399, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1399  # reuse
        # Topologically Sorted Source Nodes: [y_192], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1418, arg2_1, arg0_1, buf1420, 16777216, grid=grid(16777216), stream=stream0)
        buf1421 = reinterpret_tensor(buf1398, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1398  # reuse
        # Topologically Sorted Source Nodes: [y_192], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg391_1, buf1421, 25165824, grid=grid(25165824), stream=stream0)
        del arg391_1
        buf1422 = reinterpret_tensor(buf1397, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1397  # reuse
        # Topologically Sorted Source Nodes: [y_192], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1420, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1421, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1422)
        buf1427 = reinterpret_tensor(buf1422, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1422  # reuse
        # Topologically Sorted Source Nodes: [mask, y_192], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1427, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1428 = reinterpret_tensor(buf1421, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1421  # reuse
        # Topologically Sorted Source Nodes: [y_192], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg392_1, buf1428, 25165824, grid=grid(25165824), stream=stream0)
        del arg392_1
        buf1429 = reinterpret_tensor(buf1420, (128, 1024, 128), (131072, 128, 1), 0); del buf1420  # reuse
        # Topologically Sorted Source Nodes: [y_192], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1427, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1428, (128, 1536, 128), (196608, 128, 1), 0), out=buf1429)
        buf1430 = buf1400; del buf1400  # reuse
        # Topologically Sorted Source Nodes: [contiguous_48], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1429, buf1430, 16777216, grid=grid(16777216), stream=stream0)
        buf1431 = reinterpret_tensor(buf1417, (16384, 16384), (16384, 1), 0); del buf1417  # reuse
        # Topologically Sorted Source Nodes: [y_194], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1430, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg393_1, (1024, 16384), (1, 1024), 0), out=buf1431)
        del arg393_1
        # Topologically Sorted Source Nodes: [tensor_96], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1431, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_241], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1431, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1437 = reinterpret_tensor(buf1381, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1381  # reuse
        # Topologically Sorted Source Nodes: [x_240, x_242, float_196, mul_731, mean_97, add_292, rsqrt_97, mul_732, output_194, output_195], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1406, buf1411, buf1431, arg394_1, buf1437, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg394_1
        buf1438 = buf1409; del buf1409  # reuse
        # Topologically Sorted Source Nodes: [x_243], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1437, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg395_1, (16384, 6656), (1, 16384), 0), out=buf1438)
        del arg395_1
        buf1439 = buf1410; del buf1410  # reuse
        # Topologically Sorted Source Nodes: [silu_48, mul_734], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1438, buf1439, 54525952, grid=grid(54525952), stream=stream0)
        buf1440 = reinterpret_tensor(buf1437, (16384, 16384), (16384, 1), 0); del buf1437  # reuse
        # Topologically Sorted Source Nodes: [y_195], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1439, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg396_1, (3328, 16384), (1, 3328), 0), out=buf1440)
        del arg396_1
        # Topologically Sorted Source Nodes: [tensor_97], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1440, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_244], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1440, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1446 = reinterpret_tensor(buf1372, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1372  # reuse
        # Topologically Sorted Source Nodes: [x_240, x_242, x_245, float_197, mul_735, mean_98, add_294, rsqrt_98, mul_736, output_196, output_197], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1406, buf1411, buf1431, buf1440, arg397_1, buf1446, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg397_1
        buf1447 = buf1418; del buf1418  # reuse
        # Topologically Sorted Source Nodes: [linear_196], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1446, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg398_1, (16384, 1280), (1, 16384), 0), out=buf1447)
        del arg398_1
        # Topologically Sorted Source Nodes: [setitem_98, setitem_99], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1447, arg0_1, arg399_1, arg400_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1449 = reinterpret_tensor(buf1429, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1429  # reuse
        # Topologically Sorted Source Nodes: [y_196], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1447, arg2_1, arg0_1, buf1449, 16777216, grid=grid(16777216), stream=stream0)
        buf1450 = reinterpret_tensor(buf1428, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1428  # reuse
        # Topologically Sorted Source Nodes: [y_196], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg399_1, buf1450, 25165824, grid=grid(25165824), stream=stream0)
        del arg399_1
        buf1451 = reinterpret_tensor(buf1427, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1427  # reuse
        # Topologically Sorted Source Nodes: [y_196], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1449, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1450, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1451)
        buf1456 = reinterpret_tensor(buf1451, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1451  # reuse
        # Topologically Sorted Source Nodes: [mask, y_196], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1456, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1457 = reinterpret_tensor(buf1450, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1450  # reuse
        # Topologically Sorted Source Nodes: [y_196], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg400_1, buf1457, 25165824, grid=grid(25165824), stream=stream0)
        del arg400_1
        buf1458 = reinterpret_tensor(buf1449, (128, 1024, 128), (131072, 128, 1), 0); del buf1449  # reuse
        # Topologically Sorted Source Nodes: [y_196], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1456, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1457, (128, 1536, 128), (196608, 128, 1), 0), out=buf1458)
        buf1459 = buf1430; del buf1430  # reuse
        # Topologically Sorted Source Nodes: [contiguous_49], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1458, buf1459, 16777216, grid=grid(16777216), stream=stream0)
        buf1460 = reinterpret_tensor(buf1446, (16384, 16384), (16384, 1), 0); del buf1446  # reuse
        # Topologically Sorted Source Nodes: [y_198], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1459, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg401_1, (1024, 16384), (1, 1024), 0), out=buf1460)
        del arg401_1
        # Topologically Sorted Source Nodes: [tensor_98], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1460, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_246], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1460, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1465 = buf1406; del buf1406  # reuse
        buf1467 = reinterpret_tensor(buf1352, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1352  # reuse
        # Topologically Sorted Source Nodes: [x_240, x_242, x_245, x_247, float_200, mul_746, mean_99, add_298, rsqrt_99, mul_747, output_198, output_199], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1465, buf1411, buf1431, buf1440, buf1460, arg402_1, buf1467, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg402_1
        buf1468 = buf1438; del buf1438  # reuse
        # Topologically Sorted Source Nodes: [x_248], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1467, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg403_1, (16384, 6656), (1, 16384), 0), out=buf1468)
        del arg403_1
        buf1469 = buf1439; del buf1439  # reuse
        # Topologically Sorted Source Nodes: [silu_49, mul_749], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1468, buf1469, 54525952, grid=grid(54525952), stream=stream0)
        buf1470 = reinterpret_tensor(buf1467, (16384, 16384), (16384, 1), 0); del buf1467  # reuse
        # Topologically Sorted Source Nodes: [y_199], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1469, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg404_1, (3328, 16384), (1, 3328), 0), out=buf1470)
        del arg404_1
        # Topologically Sorted Source Nodes: [tensor_99], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1470, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_249], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1470, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1476 = reinterpret_tensor(buf1460, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1460  # reuse
        # Topologically Sorted Source Nodes: [x_250, float_201, mul_750, mean_100, add_300, rsqrt_100, mul_751, output_200, output_201], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1465, buf1470, arg405_1, buf1476, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg405_1
        buf1477 = buf1447; del buf1447  # reuse
        # Topologically Sorted Source Nodes: [linear_200], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1476, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg406_1, (16384, 1280), (1, 16384), 0), out=buf1477)
        del arg406_1
        # Topologically Sorted Source Nodes: [setitem_100, setitem_101], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1477, arg0_1, arg407_1, arg408_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1479 = reinterpret_tensor(buf1458, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1458  # reuse
        # Topologically Sorted Source Nodes: [y_200], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1477, arg2_1, arg0_1, buf1479, 16777216, grid=grid(16777216), stream=stream0)
        buf1480 = reinterpret_tensor(buf1457, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1457  # reuse
        # Topologically Sorted Source Nodes: [y_200], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg407_1, buf1480, 25165824, grid=grid(25165824), stream=stream0)
        del arg407_1
        buf1481 = reinterpret_tensor(buf1456, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1456  # reuse
        # Topologically Sorted Source Nodes: [y_200], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1479, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1480, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1481)
        buf1486 = reinterpret_tensor(buf1481, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1481  # reuse
        # Topologically Sorted Source Nodes: [mask, y_200], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1486, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1487 = reinterpret_tensor(buf1480, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1480  # reuse
        # Topologically Sorted Source Nodes: [y_200], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg408_1, buf1487, 25165824, grid=grid(25165824), stream=stream0)
        del arg408_1
        buf1488 = reinterpret_tensor(buf1479, (128, 1024, 128), (131072, 128, 1), 0); del buf1479  # reuse
        # Topologically Sorted Source Nodes: [y_200], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1486, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1487, (128, 1536, 128), (196608, 128, 1), 0), out=buf1488)
        buf1489 = buf1459; del buf1459  # reuse
        # Topologically Sorted Source Nodes: [contiguous_50], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1488, buf1489, 16777216, grid=grid(16777216), stream=stream0)
        buf1490 = reinterpret_tensor(buf1476, (16384, 16384), (16384, 1), 0); del buf1476  # reuse
        # Topologically Sorted Source Nodes: [y_202], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1489, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg409_1, (1024, 16384), (1, 1024), 0), out=buf1490)
        del arg409_1
        # Topologically Sorted Source Nodes: [tensor_100], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1490, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_251], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1490, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1496 = reinterpret_tensor(buf1440, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1440  # reuse
        # Topologically Sorted Source Nodes: [x_250, x_252, float_204, mul_761, mean_101, add_304, rsqrt_101, mul_762, output_202, output_203], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1465, buf1470, buf1490, arg410_1, buf1496, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg410_1
        buf1497 = buf1468; del buf1468  # reuse
        # Topologically Sorted Source Nodes: [x_253], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1496, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg411_1, (16384, 6656), (1, 16384), 0), out=buf1497)
        del arg411_1
        buf1498 = buf1469; del buf1469  # reuse
        # Topologically Sorted Source Nodes: [silu_50, mul_764], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1497, buf1498, 54525952, grid=grid(54525952), stream=stream0)
        buf1499 = reinterpret_tensor(buf1496, (16384, 16384), (16384, 1), 0); del buf1496  # reuse
        # Topologically Sorted Source Nodes: [y_203], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1498, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg412_1, (3328, 16384), (1, 3328), 0), out=buf1499)
        del arg412_1
        # Topologically Sorted Source Nodes: [tensor_101], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1499, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_254], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1499, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1505 = reinterpret_tensor(buf1431, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1431  # reuse
        # Topologically Sorted Source Nodes: [x_250, x_252, x_255, float_205, mul_765, mean_102, add_306, rsqrt_102, mul_766, output_204, output_205], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1465, buf1470, buf1490, buf1499, arg413_1, buf1505, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg413_1
        buf1506 = buf1477; del buf1477  # reuse
        # Topologically Sorted Source Nodes: [linear_204], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1505, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg414_1, (16384, 1280), (1, 16384), 0), out=buf1506)
        del arg414_1
        # Topologically Sorted Source Nodes: [setitem_102, setitem_103], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1506, arg0_1, arg415_1, arg416_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1508 = reinterpret_tensor(buf1488, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1488  # reuse
        # Topologically Sorted Source Nodes: [y_204], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1506, arg2_1, arg0_1, buf1508, 16777216, grid=grid(16777216), stream=stream0)
        buf1509 = reinterpret_tensor(buf1487, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1487  # reuse
        # Topologically Sorted Source Nodes: [y_204], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg415_1, buf1509, 25165824, grid=grid(25165824), stream=stream0)
        del arg415_1
        buf1510 = reinterpret_tensor(buf1486, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1486  # reuse
        # Topologically Sorted Source Nodes: [y_204], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1508, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1509, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1510)
        buf1515 = reinterpret_tensor(buf1510, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1510  # reuse
        # Topologically Sorted Source Nodes: [mask, y_204], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1515, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1516 = reinterpret_tensor(buf1509, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1509  # reuse
        # Topologically Sorted Source Nodes: [y_204], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg416_1, buf1516, 25165824, grid=grid(25165824), stream=stream0)
        del arg416_1
        buf1517 = reinterpret_tensor(buf1508, (128, 1024, 128), (131072, 128, 1), 0); del buf1508  # reuse
        # Topologically Sorted Source Nodes: [y_204], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1515, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1516, (128, 1536, 128), (196608, 128, 1), 0), out=buf1517)
        buf1518 = buf1489; del buf1489  # reuse
        # Topologically Sorted Source Nodes: [contiguous_51], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1517, buf1518, 16777216, grid=grid(16777216), stream=stream0)
        buf1519 = reinterpret_tensor(buf1505, (16384, 16384), (16384, 1), 0); del buf1505  # reuse
        # Topologically Sorted Source Nodes: [y_206], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1518, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg417_1, (1024, 16384), (1, 1024), 0), out=buf1519)
        del arg417_1
        # Topologically Sorted Source Nodes: [tensor_102], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1519, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_256], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1519, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1524 = buf1465; del buf1465  # reuse
        buf1526 = reinterpret_tensor(buf1411, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1411  # reuse
        # Topologically Sorted Source Nodes: [x_250, x_252, x_255, x_257, float_208, mul_776, mean_103, add_310, rsqrt_103, mul_777, output_206, output_207], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1524, buf1470, buf1490, buf1499, buf1519, arg418_1, buf1526, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg418_1
        buf1527 = buf1497; del buf1497  # reuse
        # Topologically Sorted Source Nodes: [x_258], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1526, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg419_1, (16384, 6656), (1, 16384), 0), out=buf1527)
        del arg419_1
        buf1528 = buf1498; del buf1498  # reuse
        # Topologically Sorted Source Nodes: [silu_51, mul_779], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1527, buf1528, 54525952, grid=grid(54525952), stream=stream0)
        buf1529 = reinterpret_tensor(buf1526, (16384, 16384), (16384, 1), 0); del buf1526  # reuse
        # Topologically Sorted Source Nodes: [y_207], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1528, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg420_1, (3328, 16384), (1, 3328), 0), out=buf1529)
        del arg420_1
        # Topologically Sorted Source Nodes: [tensor_103], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1529, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_259], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1529, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1535 = reinterpret_tensor(buf1519, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1519  # reuse
        # Topologically Sorted Source Nodes: [x_260, float_209, mul_780, mean_104, add_312, rsqrt_104, mul_781, output_208, output_209], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1524, buf1529, arg421_1, buf1535, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg421_1
        buf1536 = buf1506; del buf1506  # reuse
        # Topologically Sorted Source Nodes: [linear_208], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1535, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg422_1, (16384, 1280), (1, 16384), 0), out=buf1536)
        del arg422_1
        # Topologically Sorted Source Nodes: [setitem_104, setitem_105], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1536, arg0_1, arg423_1, arg424_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1538 = reinterpret_tensor(buf1517, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1517  # reuse
        # Topologically Sorted Source Nodes: [y_208], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1536, arg2_1, arg0_1, buf1538, 16777216, grid=grid(16777216), stream=stream0)
        buf1539 = reinterpret_tensor(buf1516, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1516  # reuse
        # Topologically Sorted Source Nodes: [y_208], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg423_1, buf1539, 25165824, grid=grid(25165824), stream=stream0)
        del arg423_1
        buf1540 = reinterpret_tensor(buf1515, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1515  # reuse
        # Topologically Sorted Source Nodes: [y_208], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1538, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1539, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1540)
        buf1545 = reinterpret_tensor(buf1540, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1540  # reuse
        # Topologically Sorted Source Nodes: [mask, y_208], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1545, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1546 = reinterpret_tensor(buf1539, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1539  # reuse
        # Topologically Sorted Source Nodes: [y_208], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg424_1, buf1546, 25165824, grid=grid(25165824), stream=stream0)
        del arg424_1
        buf1547 = reinterpret_tensor(buf1538, (128, 1024, 128), (131072, 128, 1), 0); del buf1538  # reuse
        # Topologically Sorted Source Nodes: [y_208], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1545, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1546, (128, 1536, 128), (196608, 128, 1), 0), out=buf1547)
        buf1548 = buf1518; del buf1518  # reuse
        # Topologically Sorted Source Nodes: [contiguous_52], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1547, buf1548, 16777216, grid=grid(16777216), stream=stream0)
        buf1549 = reinterpret_tensor(buf1535, (16384, 16384), (16384, 1), 0); del buf1535  # reuse
        # Topologically Sorted Source Nodes: [y_210], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1548, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg425_1, (1024, 16384), (1, 1024), 0), out=buf1549)
        del arg425_1
        # Topologically Sorted Source Nodes: [tensor_104], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1549, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_261], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1549, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1555 = reinterpret_tensor(buf1499, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1499  # reuse
        # Topologically Sorted Source Nodes: [x_260, x_262, float_212, mul_791, mean_105, add_316, rsqrt_105, mul_792, output_210, output_211], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1524, buf1529, buf1549, arg426_1, buf1555, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg426_1
        buf1556 = buf1527; del buf1527  # reuse
        # Topologically Sorted Source Nodes: [x_263], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1555, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg427_1, (16384, 6656), (1, 16384), 0), out=buf1556)
        del arg427_1
        buf1557 = buf1528; del buf1528  # reuse
        # Topologically Sorted Source Nodes: [silu_52, mul_794], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1556, buf1557, 54525952, grid=grid(54525952), stream=stream0)
        buf1558 = reinterpret_tensor(buf1555, (16384, 16384), (16384, 1), 0); del buf1555  # reuse
        # Topologically Sorted Source Nodes: [y_211], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1557, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg428_1, (3328, 16384), (1, 3328), 0), out=buf1558)
        del arg428_1
        # Topologically Sorted Source Nodes: [tensor_105], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1558, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_264], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1558, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1564 = reinterpret_tensor(buf1490, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1490  # reuse
        # Topologically Sorted Source Nodes: [x_260, x_262, x_265, float_213, mul_795, mean_106, add_318, rsqrt_106, mul_796, output_212, output_213], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1524, buf1529, buf1549, buf1558, arg429_1, buf1564, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg429_1
        buf1565 = buf1536; del buf1536  # reuse
        # Topologically Sorted Source Nodes: [linear_212], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1564, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg430_1, (16384, 1280), (1, 16384), 0), out=buf1565)
        del arg430_1
        # Topologically Sorted Source Nodes: [setitem_106, setitem_107], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1565, arg0_1, arg431_1, arg432_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1567 = reinterpret_tensor(buf1547, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1547  # reuse
        # Topologically Sorted Source Nodes: [y_212], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1565, arg2_1, arg0_1, buf1567, 16777216, grid=grid(16777216), stream=stream0)
        buf1568 = reinterpret_tensor(buf1546, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1546  # reuse
        # Topologically Sorted Source Nodes: [y_212], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg431_1, buf1568, 25165824, grid=grid(25165824), stream=stream0)
        del arg431_1
        buf1569 = reinterpret_tensor(buf1545, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1545  # reuse
        # Topologically Sorted Source Nodes: [y_212], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1567, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1568, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1569)
        buf1574 = reinterpret_tensor(buf1569, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1569  # reuse
        # Topologically Sorted Source Nodes: [mask, y_212], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1574, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1575 = reinterpret_tensor(buf1568, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1568  # reuse
        # Topologically Sorted Source Nodes: [y_212], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg432_1, buf1575, 25165824, grid=grid(25165824), stream=stream0)
        del arg432_1
        buf1576 = reinterpret_tensor(buf1567, (128, 1024, 128), (131072, 128, 1), 0); del buf1567  # reuse
        # Topologically Sorted Source Nodes: [y_212], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1574, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1575, (128, 1536, 128), (196608, 128, 1), 0), out=buf1576)
        buf1577 = buf1548; del buf1548  # reuse
        # Topologically Sorted Source Nodes: [contiguous_53], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1576, buf1577, 16777216, grid=grid(16777216), stream=stream0)
        buf1578 = reinterpret_tensor(buf1564, (16384, 16384), (16384, 1), 0); del buf1564  # reuse
        # Topologically Sorted Source Nodes: [y_214], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1577, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg433_1, (1024, 16384), (1, 1024), 0), out=buf1578)
        del arg433_1
        # Topologically Sorted Source Nodes: [tensor_106], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1578, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_266], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1578, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1583 = buf1524; del buf1524  # reuse
        buf1585 = reinterpret_tensor(buf1470, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1470  # reuse
        # Topologically Sorted Source Nodes: [x_260, x_262, x_265, x_267, float_216, mul_806, mean_107, add_322, rsqrt_107, mul_807, output_214, output_215], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1583, buf1529, buf1549, buf1558, buf1578, arg434_1, buf1585, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg434_1
        buf1586 = buf1556; del buf1556  # reuse
        # Topologically Sorted Source Nodes: [x_268], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1585, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg435_1, (16384, 6656), (1, 16384), 0), out=buf1586)
        del arg435_1
        buf1587 = buf1557; del buf1557  # reuse
        # Topologically Sorted Source Nodes: [silu_53, mul_809], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1586, buf1587, 54525952, grid=grid(54525952), stream=stream0)
        buf1588 = reinterpret_tensor(buf1585, (16384, 16384), (16384, 1), 0); del buf1585  # reuse
        # Topologically Sorted Source Nodes: [y_215], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1587, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg436_1, (3328, 16384), (1, 3328), 0), out=buf1588)
        del arg436_1
        # Topologically Sorted Source Nodes: [tensor_107], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1588, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_269], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1588, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1594 = reinterpret_tensor(buf1578, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1578  # reuse
        # Topologically Sorted Source Nodes: [x_270, float_217, mul_810, mean_108, add_324, rsqrt_108, mul_811, output_216, output_217], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1583, buf1588, arg437_1, buf1594, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg437_1
        buf1595 = buf1565; del buf1565  # reuse
        # Topologically Sorted Source Nodes: [linear_216], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1594, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg438_1, (16384, 1280), (1, 16384), 0), out=buf1595)
        del arg438_1
        # Topologically Sorted Source Nodes: [setitem_108, setitem_109], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1595, arg0_1, arg439_1, arg440_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1597 = reinterpret_tensor(buf1576, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1576  # reuse
        # Topologically Sorted Source Nodes: [y_216], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1595, arg2_1, arg0_1, buf1597, 16777216, grid=grid(16777216), stream=stream0)
        buf1598 = reinterpret_tensor(buf1575, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1575  # reuse
        # Topologically Sorted Source Nodes: [y_216], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg439_1, buf1598, 25165824, grid=grid(25165824), stream=stream0)
        del arg439_1
        buf1599 = reinterpret_tensor(buf1574, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1574  # reuse
        # Topologically Sorted Source Nodes: [y_216], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1597, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1598, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1599)
        buf1604 = reinterpret_tensor(buf1599, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1599  # reuse
        # Topologically Sorted Source Nodes: [mask, y_216], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1604, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1605 = reinterpret_tensor(buf1598, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1598  # reuse
        # Topologically Sorted Source Nodes: [y_216], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg440_1, buf1605, 25165824, grid=grid(25165824), stream=stream0)
        del arg440_1
        buf1606 = reinterpret_tensor(buf1597, (128, 1024, 128), (131072, 128, 1), 0); del buf1597  # reuse
        # Topologically Sorted Source Nodes: [y_216], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1604, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1605, (128, 1536, 128), (196608, 128, 1), 0), out=buf1606)
        buf1607 = buf1577; del buf1577  # reuse
        # Topologically Sorted Source Nodes: [contiguous_54], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1606, buf1607, 16777216, grid=grid(16777216), stream=stream0)
        buf1608 = reinterpret_tensor(buf1594, (16384, 16384), (16384, 1), 0); del buf1594  # reuse
        # Topologically Sorted Source Nodes: [y_218], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1607, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg441_1, (1024, 16384), (1, 1024), 0), out=buf1608)
        del arg441_1
        # Topologically Sorted Source Nodes: [tensor_108], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1608, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_271], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1608, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1614 = reinterpret_tensor(buf1558, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1558  # reuse
        # Topologically Sorted Source Nodes: [x_270, x_272, float_220, mul_821, mean_109, add_328, rsqrt_109, mul_822, output_218, output_219], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1583, buf1588, buf1608, arg442_1, buf1614, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg442_1
        buf1615 = buf1586; del buf1586  # reuse
        # Topologically Sorted Source Nodes: [x_273], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1614, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg443_1, (16384, 6656), (1, 16384), 0), out=buf1615)
        del arg443_1
        buf1616 = buf1587; del buf1587  # reuse
        # Topologically Sorted Source Nodes: [silu_54, mul_824], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1615, buf1616, 54525952, grid=grid(54525952), stream=stream0)
        buf1617 = reinterpret_tensor(buf1614, (16384, 16384), (16384, 1), 0); del buf1614  # reuse
        # Topologically Sorted Source Nodes: [y_219], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1616, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg444_1, (3328, 16384), (1, 3328), 0), out=buf1617)
        del arg444_1
        # Topologically Sorted Source Nodes: [tensor_109], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1617, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_274], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1617, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1623 = reinterpret_tensor(buf1549, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1549  # reuse
        # Topologically Sorted Source Nodes: [x_270, x_272, x_275, float_221, mul_825, mean_110, add_330, rsqrt_110, mul_826, output_220, output_221], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1583, buf1588, buf1608, buf1617, arg445_1, buf1623, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg445_1
        buf1624 = buf1595; del buf1595  # reuse
        # Topologically Sorted Source Nodes: [linear_220], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1623, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg446_1, (16384, 1280), (1, 16384), 0), out=buf1624)
        del arg446_1
        # Topologically Sorted Source Nodes: [setitem_110, setitem_111], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1624, arg0_1, arg447_1, arg448_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1626 = reinterpret_tensor(buf1606, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1606  # reuse
        # Topologically Sorted Source Nodes: [y_220], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1624, arg2_1, arg0_1, buf1626, 16777216, grid=grid(16777216), stream=stream0)
        buf1627 = reinterpret_tensor(buf1605, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1605  # reuse
        # Topologically Sorted Source Nodes: [y_220], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg447_1, buf1627, 25165824, grid=grid(25165824), stream=stream0)
        del arg447_1
        buf1628 = reinterpret_tensor(buf1604, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1604  # reuse
        # Topologically Sorted Source Nodes: [y_220], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1626, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1627, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1628)
        buf1633 = reinterpret_tensor(buf1628, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1628  # reuse
        # Topologically Sorted Source Nodes: [mask, y_220], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1633, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1634 = reinterpret_tensor(buf1627, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1627  # reuse
        # Topologically Sorted Source Nodes: [y_220], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg448_1, buf1634, 25165824, grid=grid(25165824), stream=stream0)
        del arg448_1
        buf1635 = reinterpret_tensor(buf1626, (128, 1024, 128), (131072, 128, 1), 0); del buf1626  # reuse
        # Topologically Sorted Source Nodes: [y_220], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1633, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1634, (128, 1536, 128), (196608, 128, 1), 0), out=buf1635)
        buf1636 = buf1607; del buf1607  # reuse
        # Topologically Sorted Source Nodes: [contiguous_55], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1635, buf1636, 16777216, grid=grid(16777216), stream=stream0)
        buf1637 = reinterpret_tensor(buf1623, (16384, 16384), (16384, 1), 0); del buf1623  # reuse
        # Topologically Sorted Source Nodes: [y_222], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1636, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg449_1, (1024, 16384), (1, 1024), 0), out=buf1637)
        del arg449_1
        # Topologically Sorted Source Nodes: [tensor_110], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1637, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_276], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1637, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1642 = buf1583; del buf1583  # reuse
        buf1644 = reinterpret_tensor(buf1529, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1529  # reuse
        # Topologically Sorted Source Nodes: [x_270, x_272, x_275, x_277, float_224, mul_836, mean_111, add_334, rsqrt_111, mul_837, output_222, output_223], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1642, buf1588, buf1608, buf1617, buf1637, arg450_1, buf1644, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg450_1
        buf1645 = buf1615; del buf1615  # reuse
        # Topologically Sorted Source Nodes: [x_278], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1644, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg451_1, (16384, 6656), (1, 16384), 0), out=buf1645)
        del arg451_1
        buf1646 = buf1616; del buf1616  # reuse
        # Topologically Sorted Source Nodes: [silu_55, mul_839], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1645, buf1646, 54525952, grid=grid(54525952), stream=stream0)
        buf1647 = reinterpret_tensor(buf1644, (16384, 16384), (16384, 1), 0); del buf1644  # reuse
        # Topologically Sorted Source Nodes: [y_223], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1646, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg452_1, (3328, 16384), (1, 3328), 0), out=buf1647)
        del arg452_1
        # Topologically Sorted Source Nodes: [tensor_111], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1647, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_279], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1647, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1653 = reinterpret_tensor(buf1637, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1637  # reuse
        # Topologically Sorted Source Nodes: [x_280, float_225, mul_840, mean_112, add_336, rsqrt_112, mul_841, output_224, output_225], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1642, buf1647, arg453_1, buf1653, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg453_1
        buf1654 = buf1624; del buf1624  # reuse
        # Topologically Sorted Source Nodes: [linear_224], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1653, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg454_1, (16384, 1280), (1, 16384), 0), out=buf1654)
        del arg454_1
        # Topologically Sorted Source Nodes: [setitem_112, setitem_113], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1654, arg0_1, arg455_1, arg456_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1656 = reinterpret_tensor(buf1635, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1635  # reuse
        # Topologically Sorted Source Nodes: [y_224], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1654, arg2_1, arg0_1, buf1656, 16777216, grid=grid(16777216), stream=stream0)
        buf1657 = reinterpret_tensor(buf1634, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1634  # reuse
        # Topologically Sorted Source Nodes: [y_224], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg455_1, buf1657, 25165824, grid=grid(25165824), stream=stream0)
        del arg455_1
        buf1658 = reinterpret_tensor(buf1633, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1633  # reuse
        # Topologically Sorted Source Nodes: [y_224], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1656, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1657, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1658)
        buf1663 = reinterpret_tensor(buf1658, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1658  # reuse
        # Topologically Sorted Source Nodes: [mask, y_224], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1663, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1664 = reinterpret_tensor(buf1657, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1657  # reuse
        # Topologically Sorted Source Nodes: [y_224], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg456_1, buf1664, 25165824, grid=grid(25165824), stream=stream0)
        del arg456_1
        buf1665 = reinterpret_tensor(buf1656, (128, 1024, 128), (131072, 128, 1), 0); del buf1656  # reuse
        # Topologically Sorted Source Nodes: [y_224], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1663, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1664, (128, 1536, 128), (196608, 128, 1), 0), out=buf1665)
        buf1666 = buf1636; del buf1636  # reuse
        # Topologically Sorted Source Nodes: [contiguous_56], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1665, buf1666, 16777216, grid=grid(16777216), stream=stream0)
        buf1667 = reinterpret_tensor(buf1653, (16384, 16384), (16384, 1), 0); del buf1653  # reuse
        # Topologically Sorted Source Nodes: [y_226], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1666, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg457_1, (1024, 16384), (1, 1024), 0), out=buf1667)
        del arg457_1
        # Topologically Sorted Source Nodes: [tensor_112], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1667, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_281], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1667, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1673 = reinterpret_tensor(buf1617, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1617  # reuse
        # Topologically Sorted Source Nodes: [x_280, x_282, float_228, mul_851, mean_113, add_340, rsqrt_113, mul_852, output_226, output_227], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1642, buf1647, buf1667, arg458_1, buf1673, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg458_1
        buf1674 = buf1645; del buf1645  # reuse
        # Topologically Sorted Source Nodes: [x_283], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1673, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg459_1, (16384, 6656), (1, 16384), 0), out=buf1674)
        del arg459_1
        buf1675 = buf1646; del buf1646  # reuse
        # Topologically Sorted Source Nodes: [silu_56, mul_854], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1674, buf1675, 54525952, grid=grid(54525952), stream=stream0)
        buf1676 = reinterpret_tensor(buf1673, (16384, 16384), (16384, 1), 0); del buf1673  # reuse
        # Topologically Sorted Source Nodes: [y_227], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1675, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg460_1, (3328, 16384), (1, 3328), 0), out=buf1676)
        del arg460_1
        # Topologically Sorted Source Nodes: [tensor_113], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1676, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_284], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1676, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1682 = reinterpret_tensor(buf1608, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1608  # reuse
        # Topologically Sorted Source Nodes: [x_280, x_282, x_285, float_229, mul_855, mean_114, add_342, rsqrt_114, mul_856, output_228, output_229], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1642, buf1647, buf1667, buf1676, arg461_1, buf1682, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg461_1
        buf1683 = buf1654; del buf1654  # reuse
        # Topologically Sorted Source Nodes: [linear_228], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1682, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg462_1, (16384, 1280), (1, 16384), 0), out=buf1683)
        del arg462_1
        # Topologically Sorted Source Nodes: [setitem_114, setitem_115], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1683, arg0_1, arg463_1, arg464_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1685 = reinterpret_tensor(buf1665, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1665  # reuse
        # Topologically Sorted Source Nodes: [y_228], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1683, arg2_1, arg0_1, buf1685, 16777216, grid=grid(16777216), stream=stream0)
        buf1686 = reinterpret_tensor(buf1664, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1664  # reuse
        # Topologically Sorted Source Nodes: [y_228], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg463_1, buf1686, 25165824, grid=grid(25165824), stream=stream0)
        del arg463_1
        buf1687 = reinterpret_tensor(buf1663, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1663  # reuse
        # Topologically Sorted Source Nodes: [y_228], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1685, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1686, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1687)
        buf1692 = reinterpret_tensor(buf1687, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1687  # reuse
        # Topologically Sorted Source Nodes: [mask, y_228], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1692, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1693 = reinterpret_tensor(buf1686, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1686  # reuse
        # Topologically Sorted Source Nodes: [y_228], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg464_1, buf1693, 25165824, grid=grid(25165824), stream=stream0)
        del arg464_1
        buf1694 = reinterpret_tensor(buf1685, (128, 1024, 128), (131072, 128, 1), 0); del buf1685  # reuse
        # Topologically Sorted Source Nodes: [y_228], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1692, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1693, (128, 1536, 128), (196608, 128, 1), 0), out=buf1694)
        buf1695 = buf1666; del buf1666  # reuse
        # Topologically Sorted Source Nodes: [contiguous_57], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1694, buf1695, 16777216, grid=grid(16777216), stream=stream0)
        buf1696 = reinterpret_tensor(buf1682, (16384, 16384), (16384, 1), 0); del buf1682  # reuse
        # Topologically Sorted Source Nodes: [y_230], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1695, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg465_1, (1024, 16384), (1, 1024), 0), out=buf1696)
        del arg465_1
        # Topologically Sorted Source Nodes: [tensor_114], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1696, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_286], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1696, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1701 = buf1642; del buf1642  # reuse
        buf1703 = reinterpret_tensor(buf1588, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1588  # reuse
        # Topologically Sorted Source Nodes: [x_280, x_282, x_285, x_287, float_232, mul_866, mean_115, add_346, rsqrt_115, mul_867, output_230, output_231], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1701, buf1647, buf1667, buf1676, buf1696, arg466_1, buf1703, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg466_1
        buf1704 = buf1674; del buf1674  # reuse
        # Topologically Sorted Source Nodes: [x_288], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1703, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg467_1, (16384, 6656), (1, 16384), 0), out=buf1704)
        del arg467_1
        buf1705 = buf1675; del buf1675  # reuse
        # Topologically Sorted Source Nodes: [silu_57, mul_869], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1704, buf1705, 54525952, grid=grid(54525952), stream=stream0)
        buf1706 = reinterpret_tensor(buf1703, (16384, 16384), (16384, 1), 0); del buf1703  # reuse
        # Topologically Sorted Source Nodes: [y_231], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1705, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg468_1, (3328, 16384), (1, 3328), 0), out=buf1706)
        del arg468_1
        # Topologically Sorted Source Nodes: [tensor_115], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1706, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_289], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1706, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1712 = reinterpret_tensor(buf1696, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1696  # reuse
        # Topologically Sorted Source Nodes: [x_290, float_233, mul_870, mean_116, add_348, rsqrt_116, mul_871, output_232, output_233], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1701, buf1706, arg469_1, buf1712, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg469_1
        buf1713 = buf1683; del buf1683  # reuse
        # Topologically Sorted Source Nodes: [linear_232], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1712, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg470_1, (16384, 1280), (1, 16384), 0), out=buf1713)
        del arg470_1
        # Topologically Sorted Source Nodes: [setitem_116, setitem_117], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1713, arg0_1, arg471_1, arg472_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1715 = reinterpret_tensor(buf1694, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1694  # reuse
        # Topologically Sorted Source Nodes: [y_232], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1713, arg2_1, arg0_1, buf1715, 16777216, grid=grid(16777216), stream=stream0)
        buf1716 = reinterpret_tensor(buf1693, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1693  # reuse
        # Topologically Sorted Source Nodes: [y_232], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg471_1, buf1716, 25165824, grid=grid(25165824), stream=stream0)
        del arg471_1
        buf1717 = reinterpret_tensor(buf1692, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1692  # reuse
        # Topologically Sorted Source Nodes: [y_232], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1715, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1716, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1717)
        buf1722 = reinterpret_tensor(buf1717, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1717  # reuse
        # Topologically Sorted Source Nodes: [mask, y_232], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1722, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1723 = reinterpret_tensor(buf1716, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1716  # reuse
        # Topologically Sorted Source Nodes: [y_232], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg472_1, buf1723, 25165824, grid=grid(25165824), stream=stream0)
        del arg472_1
        buf1724 = reinterpret_tensor(buf1715, (128, 1024, 128), (131072, 128, 1), 0); del buf1715  # reuse
        # Topologically Sorted Source Nodes: [y_232], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1722, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1723, (128, 1536, 128), (196608, 128, 1), 0), out=buf1724)
        buf1725 = buf1695; del buf1695  # reuse
        # Topologically Sorted Source Nodes: [contiguous_58], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1724, buf1725, 16777216, grid=grid(16777216), stream=stream0)
        buf1726 = reinterpret_tensor(buf1712, (16384, 16384), (16384, 1), 0); del buf1712  # reuse
        # Topologically Sorted Source Nodes: [y_234], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1725, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg473_1, (1024, 16384), (1, 1024), 0), out=buf1726)
        del arg473_1
        # Topologically Sorted Source Nodes: [tensor_116], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1726, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_291], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1726, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1732 = reinterpret_tensor(buf1676, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1676  # reuse
        # Topologically Sorted Source Nodes: [x_290, x_292, float_236, mul_881, mean_117, add_352, rsqrt_117, mul_882, output_234, output_235], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1701, buf1706, buf1726, arg474_1, buf1732, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg474_1
        buf1733 = buf1704; del buf1704  # reuse
        # Topologically Sorted Source Nodes: [x_293], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1732, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg475_1, (16384, 6656), (1, 16384), 0), out=buf1733)
        del arg475_1
        buf1734 = buf1705; del buf1705  # reuse
        # Topologically Sorted Source Nodes: [silu_58, mul_884], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1733, buf1734, 54525952, grid=grid(54525952), stream=stream0)
        buf1735 = reinterpret_tensor(buf1732, (16384, 16384), (16384, 1), 0); del buf1732  # reuse
        # Topologically Sorted Source Nodes: [y_235], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1734, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg476_1, (3328, 16384), (1, 3328), 0), out=buf1735)
        del arg476_1
        # Topologically Sorted Source Nodes: [tensor_117], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1735, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_294], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1735, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1741 = reinterpret_tensor(buf1667, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1667  # reuse
        # Topologically Sorted Source Nodes: [x_290, x_292, x_295, float_237, mul_885, mean_118, add_354, rsqrt_118, mul_886, output_236, output_237], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1701, buf1706, buf1726, buf1735, arg477_1, buf1741, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg477_1
        buf1742 = buf1713; del buf1713  # reuse
        # Topologically Sorted Source Nodes: [linear_236], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1741, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg478_1, (16384, 1280), (1, 16384), 0), out=buf1742)
        del arg478_1
        # Topologically Sorted Source Nodes: [setitem_118, setitem_119], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1742, arg0_1, arg479_1, arg480_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1744 = reinterpret_tensor(buf1724, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1724  # reuse
        # Topologically Sorted Source Nodes: [y_236], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1742, arg2_1, arg0_1, buf1744, 16777216, grid=grid(16777216), stream=stream0)
        buf1745 = reinterpret_tensor(buf1723, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1723  # reuse
        # Topologically Sorted Source Nodes: [y_236], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg479_1, buf1745, 25165824, grid=grid(25165824), stream=stream0)
        del arg479_1
        buf1746 = reinterpret_tensor(buf1722, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1722  # reuse
        # Topologically Sorted Source Nodes: [y_236], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1744, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1745, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1746)
        buf1751 = reinterpret_tensor(buf1746, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1746  # reuse
        # Topologically Sorted Source Nodes: [mask, y_236], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1751, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1752 = reinterpret_tensor(buf1745, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1745  # reuse
        # Topologically Sorted Source Nodes: [y_236], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg480_1, buf1752, 25165824, grid=grid(25165824), stream=stream0)
        del arg480_1
        buf1753 = reinterpret_tensor(buf1744, (128, 1024, 128), (131072, 128, 1), 0); del buf1744  # reuse
        # Topologically Sorted Source Nodes: [y_236], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1751, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1752, (128, 1536, 128), (196608, 128, 1), 0), out=buf1753)
        buf1754 = buf1725; del buf1725  # reuse
        # Topologically Sorted Source Nodes: [contiguous_59], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1753, buf1754, 16777216, grid=grid(16777216), stream=stream0)
        buf1755 = reinterpret_tensor(buf1741, (16384, 16384), (16384, 1), 0); del buf1741  # reuse
        # Topologically Sorted Source Nodes: [y_238], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1754, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg481_1, (1024, 16384), (1, 1024), 0), out=buf1755)
        del arg481_1
        # Topologically Sorted Source Nodes: [tensor_118], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1755, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_296], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1755, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1760 = buf1701; del buf1701  # reuse
        buf1762 = reinterpret_tensor(buf1647, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1647  # reuse
        # Topologically Sorted Source Nodes: [x_290, x_292, x_295, x_297, float_240, mul_896, mean_119, add_358, rsqrt_119, mul_897, output_238, output_239], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1760, buf1706, buf1726, buf1735, buf1755, arg482_1, buf1762, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg482_1
        buf1763 = buf1733; del buf1733  # reuse
        # Topologically Sorted Source Nodes: [x_298], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1762, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg483_1, (16384, 6656), (1, 16384), 0), out=buf1763)
        del arg483_1
        buf1764 = buf1734; del buf1734  # reuse
        # Topologically Sorted Source Nodes: [silu_59, mul_899], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1763, buf1764, 54525952, grid=grid(54525952), stream=stream0)
        buf1765 = reinterpret_tensor(buf1762, (16384, 16384), (16384, 1), 0); del buf1762  # reuse
        # Topologically Sorted Source Nodes: [y_239], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1764, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg484_1, (3328, 16384), (1, 3328), 0), out=buf1765)
        del arg484_1
        # Topologically Sorted Source Nodes: [tensor_119], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1765, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_299], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1765, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1771 = reinterpret_tensor(buf1755, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1755  # reuse
        # Topologically Sorted Source Nodes: [x_300, float_241, mul_900, mean_120, add_360, rsqrt_120, mul_901, output_240, output_241], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1760, buf1765, arg485_1, buf1771, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg485_1
        buf1772 = buf1742; del buf1742  # reuse
        # Topologically Sorted Source Nodes: [linear_240], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1771, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg486_1, (16384, 1280), (1, 16384), 0), out=buf1772)
        del arg486_1
        # Topologically Sorted Source Nodes: [setitem_120, setitem_121], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1772, arg0_1, arg487_1, arg488_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1774 = reinterpret_tensor(buf1753, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1753  # reuse
        # Topologically Sorted Source Nodes: [y_240], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1772, arg2_1, arg0_1, buf1774, 16777216, grid=grid(16777216), stream=stream0)
        buf1775 = reinterpret_tensor(buf1752, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1752  # reuse
        # Topologically Sorted Source Nodes: [y_240], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg487_1, buf1775, 25165824, grid=grid(25165824), stream=stream0)
        del arg487_1
        buf1776 = reinterpret_tensor(buf1751, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1751  # reuse
        # Topologically Sorted Source Nodes: [y_240], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1774, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1775, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1776)
        buf1781 = reinterpret_tensor(buf1776, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1776  # reuse
        # Topologically Sorted Source Nodes: [mask, y_240], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1781, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1782 = reinterpret_tensor(buf1775, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1775  # reuse
        # Topologically Sorted Source Nodes: [y_240], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg488_1, buf1782, 25165824, grid=grid(25165824), stream=stream0)
        del arg488_1
        buf1783 = reinterpret_tensor(buf1774, (128, 1024, 128), (131072, 128, 1), 0); del buf1774  # reuse
        # Topologically Sorted Source Nodes: [y_240], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1781, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1782, (128, 1536, 128), (196608, 128, 1), 0), out=buf1783)
        buf1784 = buf1754; del buf1754  # reuse
        # Topologically Sorted Source Nodes: [contiguous_60], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1783, buf1784, 16777216, grid=grid(16777216), stream=stream0)
        buf1785 = reinterpret_tensor(buf1771, (16384, 16384), (16384, 1), 0); del buf1771  # reuse
        # Topologically Sorted Source Nodes: [y_242], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1784, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg489_1, (1024, 16384), (1, 1024), 0), out=buf1785)
        del arg489_1
        # Topologically Sorted Source Nodes: [tensor_120], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1785, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_301], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1785, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1791 = reinterpret_tensor(buf1735, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1735  # reuse
        # Topologically Sorted Source Nodes: [x_300, x_302, float_244, mul_911, mean_121, add_364, rsqrt_121, mul_912, output_242, output_243], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1760, buf1765, buf1785, arg490_1, buf1791, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg490_1
        buf1792 = buf1763; del buf1763  # reuse
        # Topologically Sorted Source Nodes: [x_303], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1791, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg491_1, (16384, 6656), (1, 16384), 0), out=buf1792)
        del arg491_1
        buf1793 = buf1764; del buf1764  # reuse
        # Topologically Sorted Source Nodes: [silu_60, mul_914], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1792, buf1793, 54525952, grid=grid(54525952), stream=stream0)
        buf1794 = reinterpret_tensor(buf1791, (16384, 16384), (16384, 1), 0); del buf1791  # reuse
        # Topologically Sorted Source Nodes: [y_243], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1793, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg492_1, (3328, 16384), (1, 3328), 0), out=buf1794)
        del arg492_1
        # Topologically Sorted Source Nodes: [tensor_121], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1794, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_304], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1794, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1800 = reinterpret_tensor(buf1726, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1726  # reuse
        # Topologically Sorted Source Nodes: [x_300, x_302, x_305, float_245, mul_915, mean_122, add_366, rsqrt_122, mul_916, output_244, output_245], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1760, buf1765, buf1785, buf1794, arg493_1, buf1800, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg493_1
        buf1801 = buf1772; del buf1772  # reuse
        # Topologically Sorted Source Nodes: [linear_244], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1800, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg494_1, (16384, 1280), (1, 16384), 0), out=buf1801)
        del arg494_1
        # Topologically Sorted Source Nodes: [setitem_122, setitem_123], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1801, arg0_1, arg495_1, arg496_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1803 = reinterpret_tensor(buf1783, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1783  # reuse
        # Topologically Sorted Source Nodes: [y_244], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1801, arg2_1, arg0_1, buf1803, 16777216, grid=grid(16777216), stream=stream0)
        buf1804 = reinterpret_tensor(buf1782, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1782  # reuse
        # Topologically Sorted Source Nodes: [y_244], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg495_1, buf1804, 25165824, grid=grid(25165824), stream=stream0)
        del arg495_1
        buf1805 = reinterpret_tensor(buf1781, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1781  # reuse
        # Topologically Sorted Source Nodes: [y_244], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1803, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1804, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1805)
        buf1810 = reinterpret_tensor(buf1805, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1805  # reuse
        # Topologically Sorted Source Nodes: [mask, y_244], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1810, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1811 = reinterpret_tensor(buf1804, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1804  # reuse
        # Topologically Sorted Source Nodes: [y_244], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg496_1, buf1811, 25165824, grid=grid(25165824), stream=stream0)
        del arg496_1
        buf1812 = reinterpret_tensor(buf1803, (128, 1024, 128), (131072, 128, 1), 0); del buf1803  # reuse
        # Topologically Sorted Source Nodes: [y_244], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1810, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1811, (128, 1536, 128), (196608, 128, 1), 0), out=buf1812)
        buf1813 = buf1784; del buf1784  # reuse
        # Topologically Sorted Source Nodes: [contiguous_61], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1812, buf1813, 16777216, grid=grid(16777216), stream=stream0)
        buf1814 = reinterpret_tensor(buf1800, (16384, 16384), (16384, 1), 0); del buf1800  # reuse
        # Topologically Sorted Source Nodes: [y_246], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1813, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg497_1, (1024, 16384), (1, 1024), 0), out=buf1814)
        del arg497_1
        # Topologically Sorted Source Nodes: [tensor_122], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1814, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_306], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1814, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1819 = buf1760; del buf1760  # reuse
        buf1821 = reinterpret_tensor(buf1706, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1706  # reuse
        # Topologically Sorted Source Nodes: [x_300, x_302, x_305, x_307, float_248, mul_926, mean_123, add_370, rsqrt_123, mul_927, output_246, output_247], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1819, buf1765, buf1785, buf1794, buf1814, arg498_1, buf1821, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg498_1
        buf1822 = buf1792; del buf1792  # reuse
        # Topologically Sorted Source Nodes: [x_308], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1821, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg499_1, (16384, 6656), (1, 16384), 0), out=buf1822)
        del arg499_1
        buf1823 = buf1793; del buf1793  # reuse
        # Topologically Sorted Source Nodes: [silu_61, mul_929], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1822, buf1823, 54525952, grid=grid(54525952), stream=stream0)
        buf1824 = reinterpret_tensor(buf1821, (16384, 16384), (16384, 1), 0); del buf1821  # reuse
        # Topologically Sorted Source Nodes: [y_247], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1823, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg500_1, (3328, 16384), (1, 3328), 0), out=buf1824)
        del arg500_1
        # Topologically Sorted Source Nodes: [tensor_123], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1824, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_309], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1824, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1830 = reinterpret_tensor(buf1814, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1814  # reuse
        # Topologically Sorted Source Nodes: [x_310, float_249, mul_930, mean_124, add_372, rsqrt_124, mul_931, output_248, output_249], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1819, buf1824, arg501_1, buf1830, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg501_1
        buf1831 = buf1801; del buf1801  # reuse
        # Topologically Sorted Source Nodes: [linear_248], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1830, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg502_1, (16384, 1280), (1, 16384), 0), out=buf1831)
        del arg502_1
        # Topologically Sorted Source Nodes: [setitem_124, setitem_125], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1831, arg0_1, arg503_1, arg504_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1833 = reinterpret_tensor(buf1812, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1812  # reuse
        # Topologically Sorted Source Nodes: [y_248], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1831, arg2_1, arg0_1, buf1833, 16777216, grid=grid(16777216), stream=stream0)
        buf1834 = reinterpret_tensor(buf1811, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1811  # reuse
        # Topologically Sorted Source Nodes: [y_248], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg503_1, buf1834, 25165824, grid=grid(25165824), stream=stream0)
        del arg503_1
        buf1835 = reinterpret_tensor(buf1810, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1810  # reuse
        # Topologically Sorted Source Nodes: [y_248], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1833, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1834, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1835)
        buf1840 = reinterpret_tensor(buf1835, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1835  # reuse
        # Topologically Sorted Source Nodes: [mask, y_248], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1840, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1841 = reinterpret_tensor(buf1834, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1834  # reuse
        # Topologically Sorted Source Nodes: [y_248], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg504_1, buf1841, 25165824, grid=grid(25165824), stream=stream0)
        del arg504_1
        buf1842 = reinterpret_tensor(buf1833, (128, 1024, 128), (131072, 128, 1), 0); del buf1833  # reuse
        # Topologically Sorted Source Nodes: [y_248], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1840, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1841, (128, 1536, 128), (196608, 128, 1), 0), out=buf1842)
        buf1843 = buf1813; del buf1813  # reuse
        # Topologically Sorted Source Nodes: [contiguous_62], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1842, buf1843, 16777216, grid=grid(16777216), stream=stream0)
        buf1844 = reinterpret_tensor(buf1830, (16384, 16384), (16384, 1), 0); del buf1830  # reuse
        # Topologically Sorted Source Nodes: [y_250], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1843, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg505_1, (1024, 16384), (1, 1024), 0), out=buf1844)
        del arg505_1
        # Topologically Sorted Source Nodes: [tensor_124], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1844, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_311], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1844, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1850 = reinterpret_tensor(buf1794, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1794  # reuse
        # Topologically Sorted Source Nodes: [x_310, x_312, float_252, mul_941, mean_125, add_376, rsqrt_125, mul_942, output_250, output_251], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1819, buf1824, buf1844, arg506_1, buf1850, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg506_1
        buf1851 = buf1822; del buf1822  # reuse
        # Topologically Sorted Source Nodes: [x_313], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1850, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg507_1, (16384, 6656), (1, 16384), 0), out=buf1851)
        del arg507_1
        buf1852 = buf1823; del buf1823  # reuse
        # Topologically Sorted Source Nodes: [silu_62, mul_944], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1851, buf1852, 54525952, grid=grid(54525952), stream=stream0)
        buf1853 = reinterpret_tensor(buf1850, (16384, 16384), (16384, 1), 0); del buf1850  # reuse
        # Topologically Sorted Source Nodes: [y_251], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1852, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg508_1, (3328, 16384), (1, 3328), 0), out=buf1853)
        del arg508_1
        # Topologically Sorted Source Nodes: [tensor_125], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1853, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_314], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1853, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1859 = reinterpret_tensor(buf1785, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1785  # reuse
        # Topologically Sorted Source Nodes: [x_310, x_312, x_315, float_253, mul_945, mean_126, add_378, rsqrt_126, mul_946, output_252, output_253], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1819, buf1824, buf1844, buf1853, arg509_1, buf1859, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg509_1
        buf1860 = buf1831; del buf1831  # reuse
        # Topologically Sorted Source Nodes: [linear_252], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1859, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg510_1, (16384, 1280), (1, 16384), 0), out=buf1860)
        del arg510_1
        # Topologically Sorted Source Nodes: [setitem_126, setitem_127], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1860, arg0_1, arg511_1, arg512_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1862 = reinterpret_tensor(buf1842, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1842  # reuse
        # Topologically Sorted Source Nodes: [y_252], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1860, arg2_1, arg0_1, buf1862, 16777216, grid=grid(16777216), stream=stream0)
        buf1863 = reinterpret_tensor(buf1841, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1841  # reuse
        # Topologically Sorted Source Nodes: [y_252], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg511_1, buf1863, 25165824, grid=grid(25165824), stream=stream0)
        del arg511_1
        buf1864 = reinterpret_tensor(buf1840, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1840  # reuse
        # Topologically Sorted Source Nodes: [y_252], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1862, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1863, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1864)
        buf1869 = reinterpret_tensor(buf1864, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1864  # reuse
        # Topologically Sorted Source Nodes: [mask, y_252], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1869, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1870 = reinterpret_tensor(buf1863, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1863  # reuse
        # Topologically Sorted Source Nodes: [y_252], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg512_1, buf1870, 25165824, grid=grid(25165824), stream=stream0)
        del arg512_1
        buf1871 = reinterpret_tensor(buf1862, (128, 1024, 128), (131072, 128, 1), 0); del buf1862  # reuse
        # Topologically Sorted Source Nodes: [y_252], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1869, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1870, (128, 1536, 128), (196608, 128, 1), 0), out=buf1871)
        buf1872 = buf1843; del buf1843  # reuse
        # Topologically Sorted Source Nodes: [contiguous_63], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1871, buf1872, 16777216, grid=grid(16777216), stream=stream0)
        buf1873 = reinterpret_tensor(buf1859, (16384, 16384), (16384, 1), 0); del buf1859  # reuse
        # Topologically Sorted Source Nodes: [y_254], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1872, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg513_1, (1024, 16384), (1, 1024), 0), out=buf1873)
        del arg513_1
        # Topologically Sorted Source Nodes: [tensor_126], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1873, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_316], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1873, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1878 = buf1819; del buf1819  # reuse
        buf1880 = reinterpret_tensor(buf1765, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1765  # reuse
        # Topologically Sorted Source Nodes: [x_310, x_312, x_315, x_317, float_256, mul_956, mean_127, add_382, rsqrt_127, mul_957, output_254, output_255], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1878, buf1824, buf1844, buf1853, buf1873, arg514_1, buf1880, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg514_1
        buf1881 = buf1851; del buf1851  # reuse
        # Topologically Sorted Source Nodes: [x_318], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1880, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg515_1, (16384, 6656), (1, 16384), 0), out=buf1881)
        del arg515_1
        buf1882 = buf1852; del buf1852  # reuse
        # Topologically Sorted Source Nodes: [silu_63, mul_959], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1881, buf1882, 54525952, grid=grid(54525952), stream=stream0)
        buf1883 = reinterpret_tensor(buf1880, (16384, 16384), (16384, 1), 0); del buf1880  # reuse
        # Topologically Sorted Source Nodes: [y_255], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1882, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg516_1, (3328, 16384), (1, 3328), 0), out=buf1883)
        del arg516_1
        # Topologically Sorted Source Nodes: [tensor_127], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1883, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_319], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1883, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1889 = reinterpret_tensor(buf1873, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1873  # reuse
        # Topologically Sorted Source Nodes: [x_320, float_257, mul_960, mean_128, add_384, rsqrt_128, mul_961, output_256, output_257], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1878, buf1883, arg517_1, buf1889, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg517_1
        buf1890 = buf1860; del buf1860  # reuse
        # Topologically Sorted Source Nodes: [linear_256], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1889, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg518_1, (16384, 1280), (1, 16384), 0), out=buf1890)
        del arg518_1
        # Topologically Sorted Source Nodes: [setitem_128, setitem_129], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1890, arg0_1, arg519_1, arg520_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1892 = reinterpret_tensor(buf1871, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1871  # reuse
        # Topologically Sorted Source Nodes: [y_256], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1890, arg2_1, arg0_1, buf1892, 16777216, grid=grid(16777216), stream=stream0)
        buf1893 = reinterpret_tensor(buf1870, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1870  # reuse
        # Topologically Sorted Source Nodes: [y_256], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg519_1, buf1893, 25165824, grid=grid(25165824), stream=stream0)
        del arg519_1
        buf1894 = reinterpret_tensor(buf1869, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1869  # reuse
        # Topologically Sorted Source Nodes: [y_256], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1892, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1893, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1894)
        buf1899 = reinterpret_tensor(buf1894, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1894  # reuse
        # Topologically Sorted Source Nodes: [mask, y_256], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1899, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1900 = reinterpret_tensor(buf1893, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1893  # reuse
        # Topologically Sorted Source Nodes: [y_256], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg520_1, buf1900, 25165824, grid=grid(25165824), stream=stream0)
        del arg520_1
        buf1901 = reinterpret_tensor(buf1892, (128, 1024, 128), (131072, 128, 1), 0); del buf1892  # reuse
        # Topologically Sorted Source Nodes: [y_256], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1899, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1900, (128, 1536, 128), (196608, 128, 1), 0), out=buf1901)
        buf1902 = buf1872; del buf1872  # reuse
        # Topologically Sorted Source Nodes: [contiguous_64], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1901, buf1902, 16777216, grid=grid(16777216), stream=stream0)
        buf1903 = reinterpret_tensor(buf1889, (16384, 16384), (16384, 1), 0); del buf1889  # reuse
        # Topologically Sorted Source Nodes: [y_258], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1902, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg521_1, (1024, 16384), (1, 1024), 0), out=buf1903)
        del arg521_1
        # Topologically Sorted Source Nodes: [tensor_128], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1903, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_321], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1903, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1909 = reinterpret_tensor(buf1853, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1853  # reuse
        # Topologically Sorted Source Nodes: [x_320, x_322, float_260, mul_971, mean_129, add_388, rsqrt_129, mul_972, output_258, output_259], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1878, buf1883, buf1903, arg522_1, buf1909, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg522_1
        buf1910 = buf1881; del buf1881  # reuse
        # Topologically Sorted Source Nodes: [x_323], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1909, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg523_1, (16384, 6656), (1, 16384), 0), out=buf1910)
        del arg523_1
        buf1911 = buf1882; del buf1882  # reuse
        # Topologically Sorted Source Nodes: [silu_64, mul_974], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1910, buf1911, 54525952, grid=grid(54525952), stream=stream0)
        buf1912 = reinterpret_tensor(buf1909, (16384, 16384), (16384, 1), 0); del buf1909  # reuse
        # Topologically Sorted Source Nodes: [y_259], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1911, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg524_1, (3328, 16384), (1, 3328), 0), out=buf1912)
        del arg524_1
        # Topologically Sorted Source Nodes: [tensor_129], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1912, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_324], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1912, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1918 = reinterpret_tensor(buf1844, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1844  # reuse
        # Topologically Sorted Source Nodes: [x_320, x_322, x_325, float_261, mul_975, mean_130, add_390, rsqrt_130, mul_976, output_260, output_261], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1878, buf1883, buf1903, buf1912, arg525_1, buf1918, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg525_1
        buf1919 = buf1890; del buf1890  # reuse
        # Topologically Sorted Source Nodes: [linear_260], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1918, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg526_1, (16384, 1280), (1, 16384), 0), out=buf1919)
        del arg526_1
        # Topologically Sorted Source Nodes: [setitem_130, setitem_131], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1919, arg0_1, arg527_1, arg528_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1921 = reinterpret_tensor(buf1901, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1901  # reuse
        # Topologically Sorted Source Nodes: [y_260], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1919, arg2_1, arg0_1, buf1921, 16777216, grid=grid(16777216), stream=stream0)
        buf1922 = reinterpret_tensor(buf1900, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1900  # reuse
        # Topologically Sorted Source Nodes: [y_260], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg527_1, buf1922, 25165824, grid=grid(25165824), stream=stream0)
        del arg527_1
        buf1923 = reinterpret_tensor(buf1899, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1899  # reuse
        # Topologically Sorted Source Nodes: [y_260], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1921, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1922, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1923)
        buf1928 = reinterpret_tensor(buf1923, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1923  # reuse
        # Topologically Sorted Source Nodes: [mask, y_260], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1928, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1929 = reinterpret_tensor(buf1922, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1922  # reuse
        # Topologically Sorted Source Nodes: [y_260], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg528_1, buf1929, 25165824, grid=grid(25165824), stream=stream0)
        del arg528_1
        buf1930 = reinterpret_tensor(buf1921, (128, 1024, 128), (131072, 128, 1), 0); del buf1921  # reuse
        # Topologically Sorted Source Nodes: [y_260], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1928, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1929, (128, 1536, 128), (196608, 128, 1), 0), out=buf1930)
        buf1931 = buf1902; del buf1902  # reuse
        # Topologically Sorted Source Nodes: [contiguous_65], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1930, buf1931, 16777216, grid=grid(16777216), stream=stream0)
        buf1932 = reinterpret_tensor(buf1918, (16384, 16384), (16384, 1), 0); del buf1918  # reuse
        # Topologically Sorted Source Nodes: [y_262], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1931, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg529_1, (1024, 16384), (1, 1024), 0), out=buf1932)
        del arg529_1
        # Topologically Sorted Source Nodes: [tensor_130], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1932, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_326], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1932, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1937 = buf1878; del buf1878  # reuse
        buf1939 = reinterpret_tensor(buf1824, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1824  # reuse
        # Topologically Sorted Source Nodes: [x_320, x_322, x_325, x_327, float_264, mul_986, mean_131, add_394, rsqrt_131, mul_987, output_262, output_263], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1937, buf1883, buf1903, buf1912, buf1932, arg530_1, buf1939, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg530_1
        buf1940 = buf1910; del buf1910  # reuse
        # Topologically Sorted Source Nodes: [x_328], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1939, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg531_1, (16384, 6656), (1, 16384), 0), out=buf1940)
        del arg531_1
        buf1941 = buf1911; del buf1911  # reuse
        # Topologically Sorted Source Nodes: [silu_65, mul_989], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1940, buf1941, 54525952, grid=grid(54525952), stream=stream0)
        buf1942 = reinterpret_tensor(buf1939, (16384, 16384), (16384, 1), 0); del buf1939  # reuse
        # Topologically Sorted Source Nodes: [y_263], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1941, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg532_1, (3328, 16384), (1, 3328), 0), out=buf1942)
        del arg532_1
        # Topologically Sorted Source Nodes: [tensor_131], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1942, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_329], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1942, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1948 = reinterpret_tensor(buf1932, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1932  # reuse
        # Topologically Sorted Source Nodes: [x_330, float_265, mul_990, mean_132, add_396, rsqrt_132, mul_991, output_264, output_265], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1937, buf1942, arg533_1, buf1948, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg533_1
        buf1949 = buf1919; del buf1919  # reuse
        # Topologically Sorted Source Nodes: [linear_264], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1948, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg534_1, (16384, 1280), (1, 16384), 0), out=buf1949)
        del arg534_1
        # Topologically Sorted Source Nodes: [setitem_132, setitem_133], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1949, arg0_1, arg535_1, arg536_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1951 = reinterpret_tensor(buf1930, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1930  # reuse
        # Topologically Sorted Source Nodes: [y_264], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1949, arg2_1, arg0_1, buf1951, 16777216, grid=grid(16777216), stream=stream0)
        buf1952 = reinterpret_tensor(buf1929, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1929  # reuse
        # Topologically Sorted Source Nodes: [y_264], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg535_1, buf1952, 25165824, grid=grid(25165824), stream=stream0)
        del arg535_1
        buf1953 = reinterpret_tensor(buf1928, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1928  # reuse
        # Topologically Sorted Source Nodes: [y_264], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1951, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1952, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1953)
        buf1958 = reinterpret_tensor(buf1953, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1953  # reuse
        # Topologically Sorted Source Nodes: [mask, y_264], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1958, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1959 = reinterpret_tensor(buf1952, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1952  # reuse
        # Topologically Sorted Source Nodes: [y_264], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg536_1, buf1959, 25165824, grid=grid(25165824), stream=stream0)
        del arg536_1
        buf1960 = reinterpret_tensor(buf1951, (128, 1024, 128), (131072, 128, 1), 0); del buf1951  # reuse
        # Topologically Sorted Source Nodes: [y_264], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1958, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1959, (128, 1536, 128), (196608, 128, 1), 0), out=buf1960)
        buf1961 = buf1931; del buf1931  # reuse
        # Topologically Sorted Source Nodes: [contiguous_66], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1960, buf1961, 16777216, grid=grid(16777216), stream=stream0)
        buf1962 = reinterpret_tensor(buf1948, (16384, 16384), (16384, 1), 0); del buf1948  # reuse
        # Topologically Sorted Source Nodes: [y_266], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1961, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg537_1, (1024, 16384), (1, 1024), 0), out=buf1962)
        del arg537_1
        # Topologically Sorted Source Nodes: [tensor_132], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1962, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_331], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1962, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1968 = reinterpret_tensor(buf1912, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1912  # reuse
        # Topologically Sorted Source Nodes: [x_330, x_332, float_268, mul_1001, mean_133, add_400, rsqrt_133, mul_1002, output_266, output_267], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1937, buf1942, buf1962, arg538_1, buf1968, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg538_1
        buf1969 = buf1940; del buf1940  # reuse
        # Topologically Sorted Source Nodes: [x_333], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1968, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg539_1, (16384, 6656), (1, 16384), 0), out=buf1969)
        del arg539_1
        buf1970 = buf1941; del buf1941  # reuse
        # Topologically Sorted Source Nodes: [silu_66, mul_1004], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1969, buf1970, 54525952, grid=grid(54525952), stream=stream0)
        buf1971 = reinterpret_tensor(buf1968, (16384, 16384), (16384, 1), 0); del buf1968  # reuse
        # Topologically Sorted Source Nodes: [y_267], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1970, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg540_1, (3328, 16384), (1, 3328), 0), out=buf1971)
        del arg540_1
        # Topologically Sorted Source Nodes: [tensor_133], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1971, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_334], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1971, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1977 = reinterpret_tensor(buf1903, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1903  # reuse
        # Topologically Sorted Source Nodes: [x_330, x_332, x_335, float_269, mul_1005, mean_134, add_402, rsqrt_134, mul_1006, output_268, output_269], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1937, buf1942, buf1962, buf1971, arg541_1, buf1977, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg541_1
        buf1978 = buf1949; del buf1949  # reuse
        # Topologically Sorted Source Nodes: [linear_268], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1977, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg542_1, (16384, 1280), (1, 16384), 0), out=buf1978)
        del arg542_1
        # Topologically Sorted Source Nodes: [setitem_134, setitem_135], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf1978, arg0_1, arg543_1, arg544_1, 2097152, grid=grid(2097152), stream=stream0)
        buf1980 = reinterpret_tensor(buf1960, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1960  # reuse
        # Topologically Sorted Source Nodes: [y_268], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf1978, arg2_1, arg0_1, buf1980, 16777216, grid=grid(16777216), stream=stream0)
        buf1981 = reinterpret_tensor(buf1959, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1959  # reuse
        # Topologically Sorted Source Nodes: [y_268], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg543_1, buf1981, 25165824, grid=grid(25165824), stream=stream0)
        del arg543_1
        buf1982 = reinterpret_tensor(buf1958, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1958  # reuse
        # Topologically Sorted Source Nodes: [y_268], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1980, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf1981, (128, 128, 1536), (196608, 1536, 1), 0), out=buf1982)
        buf1987 = reinterpret_tensor(buf1982, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf1982  # reuse
        # Topologically Sorted Source Nodes: [mask, y_268], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf1987, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf1988 = reinterpret_tensor(buf1981, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf1981  # reuse
        # Topologically Sorted Source Nodes: [y_268], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg544_1, buf1988, 25165824, grid=grid(25165824), stream=stream0)
        del arg544_1
        buf1989 = reinterpret_tensor(buf1980, (128, 1024, 128), (131072, 128, 1), 0); del buf1980  # reuse
        # Topologically Sorted Source Nodes: [y_268], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf1987, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf1988, (128, 1536, 128), (196608, 128, 1), 0), out=buf1989)
        buf1990 = buf1961; del buf1961  # reuse
        # Topologically Sorted Source Nodes: [contiguous_67], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf1989, buf1990, 16777216, grid=grid(16777216), stream=stream0)
        buf1991 = reinterpret_tensor(buf1977, (16384, 16384), (16384, 1), 0); del buf1977  # reuse
        # Topologically Sorted Source Nodes: [y_270], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1990, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg545_1, (1024, 16384), (1, 1024), 0), out=buf1991)
        del arg545_1
        # Topologically Sorted Source Nodes: [tensor_134], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf1991, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_336], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf1991, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf1996 = buf1937; del buf1937  # reuse
        buf1998 = reinterpret_tensor(buf1883, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1883  # reuse
        # Topologically Sorted Source Nodes: [x_330, x_332, x_335, x_337, float_272, mul_1016, mean_135, add_406, rsqrt_135, mul_1017, output_270, output_271], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf1996, buf1942, buf1962, buf1971, buf1991, arg546_1, buf1998, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg546_1
        buf1999 = buf1969; del buf1969  # reuse
        # Topologically Sorted Source Nodes: [x_338], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf1998, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg547_1, (16384, 6656), (1, 16384), 0), out=buf1999)
        del arg547_1
        buf2000 = buf1970; del buf1970  # reuse
        # Topologically Sorted Source Nodes: [silu_67, mul_1019], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf1999, buf2000, 54525952, grid=grid(54525952), stream=stream0)
        buf2001 = reinterpret_tensor(buf1998, (16384, 16384), (16384, 1), 0); del buf1998  # reuse
        # Topologically Sorted Source Nodes: [y_271], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2000, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg548_1, (3328, 16384), (1, 3328), 0), out=buf2001)
        del arg548_1
        # Topologically Sorted Source Nodes: [tensor_135], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2001, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_339], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2001, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2007 = reinterpret_tensor(buf1991, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1991  # reuse
        # Topologically Sorted Source Nodes: [x_340, float_273, mul_1020, mean_136, add_408, rsqrt_136, mul_1021, output_272, output_273], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf1996, buf2001, arg549_1, buf2007, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg549_1
        buf2008 = buf1978; del buf1978  # reuse
        # Topologically Sorted Source Nodes: [linear_272], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2007, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg550_1, (16384, 1280), (1, 16384), 0), out=buf2008)
        del arg550_1
        # Topologically Sorted Source Nodes: [setitem_136, setitem_137], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2008, arg0_1, arg551_1, arg552_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2010 = reinterpret_tensor(buf1989, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf1989  # reuse
        # Topologically Sorted Source Nodes: [y_272], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2008, arg2_1, arg0_1, buf2010, 16777216, grid=grid(16777216), stream=stream0)
        buf2011 = reinterpret_tensor(buf1988, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf1988  # reuse
        # Topologically Sorted Source Nodes: [y_272], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg551_1, buf2011, 25165824, grid=grid(25165824), stream=stream0)
        del arg551_1
        buf2012 = reinterpret_tensor(buf1987, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf1987  # reuse
        # Topologically Sorted Source Nodes: [y_272], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2010, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2011, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2012)
        buf2017 = reinterpret_tensor(buf2012, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2012  # reuse
        # Topologically Sorted Source Nodes: [mask, y_272], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2017, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2018 = reinterpret_tensor(buf2011, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2011  # reuse
        # Topologically Sorted Source Nodes: [y_272], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg552_1, buf2018, 25165824, grid=grid(25165824), stream=stream0)
        del arg552_1
        buf2019 = reinterpret_tensor(buf2010, (128, 1024, 128), (131072, 128, 1), 0); del buf2010  # reuse
        # Topologically Sorted Source Nodes: [y_272], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2017, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2018, (128, 1536, 128), (196608, 128, 1), 0), out=buf2019)
        buf2020 = buf1990; del buf1990  # reuse
        # Topologically Sorted Source Nodes: [contiguous_68], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2019, buf2020, 16777216, grid=grid(16777216), stream=stream0)
        buf2021 = reinterpret_tensor(buf2007, (16384, 16384), (16384, 1), 0); del buf2007  # reuse
        # Topologically Sorted Source Nodes: [y_274], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2020, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg553_1, (1024, 16384), (1, 1024), 0), out=buf2021)
        del arg553_1
        # Topologically Sorted Source Nodes: [tensor_136], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2021, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_341], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2021, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2027 = reinterpret_tensor(buf1971, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1971  # reuse
        # Topologically Sorted Source Nodes: [x_340, x_342, float_276, mul_1031, mean_137, add_412, rsqrt_137, mul_1032, output_274, output_275], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf1996, buf2001, buf2021, arg554_1, buf2027, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg554_1
        buf2028 = buf1999; del buf1999  # reuse
        # Topologically Sorted Source Nodes: [x_343], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2027, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg555_1, (16384, 6656), (1, 16384), 0), out=buf2028)
        del arg555_1
        buf2029 = buf2000; del buf2000  # reuse
        # Topologically Sorted Source Nodes: [silu_68, mul_1034], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2028, buf2029, 54525952, grid=grid(54525952), stream=stream0)
        buf2030 = reinterpret_tensor(buf2027, (16384, 16384), (16384, 1), 0); del buf2027  # reuse
        # Topologically Sorted Source Nodes: [y_275], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2029, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg556_1, (3328, 16384), (1, 3328), 0), out=buf2030)
        del arg556_1
        # Topologically Sorted Source Nodes: [tensor_137], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2030, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_344], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2030, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2036 = reinterpret_tensor(buf1962, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1962  # reuse
        # Topologically Sorted Source Nodes: [x_340, x_342, x_345, float_277, mul_1035, mean_138, add_414, rsqrt_138, mul_1036, output_276, output_277], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf1996, buf2001, buf2021, buf2030, arg557_1, buf2036, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg557_1
        buf2037 = buf2008; del buf2008  # reuse
        # Topologically Sorted Source Nodes: [linear_276], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2036, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg558_1, (16384, 1280), (1, 16384), 0), out=buf2037)
        del arg558_1
        # Topologically Sorted Source Nodes: [setitem_138, setitem_139], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2037, arg0_1, arg559_1, arg560_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2039 = reinterpret_tensor(buf2019, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2019  # reuse
        # Topologically Sorted Source Nodes: [y_276], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2037, arg2_1, arg0_1, buf2039, 16777216, grid=grid(16777216), stream=stream0)
        buf2040 = reinterpret_tensor(buf2018, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2018  # reuse
        # Topologically Sorted Source Nodes: [y_276], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg559_1, buf2040, 25165824, grid=grid(25165824), stream=stream0)
        del arg559_1
        buf2041 = reinterpret_tensor(buf2017, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2017  # reuse
        # Topologically Sorted Source Nodes: [y_276], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2039, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2040, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2041)
        buf2046 = reinterpret_tensor(buf2041, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2041  # reuse
        # Topologically Sorted Source Nodes: [mask, y_276], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2046, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2047 = reinterpret_tensor(buf2040, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2040  # reuse
        # Topologically Sorted Source Nodes: [y_276], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg560_1, buf2047, 25165824, grid=grid(25165824), stream=stream0)
        del arg560_1
        buf2048 = reinterpret_tensor(buf2039, (128, 1024, 128), (131072, 128, 1), 0); del buf2039  # reuse
        # Topologically Sorted Source Nodes: [y_276], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2046, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2047, (128, 1536, 128), (196608, 128, 1), 0), out=buf2048)
        buf2049 = buf2020; del buf2020  # reuse
        # Topologically Sorted Source Nodes: [contiguous_69], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2048, buf2049, 16777216, grid=grid(16777216), stream=stream0)
        buf2050 = reinterpret_tensor(buf2036, (16384, 16384), (16384, 1), 0); del buf2036  # reuse
        # Topologically Sorted Source Nodes: [y_278], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2049, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg561_1, (1024, 16384), (1, 1024), 0), out=buf2050)
        del arg561_1
        # Topologically Sorted Source Nodes: [tensor_138], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2050, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_346], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2050, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2055 = buf1996; del buf1996  # reuse
        buf2057 = reinterpret_tensor(buf1942, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf1942  # reuse
        # Topologically Sorted Source Nodes: [x_340, x_342, x_345, x_347, float_280, mul_1046, mean_139, add_418, rsqrt_139, mul_1047, output_278, output_279], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2055, buf2001, buf2021, buf2030, buf2050, arg562_1, buf2057, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg562_1
        buf2058 = buf2028; del buf2028  # reuse
        # Topologically Sorted Source Nodes: [x_348], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2057, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg563_1, (16384, 6656), (1, 16384), 0), out=buf2058)
        del arg563_1
        buf2059 = buf2029; del buf2029  # reuse
        # Topologically Sorted Source Nodes: [silu_69, mul_1049], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2058, buf2059, 54525952, grid=grid(54525952), stream=stream0)
        buf2060 = reinterpret_tensor(buf2057, (16384, 16384), (16384, 1), 0); del buf2057  # reuse
        # Topologically Sorted Source Nodes: [y_279], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2059, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg564_1, (3328, 16384), (1, 3328), 0), out=buf2060)
        del arg564_1
        # Topologically Sorted Source Nodes: [tensor_139], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2060, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_349], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2060, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2066 = reinterpret_tensor(buf2050, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2050  # reuse
        # Topologically Sorted Source Nodes: [x_350, float_281, mul_1050, mean_140, add_420, rsqrt_140, mul_1051, output_280, output_281], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2055, buf2060, arg565_1, buf2066, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg565_1
        buf2067 = buf2037; del buf2037  # reuse
        # Topologically Sorted Source Nodes: [linear_280], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2066, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg566_1, (16384, 1280), (1, 16384), 0), out=buf2067)
        del arg566_1
        # Topologically Sorted Source Nodes: [setitem_140, setitem_141], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2067, arg0_1, arg567_1, arg568_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2069 = reinterpret_tensor(buf2048, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2048  # reuse
        # Topologically Sorted Source Nodes: [y_280], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2067, arg2_1, arg0_1, buf2069, 16777216, grid=grid(16777216), stream=stream0)
        buf2070 = reinterpret_tensor(buf2047, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2047  # reuse
        # Topologically Sorted Source Nodes: [y_280], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg567_1, buf2070, 25165824, grid=grid(25165824), stream=stream0)
        del arg567_1
        buf2071 = reinterpret_tensor(buf2046, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2046  # reuse
        # Topologically Sorted Source Nodes: [y_280], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2069, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2070, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2071)
        buf2076 = reinterpret_tensor(buf2071, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2071  # reuse
        # Topologically Sorted Source Nodes: [mask, y_280], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2076, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2077 = reinterpret_tensor(buf2070, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2070  # reuse
        # Topologically Sorted Source Nodes: [y_280], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg568_1, buf2077, 25165824, grid=grid(25165824), stream=stream0)
        del arg568_1
        buf2078 = reinterpret_tensor(buf2069, (128, 1024, 128), (131072, 128, 1), 0); del buf2069  # reuse
        # Topologically Sorted Source Nodes: [y_280], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2076, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2077, (128, 1536, 128), (196608, 128, 1), 0), out=buf2078)
        buf2079 = buf2049; del buf2049  # reuse
        # Topologically Sorted Source Nodes: [contiguous_70], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2078, buf2079, 16777216, grid=grid(16777216), stream=stream0)
        buf2080 = reinterpret_tensor(buf2066, (16384, 16384), (16384, 1), 0); del buf2066  # reuse
        # Topologically Sorted Source Nodes: [y_282], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2079, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg569_1, (1024, 16384), (1, 1024), 0), out=buf2080)
        del arg569_1
        # Topologically Sorted Source Nodes: [tensor_140], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2080, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_351], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2080, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2086 = reinterpret_tensor(buf2030, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2030  # reuse
        # Topologically Sorted Source Nodes: [x_350, x_352, float_284, mul_1061, mean_141, add_424, rsqrt_141, mul_1062, output_282, output_283], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2055, buf2060, buf2080, arg570_1, buf2086, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg570_1
        buf2087 = buf2058; del buf2058  # reuse
        # Topologically Sorted Source Nodes: [x_353], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2086, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg571_1, (16384, 6656), (1, 16384), 0), out=buf2087)
        del arg571_1
        buf2088 = buf2059; del buf2059  # reuse
        # Topologically Sorted Source Nodes: [silu_70, mul_1064], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2087, buf2088, 54525952, grid=grid(54525952), stream=stream0)
        buf2089 = reinterpret_tensor(buf2086, (16384, 16384), (16384, 1), 0); del buf2086  # reuse
        # Topologically Sorted Source Nodes: [y_283], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2088, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg572_1, (3328, 16384), (1, 3328), 0), out=buf2089)
        del arg572_1
        # Topologically Sorted Source Nodes: [tensor_141], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2089, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_354], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2089, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2095 = reinterpret_tensor(buf2021, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2021  # reuse
        # Topologically Sorted Source Nodes: [x_350, x_352, x_355, float_285, mul_1065, mean_142, add_426, rsqrt_142, mul_1066, output_284, output_285], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2055, buf2060, buf2080, buf2089, arg573_1, buf2095, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg573_1
        buf2096 = buf2067; del buf2067  # reuse
        # Topologically Sorted Source Nodes: [linear_284], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2095, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg574_1, (16384, 1280), (1, 16384), 0), out=buf2096)
        del arg574_1
        # Topologically Sorted Source Nodes: [setitem_142, setitem_143], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2096, arg0_1, arg575_1, arg576_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2098 = reinterpret_tensor(buf2078, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2078  # reuse
        # Topologically Sorted Source Nodes: [y_284], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2096, arg2_1, arg0_1, buf2098, 16777216, grid=grid(16777216), stream=stream0)
        buf2099 = reinterpret_tensor(buf2077, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2077  # reuse
        # Topologically Sorted Source Nodes: [y_284], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg575_1, buf2099, 25165824, grid=grid(25165824), stream=stream0)
        del arg575_1
        buf2100 = reinterpret_tensor(buf2076, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2076  # reuse
        # Topologically Sorted Source Nodes: [y_284], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2098, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2099, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2100)
        buf2105 = reinterpret_tensor(buf2100, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2100  # reuse
        # Topologically Sorted Source Nodes: [mask, y_284], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2105, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2106 = reinterpret_tensor(buf2099, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2099  # reuse
        # Topologically Sorted Source Nodes: [y_284], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg576_1, buf2106, 25165824, grid=grid(25165824), stream=stream0)
        del arg576_1
        buf2107 = reinterpret_tensor(buf2098, (128, 1024, 128), (131072, 128, 1), 0); del buf2098  # reuse
        # Topologically Sorted Source Nodes: [y_284], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2105, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2106, (128, 1536, 128), (196608, 128, 1), 0), out=buf2107)
        buf2108 = buf2079; del buf2079  # reuse
        # Topologically Sorted Source Nodes: [contiguous_71], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2107, buf2108, 16777216, grid=grid(16777216), stream=stream0)
        buf2109 = reinterpret_tensor(buf2095, (16384, 16384), (16384, 1), 0); del buf2095  # reuse
        # Topologically Sorted Source Nodes: [y_286], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2108, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg577_1, (1024, 16384), (1, 1024), 0), out=buf2109)
        del arg577_1
        # Topologically Sorted Source Nodes: [tensor_142], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2109, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_356], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2109, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2114 = buf2055; del buf2055  # reuse
        buf2116 = reinterpret_tensor(buf2001, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2001  # reuse
        # Topologically Sorted Source Nodes: [x_350, x_352, x_355, x_357, float_288, mul_1076, mean_143, add_430, rsqrt_143, mul_1077, output_286, output_287], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2114, buf2060, buf2080, buf2089, buf2109, arg578_1, buf2116, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg578_1
        buf2117 = buf2087; del buf2087  # reuse
        # Topologically Sorted Source Nodes: [x_358], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2116, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg579_1, (16384, 6656), (1, 16384), 0), out=buf2117)
        del arg579_1
        buf2118 = buf2088; del buf2088  # reuse
        # Topologically Sorted Source Nodes: [silu_71, mul_1079], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2117, buf2118, 54525952, grid=grid(54525952), stream=stream0)
        buf2119 = reinterpret_tensor(buf2116, (16384, 16384), (16384, 1), 0); del buf2116  # reuse
        # Topologically Sorted Source Nodes: [y_287], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2118, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg580_1, (3328, 16384), (1, 3328), 0), out=buf2119)
        del arg580_1
        # Topologically Sorted Source Nodes: [tensor_143], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2119, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_359], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2119, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2125 = reinterpret_tensor(buf2109, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2109  # reuse
        # Topologically Sorted Source Nodes: [x_360, float_289, mul_1080, mean_144, add_432, rsqrt_144, mul_1081, output_288, output_289], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2114, buf2119, arg581_1, buf2125, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg581_1
        buf2126 = buf2096; del buf2096  # reuse
        # Topologically Sorted Source Nodes: [linear_288], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2125, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg582_1, (16384, 1280), (1, 16384), 0), out=buf2126)
        del arg582_1
        # Topologically Sorted Source Nodes: [setitem_144, setitem_145], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2126, arg0_1, arg583_1, arg584_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2128 = reinterpret_tensor(buf2107, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2107  # reuse
        # Topologically Sorted Source Nodes: [y_288], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2126, arg2_1, arg0_1, buf2128, 16777216, grid=grid(16777216), stream=stream0)
        buf2129 = reinterpret_tensor(buf2106, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2106  # reuse
        # Topologically Sorted Source Nodes: [y_288], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg583_1, buf2129, 25165824, grid=grid(25165824), stream=stream0)
        del arg583_1
        buf2130 = reinterpret_tensor(buf2105, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2105  # reuse
        # Topologically Sorted Source Nodes: [y_288], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2128, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2129, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2130)
        buf2135 = reinterpret_tensor(buf2130, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2130  # reuse
        # Topologically Sorted Source Nodes: [mask, y_288], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2135, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2136 = reinterpret_tensor(buf2129, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2129  # reuse
        # Topologically Sorted Source Nodes: [y_288], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg584_1, buf2136, 25165824, grid=grid(25165824), stream=stream0)
        del arg584_1
        buf2137 = reinterpret_tensor(buf2128, (128, 1024, 128), (131072, 128, 1), 0); del buf2128  # reuse
        # Topologically Sorted Source Nodes: [y_288], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2135, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2136, (128, 1536, 128), (196608, 128, 1), 0), out=buf2137)
        buf2138 = buf2108; del buf2108  # reuse
        # Topologically Sorted Source Nodes: [contiguous_72], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2137, buf2138, 16777216, grid=grid(16777216), stream=stream0)
        buf2139 = reinterpret_tensor(buf2125, (16384, 16384), (16384, 1), 0); del buf2125  # reuse
        # Topologically Sorted Source Nodes: [y_290], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2138, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg585_1, (1024, 16384), (1, 1024), 0), out=buf2139)
        del arg585_1
        # Topologically Sorted Source Nodes: [tensor_144], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2139, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_361], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2139, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2145 = reinterpret_tensor(buf2089, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2089  # reuse
        # Topologically Sorted Source Nodes: [x_360, x_362, float_292, mul_1091, mean_145, add_436, rsqrt_145, mul_1092, output_290, output_291], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2114, buf2119, buf2139, arg586_1, buf2145, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg586_1
        buf2146 = buf2117; del buf2117  # reuse
        # Topologically Sorted Source Nodes: [x_363], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2145, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg587_1, (16384, 6656), (1, 16384), 0), out=buf2146)
        del arg587_1
        buf2147 = buf2118; del buf2118  # reuse
        # Topologically Sorted Source Nodes: [silu_72, mul_1094], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2146, buf2147, 54525952, grid=grid(54525952), stream=stream0)
        buf2148 = reinterpret_tensor(buf2145, (16384, 16384), (16384, 1), 0); del buf2145  # reuse
        # Topologically Sorted Source Nodes: [y_291], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2147, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg588_1, (3328, 16384), (1, 3328), 0), out=buf2148)
        del arg588_1
        # Topologically Sorted Source Nodes: [tensor_145], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2148, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_364], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2148, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2154 = reinterpret_tensor(buf2080, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2080  # reuse
        # Topologically Sorted Source Nodes: [x_360, x_362, x_365, float_293, mul_1095, mean_146, add_438, rsqrt_146, mul_1096, output_292, output_293], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2114, buf2119, buf2139, buf2148, arg589_1, buf2154, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg589_1
        buf2155 = buf2126; del buf2126  # reuse
        # Topologically Sorted Source Nodes: [linear_292], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2154, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg590_1, (16384, 1280), (1, 16384), 0), out=buf2155)
        del arg590_1
        # Topologically Sorted Source Nodes: [setitem_146, setitem_147], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2155, arg0_1, arg591_1, arg592_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2157 = reinterpret_tensor(buf2137, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2137  # reuse
        # Topologically Sorted Source Nodes: [y_292], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2155, arg2_1, arg0_1, buf2157, 16777216, grid=grid(16777216), stream=stream0)
        buf2158 = reinterpret_tensor(buf2136, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2136  # reuse
        # Topologically Sorted Source Nodes: [y_292], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg591_1, buf2158, 25165824, grid=grid(25165824), stream=stream0)
        del arg591_1
        buf2159 = reinterpret_tensor(buf2135, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2135  # reuse
        # Topologically Sorted Source Nodes: [y_292], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2157, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2158, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2159)
        buf2164 = reinterpret_tensor(buf2159, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2159  # reuse
        # Topologically Sorted Source Nodes: [mask, y_292], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2164, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2165 = reinterpret_tensor(buf2158, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2158  # reuse
        # Topologically Sorted Source Nodes: [y_292], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg592_1, buf2165, 25165824, grid=grid(25165824), stream=stream0)
        del arg592_1
        buf2166 = reinterpret_tensor(buf2157, (128, 1024, 128), (131072, 128, 1), 0); del buf2157  # reuse
        # Topologically Sorted Source Nodes: [y_292], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2164, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2165, (128, 1536, 128), (196608, 128, 1), 0), out=buf2166)
        buf2167 = buf2138; del buf2138  # reuse
        # Topologically Sorted Source Nodes: [contiguous_73], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2166, buf2167, 16777216, grid=grid(16777216), stream=stream0)
        buf2168 = reinterpret_tensor(buf2154, (16384, 16384), (16384, 1), 0); del buf2154  # reuse
        # Topologically Sorted Source Nodes: [y_294], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2167, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg593_1, (1024, 16384), (1, 1024), 0), out=buf2168)
        del arg593_1
        # Topologically Sorted Source Nodes: [tensor_146], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2168, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_366], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2168, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2173 = buf2114; del buf2114  # reuse
        buf2175 = reinterpret_tensor(buf2060, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2060  # reuse
        # Topologically Sorted Source Nodes: [x_360, x_362, x_365, x_367, float_296, mul_1106, mean_147, add_442, rsqrt_147, mul_1107, output_294, output_295], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2173, buf2119, buf2139, buf2148, buf2168, arg594_1, buf2175, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg594_1
        buf2176 = buf2146; del buf2146  # reuse
        # Topologically Sorted Source Nodes: [x_368], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2175, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg595_1, (16384, 6656), (1, 16384), 0), out=buf2176)
        del arg595_1
        buf2177 = buf2147; del buf2147  # reuse
        # Topologically Sorted Source Nodes: [silu_73, mul_1109], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2176, buf2177, 54525952, grid=grid(54525952), stream=stream0)
        buf2178 = reinterpret_tensor(buf2175, (16384, 16384), (16384, 1), 0); del buf2175  # reuse
        # Topologically Sorted Source Nodes: [y_295], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2177, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg596_1, (3328, 16384), (1, 3328), 0), out=buf2178)
        del arg596_1
        # Topologically Sorted Source Nodes: [tensor_147], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2178, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_369], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2178, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2184 = reinterpret_tensor(buf2168, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2168  # reuse
        # Topologically Sorted Source Nodes: [x_370, float_297, mul_1110, mean_148, add_444, rsqrt_148, mul_1111, output_296, output_297], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2173, buf2178, arg597_1, buf2184, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg597_1
        buf2185 = buf2155; del buf2155  # reuse
        # Topologically Sorted Source Nodes: [linear_296], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2184, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg598_1, (16384, 1280), (1, 16384), 0), out=buf2185)
        del arg598_1
        # Topologically Sorted Source Nodes: [setitem_148, setitem_149], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2185, arg0_1, arg599_1, arg600_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2187 = reinterpret_tensor(buf2166, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2166  # reuse
        # Topologically Sorted Source Nodes: [y_296], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2185, arg2_1, arg0_1, buf2187, 16777216, grid=grid(16777216), stream=stream0)
        buf2188 = reinterpret_tensor(buf2165, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2165  # reuse
        # Topologically Sorted Source Nodes: [y_296], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg599_1, buf2188, 25165824, grid=grid(25165824), stream=stream0)
        del arg599_1
        buf2189 = reinterpret_tensor(buf2164, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2164  # reuse
        # Topologically Sorted Source Nodes: [y_296], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2187, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2188, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2189)
        buf2194 = reinterpret_tensor(buf2189, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2189  # reuse
        # Topologically Sorted Source Nodes: [mask, y_296], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2194, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2195 = reinterpret_tensor(buf2188, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2188  # reuse
        # Topologically Sorted Source Nodes: [y_296], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg600_1, buf2195, 25165824, grid=grid(25165824), stream=stream0)
        del arg600_1
        buf2196 = reinterpret_tensor(buf2187, (128, 1024, 128), (131072, 128, 1), 0); del buf2187  # reuse
        # Topologically Sorted Source Nodes: [y_296], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2194, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2195, (128, 1536, 128), (196608, 128, 1), 0), out=buf2196)
        buf2197 = buf2167; del buf2167  # reuse
        # Topologically Sorted Source Nodes: [contiguous_74], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2196, buf2197, 16777216, grid=grid(16777216), stream=stream0)
        buf2198 = reinterpret_tensor(buf2184, (16384, 16384), (16384, 1), 0); del buf2184  # reuse
        # Topologically Sorted Source Nodes: [y_298], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2197, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg601_1, (1024, 16384), (1, 1024), 0), out=buf2198)
        del arg601_1
        # Topologically Sorted Source Nodes: [tensor_148], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2198, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_371], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2198, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2204 = reinterpret_tensor(buf2148, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2148  # reuse
        # Topologically Sorted Source Nodes: [x_370, x_372, float_300, mul_1121, mean_149, add_448, rsqrt_149, mul_1122, output_298, output_299], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2173, buf2178, buf2198, arg602_1, buf2204, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg602_1
        buf2205 = buf2176; del buf2176  # reuse
        # Topologically Sorted Source Nodes: [x_373], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2204, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg603_1, (16384, 6656), (1, 16384), 0), out=buf2205)
        del arg603_1
        buf2206 = buf2177; del buf2177  # reuse
        # Topologically Sorted Source Nodes: [silu_74, mul_1124], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2205, buf2206, 54525952, grid=grid(54525952), stream=stream0)
        buf2207 = reinterpret_tensor(buf2204, (16384, 16384), (16384, 1), 0); del buf2204  # reuse
        # Topologically Sorted Source Nodes: [y_299], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2206, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg604_1, (3328, 16384), (1, 3328), 0), out=buf2207)
        del arg604_1
        # Topologically Sorted Source Nodes: [tensor_149], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2207, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_374], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2207, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2213 = reinterpret_tensor(buf2139, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2139  # reuse
        # Topologically Sorted Source Nodes: [x_370, x_372, x_375, float_301, mul_1125, mean_150, add_450, rsqrt_150, mul_1126, output_300, output_301], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2173, buf2178, buf2198, buf2207, arg605_1, buf2213, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg605_1
        buf2214 = buf2185; del buf2185  # reuse
        # Topologically Sorted Source Nodes: [linear_300], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2213, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg606_1, (16384, 1280), (1, 16384), 0), out=buf2214)
        del arg606_1
        # Topologically Sorted Source Nodes: [setitem_150, setitem_151], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2214, arg0_1, arg607_1, arg608_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2216 = reinterpret_tensor(buf2196, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2196  # reuse
        # Topologically Sorted Source Nodes: [y_300], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2214, arg2_1, arg0_1, buf2216, 16777216, grid=grid(16777216), stream=stream0)
        buf2217 = reinterpret_tensor(buf2195, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2195  # reuse
        # Topologically Sorted Source Nodes: [y_300], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg607_1, buf2217, 25165824, grid=grid(25165824), stream=stream0)
        del arg607_1
        buf2218 = reinterpret_tensor(buf2194, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2194  # reuse
        # Topologically Sorted Source Nodes: [y_300], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2216, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2217, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2218)
        buf2223 = reinterpret_tensor(buf2218, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2218  # reuse
        # Topologically Sorted Source Nodes: [mask, y_300], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2223, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2224 = reinterpret_tensor(buf2217, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2217  # reuse
        # Topologically Sorted Source Nodes: [y_300], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg608_1, buf2224, 25165824, grid=grid(25165824), stream=stream0)
        del arg608_1
        buf2225 = reinterpret_tensor(buf2216, (128, 1024, 128), (131072, 128, 1), 0); del buf2216  # reuse
        # Topologically Sorted Source Nodes: [y_300], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2223, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2224, (128, 1536, 128), (196608, 128, 1), 0), out=buf2225)
        buf2226 = buf2197; del buf2197  # reuse
        # Topologically Sorted Source Nodes: [contiguous_75], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2225, buf2226, 16777216, grid=grid(16777216), stream=stream0)
        buf2227 = reinterpret_tensor(buf2213, (16384, 16384), (16384, 1), 0); del buf2213  # reuse
        # Topologically Sorted Source Nodes: [y_302], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2226, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg609_1, (1024, 16384), (1, 1024), 0), out=buf2227)
        del arg609_1
        # Topologically Sorted Source Nodes: [tensor_150], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2227, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_376], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2227, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2232 = buf2173; del buf2173  # reuse
        buf2234 = reinterpret_tensor(buf2119, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2119  # reuse
        # Topologically Sorted Source Nodes: [x_370, x_372, x_375, x_377, float_304, mul_1136, mean_151, add_454, rsqrt_151, mul_1137, output_302, output_303], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2232, buf2178, buf2198, buf2207, buf2227, arg610_1, buf2234, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg610_1
        buf2235 = buf2205; del buf2205  # reuse
        # Topologically Sorted Source Nodes: [x_378], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2234, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg611_1, (16384, 6656), (1, 16384), 0), out=buf2235)
        del arg611_1
        buf2236 = buf2206; del buf2206  # reuse
        # Topologically Sorted Source Nodes: [silu_75, mul_1139], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2235, buf2236, 54525952, grid=grid(54525952), stream=stream0)
        buf2237 = reinterpret_tensor(buf2234, (16384, 16384), (16384, 1), 0); del buf2234  # reuse
        # Topologically Sorted Source Nodes: [y_303], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2236, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg612_1, (3328, 16384), (1, 3328), 0), out=buf2237)
        del arg612_1
        # Topologically Sorted Source Nodes: [tensor_151], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2237, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_379], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2237, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2243 = reinterpret_tensor(buf2227, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2227  # reuse
        # Topologically Sorted Source Nodes: [x_380, float_305, mul_1140, mean_152, add_456, rsqrt_152, mul_1141, output_304, output_305], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2232, buf2237, arg613_1, buf2243, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg613_1
        buf2244 = buf2214; del buf2214  # reuse
        # Topologically Sorted Source Nodes: [linear_304], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2243, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg614_1, (16384, 1280), (1, 16384), 0), out=buf2244)
        del arg614_1
        # Topologically Sorted Source Nodes: [setitem_152, setitem_153], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2244, arg0_1, arg615_1, arg616_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2246 = reinterpret_tensor(buf2225, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2225  # reuse
        # Topologically Sorted Source Nodes: [y_304], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2244, arg2_1, arg0_1, buf2246, 16777216, grid=grid(16777216), stream=stream0)
        buf2247 = reinterpret_tensor(buf2224, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2224  # reuse
        # Topologically Sorted Source Nodes: [y_304], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg615_1, buf2247, 25165824, grid=grid(25165824), stream=stream0)
        del arg615_1
        buf2248 = reinterpret_tensor(buf2223, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2223  # reuse
        # Topologically Sorted Source Nodes: [y_304], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2246, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2247, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2248)
        buf2253 = reinterpret_tensor(buf2248, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2248  # reuse
        # Topologically Sorted Source Nodes: [mask, y_304], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2253, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2254 = reinterpret_tensor(buf2247, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2247  # reuse
        # Topologically Sorted Source Nodes: [y_304], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg616_1, buf2254, 25165824, grid=grid(25165824), stream=stream0)
        del arg616_1
        buf2255 = reinterpret_tensor(buf2246, (128, 1024, 128), (131072, 128, 1), 0); del buf2246  # reuse
        # Topologically Sorted Source Nodes: [y_304], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2253, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2254, (128, 1536, 128), (196608, 128, 1), 0), out=buf2255)
        buf2256 = buf2226; del buf2226  # reuse
        # Topologically Sorted Source Nodes: [contiguous_76], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2255, buf2256, 16777216, grid=grid(16777216), stream=stream0)
        buf2257 = reinterpret_tensor(buf2243, (16384, 16384), (16384, 1), 0); del buf2243  # reuse
        # Topologically Sorted Source Nodes: [y_306], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2256, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg617_1, (1024, 16384), (1, 1024), 0), out=buf2257)
        del arg617_1
        # Topologically Sorted Source Nodes: [tensor_152], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2257, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_381], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2257, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2263 = reinterpret_tensor(buf2207, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2207  # reuse
        # Topologically Sorted Source Nodes: [x_380, x_382, float_308, mul_1151, mean_153, add_460, rsqrt_153, mul_1152, output_306, output_307], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2232, buf2237, buf2257, arg618_1, buf2263, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg618_1
        buf2264 = buf2235; del buf2235  # reuse
        # Topologically Sorted Source Nodes: [x_383], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2263, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg619_1, (16384, 6656), (1, 16384), 0), out=buf2264)
        del arg619_1
        buf2265 = buf2236; del buf2236  # reuse
        # Topologically Sorted Source Nodes: [silu_76, mul_1154], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2264, buf2265, 54525952, grid=grid(54525952), stream=stream0)
        buf2266 = reinterpret_tensor(buf2263, (16384, 16384), (16384, 1), 0); del buf2263  # reuse
        # Topologically Sorted Source Nodes: [y_307], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2265, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg620_1, (3328, 16384), (1, 3328), 0), out=buf2266)
        del arg620_1
        # Topologically Sorted Source Nodes: [tensor_153], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2266, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_384], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2266, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2272 = reinterpret_tensor(buf2198, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2198  # reuse
        # Topologically Sorted Source Nodes: [x_380, x_382, x_385, float_309, mul_1155, mean_154, add_462, rsqrt_154, mul_1156, output_308, output_309], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2232, buf2237, buf2257, buf2266, arg621_1, buf2272, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg621_1
        buf2273 = buf2244; del buf2244  # reuse
        # Topologically Sorted Source Nodes: [linear_308], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2272, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg622_1, (16384, 1280), (1, 16384), 0), out=buf2273)
        del arg622_1
        # Topologically Sorted Source Nodes: [setitem_154, setitem_155], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2273, arg0_1, arg623_1, arg624_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2275 = reinterpret_tensor(buf2255, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2255  # reuse
        # Topologically Sorted Source Nodes: [y_308], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2273, arg2_1, arg0_1, buf2275, 16777216, grid=grid(16777216), stream=stream0)
        buf2276 = reinterpret_tensor(buf2254, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2254  # reuse
        # Topologically Sorted Source Nodes: [y_308], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg623_1, buf2276, 25165824, grid=grid(25165824), stream=stream0)
        del arg623_1
        buf2277 = reinterpret_tensor(buf2253, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2253  # reuse
        # Topologically Sorted Source Nodes: [y_308], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2275, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2276, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2277)
        buf2282 = reinterpret_tensor(buf2277, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2277  # reuse
        # Topologically Sorted Source Nodes: [mask, y_308], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2282, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2283 = reinterpret_tensor(buf2276, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2276  # reuse
        # Topologically Sorted Source Nodes: [y_308], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg624_1, buf2283, 25165824, grid=grid(25165824), stream=stream0)
        del arg624_1
        buf2284 = reinterpret_tensor(buf2275, (128, 1024, 128), (131072, 128, 1), 0); del buf2275  # reuse
        # Topologically Sorted Source Nodes: [y_308], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2282, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2283, (128, 1536, 128), (196608, 128, 1), 0), out=buf2284)
        buf2285 = buf2256; del buf2256  # reuse
        # Topologically Sorted Source Nodes: [contiguous_77], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2284, buf2285, 16777216, grid=grid(16777216), stream=stream0)
        buf2286 = reinterpret_tensor(buf2272, (16384, 16384), (16384, 1), 0); del buf2272  # reuse
        # Topologically Sorted Source Nodes: [y_310], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2285, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg625_1, (1024, 16384), (1, 1024), 0), out=buf2286)
        del arg625_1
        # Topologically Sorted Source Nodes: [tensor_154], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2286, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_386], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2286, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2291 = buf2232; del buf2232  # reuse
        buf2293 = reinterpret_tensor(buf2178, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2178  # reuse
        # Topologically Sorted Source Nodes: [x_380, x_382, x_385, x_387, float_312, mul_1166, mean_155, add_466, rsqrt_155, mul_1167, output_310, output_311], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2291, buf2237, buf2257, buf2266, buf2286, arg626_1, buf2293, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg626_1
        buf2294 = buf2264; del buf2264  # reuse
        # Topologically Sorted Source Nodes: [x_388], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2293, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg627_1, (16384, 6656), (1, 16384), 0), out=buf2294)
        del arg627_1
        buf2295 = buf2265; del buf2265  # reuse
        # Topologically Sorted Source Nodes: [silu_77, mul_1169], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2294, buf2295, 54525952, grid=grid(54525952), stream=stream0)
        buf2296 = reinterpret_tensor(buf2293, (16384, 16384), (16384, 1), 0); del buf2293  # reuse
        # Topologically Sorted Source Nodes: [y_311], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2295, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg628_1, (3328, 16384), (1, 3328), 0), out=buf2296)
        del arg628_1
        # Topologically Sorted Source Nodes: [tensor_155], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2296, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_389], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2296, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2302 = reinterpret_tensor(buf2286, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2286  # reuse
        # Topologically Sorted Source Nodes: [x_390, float_313, mul_1170, mean_156, add_468, rsqrt_156, mul_1171, output_312, output_313], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2291, buf2296, arg629_1, buf2302, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg629_1
        buf2303 = buf2273; del buf2273  # reuse
        # Topologically Sorted Source Nodes: [linear_312], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2302, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg630_1, (16384, 1280), (1, 16384), 0), out=buf2303)
        del arg630_1
        # Topologically Sorted Source Nodes: [setitem_156, setitem_157], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2303, arg0_1, arg631_1, arg632_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2305 = reinterpret_tensor(buf2284, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2284  # reuse
        # Topologically Sorted Source Nodes: [y_312], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2303, arg2_1, arg0_1, buf2305, 16777216, grid=grid(16777216), stream=stream0)
        buf2306 = reinterpret_tensor(buf2283, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2283  # reuse
        # Topologically Sorted Source Nodes: [y_312], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg631_1, buf2306, 25165824, grid=grid(25165824), stream=stream0)
        del arg631_1
        buf2307 = reinterpret_tensor(buf2282, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2282  # reuse
        # Topologically Sorted Source Nodes: [y_312], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2305, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2306, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2307)
        buf2312 = reinterpret_tensor(buf2307, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2307  # reuse
        # Topologically Sorted Source Nodes: [mask, y_312], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2312, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2313 = reinterpret_tensor(buf2306, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2306  # reuse
        # Topologically Sorted Source Nodes: [y_312], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg632_1, buf2313, 25165824, grid=grid(25165824), stream=stream0)
        del arg632_1
        buf2314 = reinterpret_tensor(buf2305, (128, 1024, 128), (131072, 128, 1), 0); del buf2305  # reuse
        # Topologically Sorted Source Nodes: [y_312], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2312, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2313, (128, 1536, 128), (196608, 128, 1), 0), out=buf2314)
        buf2315 = buf2285; del buf2285  # reuse
        # Topologically Sorted Source Nodes: [contiguous_78], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2314, buf2315, 16777216, grid=grid(16777216), stream=stream0)
        buf2316 = reinterpret_tensor(buf2302, (16384, 16384), (16384, 1), 0); del buf2302  # reuse
        # Topologically Sorted Source Nodes: [y_314], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2315, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg633_1, (1024, 16384), (1, 1024), 0), out=buf2316)
        del arg633_1
        # Topologically Sorted Source Nodes: [tensor_156], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2316, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_391], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2316, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2322 = reinterpret_tensor(buf2266, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2266  # reuse
        # Topologically Sorted Source Nodes: [x_390, x_392, float_316, mul_1181, mean_157, add_472, rsqrt_157, mul_1182, output_314, output_315], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2291, buf2296, buf2316, arg634_1, buf2322, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg634_1
        buf2323 = buf2294; del buf2294  # reuse
        # Topologically Sorted Source Nodes: [x_393], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2322, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg635_1, (16384, 6656), (1, 16384), 0), out=buf2323)
        del arg635_1
        buf2324 = buf2295; del buf2295  # reuse
        # Topologically Sorted Source Nodes: [silu_78, mul_1184], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2323, buf2324, 54525952, grid=grid(54525952), stream=stream0)
        buf2325 = reinterpret_tensor(buf2322, (16384, 16384), (16384, 1), 0); del buf2322  # reuse
        # Topologically Sorted Source Nodes: [y_315], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2324, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg636_1, (3328, 16384), (1, 3328), 0), out=buf2325)
        del arg636_1
        # Topologically Sorted Source Nodes: [tensor_157], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2325, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_394], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2325, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2331 = reinterpret_tensor(buf2257, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2257  # reuse
        # Topologically Sorted Source Nodes: [x_390, x_392, x_395, float_317, mul_1185, mean_158, add_474, rsqrt_158, mul_1186, output_316, output_317], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2291, buf2296, buf2316, buf2325, arg637_1, buf2331, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg637_1
        buf2332 = buf2303; del buf2303  # reuse
        # Topologically Sorted Source Nodes: [linear_316], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2331, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg638_1, (16384, 1280), (1, 16384), 0), out=buf2332)
        del arg638_1
        # Topologically Sorted Source Nodes: [setitem_158, setitem_159], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2332, arg0_1, arg639_1, arg640_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2334 = reinterpret_tensor(buf2314, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2314  # reuse
        # Topologically Sorted Source Nodes: [y_316], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2332, arg2_1, arg0_1, buf2334, 16777216, grid=grid(16777216), stream=stream0)
        buf2335 = reinterpret_tensor(buf2313, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2313  # reuse
        # Topologically Sorted Source Nodes: [y_316], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg639_1, buf2335, 25165824, grid=grid(25165824), stream=stream0)
        del arg639_1
        buf2336 = reinterpret_tensor(buf2312, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2312  # reuse
        # Topologically Sorted Source Nodes: [y_316], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2334, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2335, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2336)
        buf2341 = reinterpret_tensor(buf2336, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2336  # reuse
        # Topologically Sorted Source Nodes: [mask, y_316], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2341, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2342 = reinterpret_tensor(buf2335, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2335  # reuse
        # Topologically Sorted Source Nodes: [y_316], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg640_1, buf2342, 25165824, grid=grid(25165824), stream=stream0)
        del arg640_1
        buf2343 = reinterpret_tensor(buf2334, (128, 1024, 128), (131072, 128, 1), 0); del buf2334  # reuse
        # Topologically Sorted Source Nodes: [y_316], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2341, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2342, (128, 1536, 128), (196608, 128, 1), 0), out=buf2343)
        buf2344 = buf2315; del buf2315  # reuse
        # Topologically Sorted Source Nodes: [contiguous_79], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2343, buf2344, 16777216, grid=grid(16777216), stream=stream0)
        buf2345 = reinterpret_tensor(buf2331, (16384, 16384), (16384, 1), 0); del buf2331  # reuse
        # Topologically Sorted Source Nodes: [y_318], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2344, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg641_1, (1024, 16384), (1, 1024), 0), out=buf2345)
        del arg641_1
        # Topologically Sorted Source Nodes: [tensor_158], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2345, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_396], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2345, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2350 = buf2291; del buf2291  # reuse
        buf2352 = reinterpret_tensor(buf2237, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2237  # reuse
        # Topologically Sorted Source Nodes: [x_390, x_392, x_395, x_397, float_320, mul_1196, mean_159, add_478, rsqrt_159, mul_1197, output_318, output_319], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2350, buf2296, buf2316, buf2325, buf2345, arg642_1, buf2352, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg642_1
        buf2353 = buf2323; del buf2323  # reuse
        # Topologically Sorted Source Nodes: [x_398], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2352, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg643_1, (16384, 6656), (1, 16384), 0), out=buf2353)
        del arg643_1
        buf2354 = buf2324; del buf2324  # reuse
        # Topologically Sorted Source Nodes: [silu_79, mul_1199], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2353, buf2354, 54525952, grid=grid(54525952), stream=stream0)
        buf2355 = reinterpret_tensor(buf2352, (16384, 16384), (16384, 1), 0); del buf2352  # reuse
        # Topologically Sorted Source Nodes: [y_319], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2354, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg644_1, (3328, 16384), (1, 3328), 0), out=buf2355)
        del arg644_1
        # Topologically Sorted Source Nodes: [tensor_159], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2355, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_399], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2355, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2361 = reinterpret_tensor(buf2345, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2345  # reuse
        # Topologically Sorted Source Nodes: [x_400, float_321, mul_1200, mean_160, add_480, rsqrt_160, mul_1201, output_320, output_321], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2350, buf2355, arg645_1, buf2361, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg645_1
        buf2362 = buf2332; del buf2332  # reuse
        # Topologically Sorted Source Nodes: [linear_320], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2361, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg646_1, (16384, 1280), (1, 16384), 0), out=buf2362)
        del arg646_1
        # Topologically Sorted Source Nodes: [setitem_160, setitem_161], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2362, arg0_1, arg647_1, arg648_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2364 = reinterpret_tensor(buf2343, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2343  # reuse
        # Topologically Sorted Source Nodes: [y_320], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2362, arg2_1, arg0_1, buf2364, 16777216, grid=grid(16777216), stream=stream0)
        buf2365 = reinterpret_tensor(buf2342, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2342  # reuse
        # Topologically Sorted Source Nodes: [y_320], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg647_1, buf2365, 25165824, grid=grid(25165824), stream=stream0)
        del arg647_1
        buf2366 = reinterpret_tensor(buf2341, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2341  # reuse
        # Topologically Sorted Source Nodes: [y_320], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2364, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2365, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2366)
        buf2371 = reinterpret_tensor(buf2366, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2366  # reuse
        # Topologically Sorted Source Nodes: [mask, y_320], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2371, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2372 = reinterpret_tensor(buf2365, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2365  # reuse
        # Topologically Sorted Source Nodes: [y_320], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg648_1, buf2372, 25165824, grid=grid(25165824), stream=stream0)
        del arg648_1
        buf2373 = reinterpret_tensor(buf2364, (128, 1024, 128), (131072, 128, 1), 0); del buf2364  # reuse
        # Topologically Sorted Source Nodes: [y_320], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2371, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2372, (128, 1536, 128), (196608, 128, 1), 0), out=buf2373)
        buf2374 = buf2344; del buf2344  # reuse
        # Topologically Sorted Source Nodes: [contiguous_80], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2373, buf2374, 16777216, grid=grid(16777216), stream=stream0)
        buf2375 = reinterpret_tensor(buf2361, (16384, 16384), (16384, 1), 0); del buf2361  # reuse
        # Topologically Sorted Source Nodes: [y_322], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2374, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg649_1, (1024, 16384), (1, 1024), 0), out=buf2375)
        del arg649_1
        # Topologically Sorted Source Nodes: [tensor_160], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2375, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_401], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2375, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2381 = reinterpret_tensor(buf2325, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2325  # reuse
        # Topologically Sorted Source Nodes: [x_400, x_402, float_324, mul_1211, mean_161, add_484, rsqrt_161, mul_1212, output_322, output_323], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2350, buf2355, buf2375, arg650_1, buf2381, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg650_1
        buf2382 = buf2353; del buf2353  # reuse
        # Topologically Sorted Source Nodes: [x_403], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2381, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg651_1, (16384, 6656), (1, 16384), 0), out=buf2382)
        del arg651_1
        buf2383 = buf2354; del buf2354  # reuse
        # Topologically Sorted Source Nodes: [silu_80, mul_1214], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2382, buf2383, 54525952, grid=grid(54525952), stream=stream0)
        buf2384 = reinterpret_tensor(buf2381, (16384, 16384), (16384, 1), 0); del buf2381  # reuse
        # Topologically Sorted Source Nodes: [y_323], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2383, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg652_1, (3328, 16384), (1, 3328), 0), out=buf2384)
        del arg652_1
        # Topologically Sorted Source Nodes: [tensor_161], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2384, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_404], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2384, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2390 = reinterpret_tensor(buf2316, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2316  # reuse
        # Topologically Sorted Source Nodes: [x_400, x_402, x_405, float_325, mul_1215, mean_162, add_486, rsqrt_162, mul_1216, output_324, output_325], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2350, buf2355, buf2375, buf2384, arg653_1, buf2390, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg653_1
        buf2391 = buf2362; del buf2362  # reuse
        # Topologically Sorted Source Nodes: [linear_324], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2390, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg654_1, (16384, 1280), (1, 16384), 0), out=buf2391)
        del arg654_1
        # Topologically Sorted Source Nodes: [setitem_162, setitem_163], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2391, arg0_1, arg655_1, arg656_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2393 = reinterpret_tensor(buf2373, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2373  # reuse
        # Topologically Sorted Source Nodes: [y_324], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2391, arg2_1, arg0_1, buf2393, 16777216, grid=grid(16777216), stream=stream0)
        buf2394 = reinterpret_tensor(buf2372, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2372  # reuse
        # Topologically Sorted Source Nodes: [y_324], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg655_1, buf2394, 25165824, grid=grid(25165824), stream=stream0)
        del arg655_1
        buf2395 = reinterpret_tensor(buf2371, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2371  # reuse
        # Topologically Sorted Source Nodes: [y_324], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2393, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2394, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2395)
        buf2400 = reinterpret_tensor(buf2395, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2395  # reuse
        # Topologically Sorted Source Nodes: [mask, y_324], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2400, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2401 = reinterpret_tensor(buf2394, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2394  # reuse
        # Topologically Sorted Source Nodes: [y_324], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg656_1, buf2401, 25165824, grid=grid(25165824), stream=stream0)
        del arg656_1
        buf2402 = reinterpret_tensor(buf2393, (128, 1024, 128), (131072, 128, 1), 0); del buf2393  # reuse
        # Topologically Sorted Source Nodes: [y_324], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2400, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2401, (128, 1536, 128), (196608, 128, 1), 0), out=buf2402)
        buf2403 = buf2374; del buf2374  # reuse
        # Topologically Sorted Source Nodes: [contiguous_81], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2402, buf2403, 16777216, grid=grid(16777216), stream=stream0)
        buf2404 = reinterpret_tensor(buf2390, (16384, 16384), (16384, 1), 0); del buf2390  # reuse
        # Topologically Sorted Source Nodes: [y_326], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2403, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg657_1, (1024, 16384), (1, 1024), 0), out=buf2404)
        del arg657_1
        # Topologically Sorted Source Nodes: [tensor_162], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2404, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_406], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2404, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2409 = buf2350; del buf2350  # reuse
        buf2411 = reinterpret_tensor(buf2296, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2296  # reuse
        # Topologically Sorted Source Nodes: [x_400, x_402, x_405, x_407, float_328, mul_1226, mean_163, add_490, rsqrt_163, mul_1227, output_326, output_327], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2409, buf2355, buf2375, buf2384, buf2404, arg658_1, buf2411, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg658_1
        buf2412 = buf2382; del buf2382  # reuse
        # Topologically Sorted Source Nodes: [x_408], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2411, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg659_1, (16384, 6656), (1, 16384), 0), out=buf2412)
        del arg659_1
        buf2413 = buf2383; del buf2383  # reuse
        # Topologically Sorted Source Nodes: [silu_81, mul_1229], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2412, buf2413, 54525952, grid=grid(54525952), stream=stream0)
        buf2414 = reinterpret_tensor(buf2411, (16384, 16384), (16384, 1), 0); del buf2411  # reuse
        # Topologically Sorted Source Nodes: [y_327], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2413, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg660_1, (3328, 16384), (1, 3328), 0), out=buf2414)
        del arg660_1
        # Topologically Sorted Source Nodes: [tensor_163], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2414, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_409], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2414, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2420 = reinterpret_tensor(buf2404, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2404  # reuse
        # Topologically Sorted Source Nodes: [x_410, float_329, mul_1230, mean_164, add_492, rsqrt_164, mul_1231, output_328, output_329], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2409, buf2414, arg661_1, buf2420, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg661_1
        buf2421 = buf2391; del buf2391  # reuse
        # Topologically Sorted Source Nodes: [linear_328], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2420, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg662_1, (16384, 1280), (1, 16384), 0), out=buf2421)
        del arg662_1
        # Topologically Sorted Source Nodes: [setitem_164, setitem_165], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2421, arg0_1, arg663_1, arg664_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2423 = reinterpret_tensor(buf2402, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2402  # reuse
        # Topologically Sorted Source Nodes: [y_328], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2421, arg2_1, arg0_1, buf2423, 16777216, grid=grid(16777216), stream=stream0)
        buf2424 = reinterpret_tensor(buf2401, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2401  # reuse
        # Topologically Sorted Source Nodes: [y_328], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg663_1, buf2424, 25165824, grid=grid(25165824), stream=stream0)
        del arg663_1
        buf2425 = reinterpret_tensor(buf2400, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2400  # reuse
        # Topologically Sorted Source Nodes: [y_328], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2423, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2424, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2425)
        buf2430 = reinterpret_tensor(buf2425, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2425  # reuse
        # Topologically Sorted Source Nodes: [mask, y_328], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2430, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2431 = reinterpret_tensor(buf2424, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2424  # reuse
        # Topologically Sorted Source Nodes: [y_328], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg664_1, buf2431, 25165824, grid=grid(25165824), stream=stream0)
        del arg664_1
        buf2432 = reinterpret_tensor(buf2423, (128, 1024, 128), (131072, 128, 1), 0); del buf2423  # reuse
        # Topologically Sorted Source Nodes: [y_328], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2430, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2431, (128, 1536, 128), (196608, 128, 1), 0), out=buf2432)
        buf2433 = buf2403; del buf2403  # reuse
        # Topologically Sorted Source Nodes: [contiguous_82], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2432, buf2433, 16777216, grid=grid(16777216), stream=stream0)
        buf2434 = reinterpret_tensor(buf2420, (16384, 16384), (16384, 1), 0); del buf2420  # reuse
        # Topologically Sorted Source Nodes: [y_330], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2433, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg665_1, (1024, 16384), (1, 1024), 0), out=buf2434)
        del arg665_1
        # Topologically Sorted Source Nodes: [tensor_164], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2434, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_411], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2434, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2440 = reinterpret_tensor(buf2384, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2384  # reuse
        # Topologically Sorted Source Nodes: [x_410, x_412, float_332, mul_1241, mean_165, add_496, rsqrt_165, mul_1242, output_330, output_331], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2409, buf2414, buf2434, arg666_1, buf2440, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg666_1
        buf2441 = buf2412; del buf2412  # reuse
        # Topologically Sorted Source Nodes: [x_413], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2440, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg667_1, (16384, 6656), (1, 16384), 0), out=buf2441)
        del arg667_1
        buf2442 = buf2413; del buf2413  # reuse
        # Topologically Sorted Source Nodes: [silu_82, mul_1244], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2441, buf2442, 54525952, grid=grid(54525952), stream=stream0)
        buf2443 = reinterpret_tensor(buf2440, (16384, 16384), (16384, 1), 0); del buf2440  # reuse
        # Topologically Sorted Source Nodes: [y_331], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2442, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg668_1, (3328, 16384), (1, 3328), 0), out=buf2443)
        del arg668_1
        # Topologically Sorted Source Nodes: [tensor_165], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2443, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_414], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2443, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2449 = reinterpret_tensor(buf2375, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2375  # reuse
        # Topologically Sorted Source Nodes: [x_410, x_412, x_415, float_333, mul_1245, mean_166, add_498, rsqrt_166, mul_1246, output_332, output_333], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2409, buf2414, buf2434, buf2443, arg669_1, buf2449, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg669_1
        buf2450 = buf2421; del buf2421  # reuse
        # Topologically Sorted Source Nodes: [linear_332], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2449, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg670_1, (16384, 1280), (1, 16384), 0), out=buf2450)
        del arg670_1
        # Topologically Sorted Source Nodes: [setitem_166, setitem_167], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2450, arg0_1, arg671_1, arg672_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2452 = reinterpret_tensor(buf2432, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2432  # reuse
        # Topologically Sorted Source Nodes: [y_332], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2450, arg2_1, arg0_1, buf2452, 16777216, grid=grid(16777216), stream=stream0)
        buf2453 = reinterpret_tensor(buf2431, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2431  # reuse
        # Topologically Sorted Source Nodes: [y_332], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg671_1, buf2453, 25165824, grid=grid(25165824), stream=stream0)
        del arg671_1
        buf2454 = reinterpret_tensor(buf2430, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2430  # reuse
        # Topologically Sorted Source Nodes: [y_332], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2452, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2453, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2454)
        buf2459 = reinterpret_tensor(buf2454, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2454  # reuse
        # Topologically Sorted Source Nodes: [mask, y_332], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2459, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2460 = reinterpret_tensor(buf2453, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2453  # reuse
        # Topologically Sorted Source Nodes: [y_332], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg672_1, buf2460, 25165824, grid=grid(25165824), stream=stream0)
        del arg672_1
        buf2461 = reinterpret_tensor(buf2452, (128, 1024, 128), (131072, 128, 1), 0); del buf2452  # reuse
        # Topologically Sorted Source Nodes: [y_332], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2459, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2460, (128, 1536, 128), (196608, 128, 1), 0), out=buf2461)
        buf2462 = buf2433; del buf2433  # reuse
        # Topologically Sorted Source Nodes: [contiguous_83], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2461, buf2462, 16777216, grid=grid(16777216), stream=stream0)
        buf2463 = reinterpret_tensor(buf2449, (16384, 16384), (16384, 1), 0); del buf2449  # reuse
        # Topologically Sorted Source Nodes: [y_334], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2462, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg673_1, (1024, 16384), (1, 1024), 0), out=buf2463)
        del arg673_1
        # Topologically Sorted Source Nodes: [tensor_166], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2463, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_416], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2463, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2468 = buf2409; del buf2409  # reuse
        buf2470 = reinterpret_tensor(buf2355, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2355  # reuse
        # Topologically Sorted Source Nodes: [x_410, x_412, x_415, x_417, float_336, mul_1256, mean_167, add_502, rsqrt_167, mul_1257, output_334, output_335], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2468, buf2414, buf2434, buf2443, buf2463, arg674_1, buf2470, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg674_1
        buf2471 = buf2441; del buf2441  # reuse
        # Topologically Sorted Source Nodes: [x_418], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2470, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg675_1, (16384, 6656), (1, 16384), 0), out=buf2471)
        del arg675_1
        buf2472 = buf2442; del buf2442  # reuse
        # Topologically Sorted Source Nodes: [silu_83, mul_1259], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2471, buf2472, 54525952, grid=grid(54525952), stream=stream0)
        buf2473 = reinterpret_tensor(buf2470, (16384, 16384), (16384, 1), 0); del buf2470  # reuse
        # Topologically Sorted Source Nodes: [y_335], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2472, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg676_1, (3328, 16384), (1, 3328), 0), out=buf2473)
        del arg676_1
        # Topologically Sorted Source Nodes: [tensor_167], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2473, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_419], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2473, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2479 = reinterpret_tensor(buf2463, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2463  # reuse
        # Topologically Sorted Source Nodes: [x_420, float_337, mul_1260, mean_168, add_504, rsqrt_168, mul_1261, output_336, output_337], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2468, buf2473, arg677_1, buf2479, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg677_1
        buf2480 = buf2450; del buf2450  # reuse
        # Topologically Sorted Source Nodes: [linear_336], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2479, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg678_1, (16384, 1280), (1, 16384), 0), out=buf2480)
        del arg678_1
        # Topologically Sorted Source Nodes: [setitem_168, setitem_169], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2480, arg0_1, arg679_1, arg680_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2482 = reinterpret_tensor(buf2461, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2461  # reuse
        # Topologically Sorted Source Nodes: [y_336], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2480, arg2_1, arg0_1, buf2482, 16777216, grid=grid(16777216), stream=stream0)
        buf2483 = reinterpret_tensor(buf2460, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2460  # reuse
        # Topologically Sorted Source Nodes: [y_336], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg679_1, buf2483, 25165824, grid=grid(25165824), stream=stream0)
        del arg679_1
        buf2484 = reinterpret_tensor(buf2459, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2459  # reuse
        # Topologically Sorted Source Nodes: [y_336], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2482, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2483, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2484)
        buf2489 = reinterpret_tensor(buf2484, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2484  # reuse
        # Topologically Sorted Source Nodes: [mask, y_336], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2489, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2490 = reinterpret_tensor(buf2483, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2483  # reuse
        # Topologically Sorted Source Nodes: [y_336], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg680_1, buf2490, 25165824, grid=grid(25165824), stream=stream0)
        del arg680_1
        buf2491 = reinterpret_tensor(buf2482, (128, 1024, 128), (131072, 128, 1), 0); del buf2482  # reuse
        # Topologically Sorted Source Nodes: [y_336], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2489, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2490, (128, 1536, 128), (196608, 128, 1), 0), out=buf2491)
        buf2492 = buf2462; del buf2462  # reuse
        # Topologically Sorted Source Nodes: [contiguous_84], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2491, buf2492, 16777216, grid=grid(16777216), stream=stream0)
        buf2493 = reinterpret_tensor(buf2479, (16384, 16384), (16384, 1), 0); del buf2479  # reuse
        # Topologically Sorted Source Nodes: [y_338], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2492, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg681_1, (1024, 16384), (1, 1024), 0), out=buf2493)
        del arg681_1
        # Topologically Sorted Source Nodes: [tensor_168], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2493, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_421], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2493, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2499 = reinterpret_tensor(buf2443, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2443  # reuse
        # Topologically Sorted Source Nodes: [x_420, x_422, float_340, mul_1271, mean_169, add_508, rsqrt_169, mul_1272, output_338, output_339], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2468, buf2473, buf2493, arg682_1, buf2499, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg682_1
        buf2500 = buf2471; del buf2471  # reuse
        # Topologically Sorted Source Nodes: [x_423], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2499, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg683_1, (16384, 6656), (1, 16384), 0), out=buf2500)
        del arg683_1
        buf2501 = buf2472; del buf2472  # reuse
        # Topologically Sorted Source Nodes: [silu_84, mul_1274], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2500, buf2501, 54525952, grid=grid(54525952), stream=stream0)
        buf2502 = reinterpret_tensor(buf2499, (16384, 16384), (16384, 1), 0); del buf2499  # reuse
        # Topologically Sorted Source Nodes: [y_339], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2501, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg684_1, (3328, 16384), (1, 3328), 0), out=buf2502)
        del arg684_1
        # Topologically Sorted Source Nodes: [tensor_169], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2502, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_424], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2502, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2508 = reinterpret_tensor(buf2434, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2434  # reuse
        # Topologically Sorted Source Nodes: [x_420, x_422, x_425, float_341, mul_1275, mean_170, add_510, rsqrt_170, mul_1276, output_340, output_341], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2468, buf2473, buf2493, buf2502, arg685_1, buf2508, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg685_1
        buf2509 = buf2480; del buf2480  # reuse
        # Topologically Sorted Source Nodes: [linear_340], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2508, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg686_1, (16384, 1280), (1, 16384), 0), out=buf2509)
        del arg686_1
        # Topologically Sorted Source Nodes: [setitem_170, setitem_171], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2509, arg0_1, arg687_1, arg688_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2511 = reinterpret_tensor(buf2491, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2491  # reuse
        # Topologically Sorted Source Nodes: [y_340], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2509, arg2_1, arg0_1, buf2511, 16777216, grid=grid(16777216), stream=stream0)
        buf2512 = reinterpret_tensor(buf2490, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2490  # reuse
        # Topologically Sorted Source Nodes: [y_340], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg687_1, buf2512, 25165824, grid=grid(25165824), stream=stream0)
        del arg687_1
        buf2513 = reinterpret_tensor(buf2489, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2489  # reuse
        # Topologically Sorted Source Nodes: [y_340], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2511, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2512, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2513)
        buf2518 = reinterpret_tensor(buf2513, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2513  # reuse
        # Topologically Sorted Source Nodes: [mask, y_340], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2518, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2519 = reinterpret_tensor(buf2512, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2512  # reuse
        # Topologically Sorted Source Nodes: [y_340], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg688_1, buf2519, 25165824, grid=grid(25165824), stream=stream0)
        del arg688_1
        buf2520 = reinterpret_tensor(buf2511, (128, 1024, 128), (131072, 128, 1), 0); del buf2511  # reuse
        # Topologically Sorted Source Nodes: [y_340], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2518, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2519, (128, 1536, 128), (196608, 128, 1), 0), out=buf2520)
        buf2521 = buf2492; del buf2492  # reuse
        # Topologically Sorted Source Nodes: [contiguous_85], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2520, buf2521, 16777216, grid=grid(16777216), stream=stream0)
        buf2522 = reinterpret_tensor(buf2508, (16384, 16384), (16384, 1), 0); del buf2508  # reuse
        # Topologically Sorted Source Nodes: [y_342], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2521, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg689_1, (1024, 16384), (1, 1024), 0), out=buf2522)
        del arg689_1
        # Topologically Sorted Source Nodes: [tensor_170], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2522, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_426], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2522, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2527 = buf2468; del buf2468  # reuse
        buf2529 = reinterpret_tensor(buf2414, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2414  # reuse
        # Topologically Sorted Source Nodes: [x_420, x_422, x_425, x_427, float_344, mul_1286, mean_171, add_514, rsqrt_171, mul_1287, output_342, output_343], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2527, buf2473, buf2493, buf2502, buf2522, arg690_1, buf2529, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg690_1
        buf2530 = buf2500; del buf2500  # reuse
        # Topologically Sorted Source Nodes: [x_428], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2529, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg691_1, (16384, 6656), (1, 16384), 0), out=buf2530)
        del arg691_1
        buf2531 = buf2501; del buf2501  # reuse
        # Topologically Sorted Source Nodes: [silu_85, mul_1289], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2530, buf2531, 54525952, grid=grid(54525952), stream=stream0)
        buf2532 = reinterpret_tensor(buf2529, (16384, 16384), (16384, 1), 0); del buf2529  # reuse
        # Topologically Sorted Source Nodes: [y_343], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2531, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg692_1, (3328, 16384), (1, 3328), 0), out=buf2532)
        del arg692_1
        # Topologically Sorted Source Nodes: [tensor_171], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2532, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_429], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2532, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2538 = reinterpret_tensor(buf2522, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2522  # reuse
        # Topologically Sorted Source Nodes: [x_430, float_345, mul_1290, mean_172, add_516, rsqrt_172, mul_1291, output_344, output_345], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2527, buf2532, arg693_1, buf2538, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg693_1
        buf2539 = buf2509; del buf2509  # reuse
        # Topologically Sorted Source Nodes: [linear_344], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2538, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg694_1, (16384, 1280), (1, 16384), 0), out=buf2539)
        del arg694_1
        # Topologically Sorted Source Nodes: [setitem_172, setitem_173], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2539, arg0_1, arg695_1, arg696_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2541 = reinterpret_tensor(buf2520, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2520  # reuse
        # Topologically Sorted Source Nodes: [y_344], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2539, arg2_1, arg0_1, buf2541, 16777216, grid=grid(16777216), stream=stream0)
        buf2542 = reinterpret_tensor(buf2519, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2519  # reuse
        # Topologically Sorted Source Nodes: [y_344], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg695_1, buf2542, 25165824, grid=grid(25165824), stream=stream0)
        del arg695_1
        buf2543 = reinterpret_tensor(buf2518, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2518  # reuse
        # Topologically Sorted Source Nodes: [y_344], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2541, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2542, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2543)
        buf2548 = reinterpret_tensor(buf2543, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2543  # reuse
        # Topologically Sorted Source Nodes: [mask, y_344], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2548, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2549 = reinterpret_tensor(buf2542, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2542  # reuse
        # Topologically Sorted Source Nodes: [y_344], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg696_1, buf2549, 25165824, grid=grid(25165824), stream=stream0)
        del arg696_1
        buf2550 = reinterpret_tensor(buf2541, (128, 1024, 128), (131072, 128, 1), 0); del buf2541  # reuse
        # Topologically Sorted Source Nodes: [y_344], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2548, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2549, (128, 1536, 128), (196608, 128, 1), 0), out=buf2550)
        buf2551 = buf2521; del buf2521  # reuse
        # Topologically Sorted Source Nodes: [contiguous_86], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2550, buf2551, 16777216, grid=grid(16777216), stream=stream0)
        buf2552 = reinterpret_tensor(buf2538, (16384, 16384), (16384, 1), 0); del buf2538  # reuse
        # Topologically Sorted Source Nodes: [y_346], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2551, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg697_1, (1024, 16384), (1, 1024), 0), out=buf2552)
        del arg697_1
        # Topologically Sorted Source Nodes: [tensor_172], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2552, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_431], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2552, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2558 = reinterpret_tensor(buf2502, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2502  # reuse
        # Topologically Sorted Source Nodes: [x_430, x_432, float_348, mul_1301, mean_173, add_520, rsqrt_173, mul_1302, output_346, output_347], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2527, buf2532, buf2552, arg698_1, buf2558, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg698_1
        buf2559 = buf2530; del buf2530  # reuse
        # Topologically Sorted Source Nodes: [x_433], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2558, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg699_1, (16384, 6656), (1, 16384), 0), out=buf2559)
        del arg699_1
        buf2560 = buf2531; del buf2531  # reuse
        # Topologically Sorted Source Nodes: [silu_86, mul_1304], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2559, buf2560, 54525952, grid=grid(54525952), stream=stream0)
        buf2561 = reinterpret_tensor(buf2558, (16384, 16384), (16384, 1), 0); del buf2558  # reuse
        # Topologically Sorted Source Nodes: [y_347], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2560, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg700_1, (3328, 16384), (1, 3328), 0), out=buf2561)
        del arg700_1
        # Topologically Sorted Source Nodes: [tensor_173], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2561, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_434], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2561, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2567 = reinterpret_tensor(buf2493, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2493  # reuse
        # Topologically Sorted Source Nodes: [x_430, x_432, x_435, float_349, mul_1305, mean_174, add_522, rsqrt_174, mul_1306, output_348, output_349], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2527, buf2532, buf2552, buf2561, arg701_1, buf2567, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg701_1
        buf2568 = buf2539; del buf2539  # reuse
        # Topologically Sorted Source Nodes: [linear_348], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2567, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg702_1, (16384, 1280), (1, 16384), 0), out=buf2568)
        del arg702_1
        # Topologically Sorted Source Nodes: [setitem_174, setitem_175], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2568, arg0_1, arg703_1, arg704_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2570 = reinterpret_tensor(buf2550, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2550  # reuse
        # Topologically Sorted Source Nodes: [y_348], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2568, arg2_1, arg0_1, buf2570, 16777216, grid=grid(16777216), stream=stream0)
        buf2571 = reinterpret_tensor(buf2549, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2549  # reuse
        # Topologically Sorted Source Nodes: [y_348], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg703_1, buf2571, 25165824, grid=grid(25165824), stream=stream0)
        del arg703_1
        buf2572 = reinterpret_tensor(buf2548, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2548  # reuse
        # Topologically Sorted Source Nodes: [y_348], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2570, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2571, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2572)
        buf2577 = reinterpret_tensor(buf2572, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2572  # reuse
        # Topologically Sorted Source Nodes: [mask, y_348], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2577, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2578 = reinterpret_tensor(buf2571, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2571  # reuse
        # Topologically Sorted Source Nodes: [y_348], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg704_1, buf2578, 25165824, grid=grid(25165824), stream=stream0)
        del arg704_1
        buf2579 = reinterpret_tensor(buf2570, (128, 1024, 128), (131072, 128, 1), 0); del buf2570  # reuse
        # Topologically Sorted Source Nodes: [y_348], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2577, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2578, (128, 1536, 128), (196608, 128, 1), 0), out=buf2579)
        buf2580 = buf2551; del buf2551  # reuse
        # Topologically Sorted Source Nodes: [contiguous_87], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2579, buf2580, 16777216, grid=grid(16777216), stream=stream0)
        buf2581 = reinterpret_tensor(buf2567, (16384, 16384), (16384, 1), 0); del buf2567  # reuse
        # Topologically Sorted Source Nodes: [y_350], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2580, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg705_1, (1024, 16384), (1, 1024), 0), out=buf2581)
        del arg705_1
        # Topologically Sorted Source Nodes: [tensor_174], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2581, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_436], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2581, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2586 = buf2527; del buf2527  # reuse
        buf2588 = reinterpret_tensor(buf2473, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2473  # reuse
        # Topologically Sorted Source Nodes: [x_430, x_432, x_435, x_437, float_352, mul_1316, mean_175, add_526, rsqrt_175, mul_1317, output_350, output_351], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2586, buf2532, buf2552, buf2561, buf2581, arg706_1, buf2588, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg706_1
        buf2589 = buf2559; del buf2559  # reuse
        # Topologically Sorted Source Nodes: [x_438], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2588, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg707_1, (16384, 6656), (1, 16384), 0), out=buf2589)
        del arg707_1
        buf2590 = buf2560; del buf2560  # reuse
        # Topologically Sorted Source Nodes: [silu_87, mul_1319], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2589, buf2590, 54525952, grid=grid(54525952), stream=stream0)
        buf2591 = reinterpret_tensor(buf2588, (16384, 16384), (16384, 1), 0); del buf2588  # reuse
        # Topologically Sorted Source Nodes: [y_351], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2590, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg708_1, (3328, 16384), (1, 3328), 0), out=buf2591)
        del arg708_1
        # Topologically Sorted Source Nodes: [tensor_175], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2591, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_439], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2591, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2597 = reinterpret_tensor(buf2581, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2581  # reuse
        # Topologically Sorted Source Nodes: [x_440, float_353, mul_1320, mean_176, add_528, rsqrt_176, mul_1321, output_352, output_353], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2586, buf2591, arg709_1, buf2597, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg709_1
        buf2598 = buf2568; del buf2568  # reuse
        # Topologically Sorted Source Nodes: [linear_352], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2597, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg710_1, (16384, 1280), (1, 16384), 0), out=buf2598)
        del arg710_1
        # Topologically Sorted Source Nodes: [setitem_176, setitem_177], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2598, arg0_1, arg711_1, arg712_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2600 = reinterpret_tensor(buf2579, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2579  # reuse
        # Topologically Sorted Source Nodes: [y_352], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2598, arg2_1, arg0_1, buf2600, 16777216, grid=grid(16777216), stream=stream0)
        buf2601 = reinterpret_tensor(buf2578, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2578  # reuse
        # Topologically Sorted Source Nodes: [y_352], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg711_1, buf2601, 25165824, grid=grid(25165824), stream=stream0)
        del arg711_1
        buf2602 = reinterpret_tensor(buf2577, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2577  # reuse
        # Topologically Sorted Source Nodes: [y_352], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2600, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2601, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2602)
        buf2607 = reinterpret_tensor(buf2602, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2602  # reuse
        # Topologically Sorted Source Nodes: [mask, y_352], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2607, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2608 = reinterpret_tensor(buf2601, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2601  # reuse
        # Topologically Sorted Source Nodes: [y_352], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg712_1, buf2608, 25165824, grid=grid(25165824), stream=stream0)
        del arg712_1
        buf2609 = reinterpret_tensor(buf2600, (128, 1024, 128), (131072, 128, 1), 0); del buf2600  # reuse
        # Topologically Sorted Source Nodes: [y_352], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2607, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2608, (128, 1536, 128), (196608, 128, 1), 0), out=buf2609)
        buf2610 = buf2580; del buf2580  # reuse
        # Topologically Sorted Source Nodes: [contiguous_88], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2609, buf2610, 16777216, grid=grid(16777216), stream=stream0)
        buf2611 = reinterpret_tensor(buf2597, (16384, 16384), (16384, 1), 0); del buf2597  # reuse
        # Topologically Sorted Source Nodes: [y_354], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2610, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg713_1, (1024, 16384), (1, 1024), 0), out=buf2611)
        del arg713_1
        # Topologically Sorted Source Nodes: [tensor_176], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2611, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_441], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2611, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2617 = reinterpret_tensor(buf2561, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2561  # reuse
        # Topologically Sorted Source Nodes: [x_440, x_442, float_356, mul_1331, mean_177, add_532, rsqrt_177, mul_1332, output_354, output_355], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2586, buf2591, buf2611, arg714_1, buf2617, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg714_1
        buf2618 = buf2589; del buf2589  # reuse
        # Topologically Sorted Source Nodes: [x_443], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2617, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg715_1, (16384, 6656), (1, 16384), 0), out=buf2618)
        del arg715_1
        buf2619 = buf2590; del buf2590  # reuse
        # Topologically Sorted Source Nodes: [silu_88, mul_1334], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2618, buf2619, 54525952, grid=grid(54525952), stream=stream0)
        buf2620 = reinterpret_tensor(buf2617, (16384, 16384), (16384, 1), 0); del buf2617  # reuse
        # Topologically Sorted Source Nodes: [y_355], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2619, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg716_1, (3328, 16384), (1, 3328), 0), out=buf2620)
        del arg716_1
        # Topologically Sorted Source Nodes: [tensor_177], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2620, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_444], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2620, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2626 = reinterpret_tensor(buf2552, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2552  # reuse
        # Topologically Sorted Source Nodes: [x_440, x_442, x_445, float_357, mul_1335, mean_178, add_534, rsqrt_178, mul_1336, output_356, output_357], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2586, buf2591, buf2611, buf2620, arg717_1, buf2626, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg717_1
        buf2627 = buf2598; del buf2598  # reuse
        # Topologically Sorted Source Nodes: [linear_356], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2626, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg718_1, (16384, 1280), (1, 16384), 0), out=buf2627)
        del arg718_1
        # Topologically Sorted Source Nodes: [setitem_178, setitem_179], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2627, arg0_1, arg719_1, arg720_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2629 = reinterpret_tensor(buf2609, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2609  # reuse
        # Topologically Sorted Source Nodes: [y_356], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2627, arg2_1, arg0_1, buf2629, 16777216, grid=grid(16777216), stream=stream0)
        buf2630 = reinterpret_tensor(buf2608, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2608  # reuse
        # Topologically Sorted Source Nodes: [y_356], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg719_1, buf2630, 25165824, grid=grid(25165824), stream=stream0)
        del arg719_1
        buf2631 = reinterpret_tensor(buf2607, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2607  # reuse
        # Topologically Sorted Source Nodes: [y_356], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2629, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2630, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2631)
        buf2636 = reinterpret_tensor(buf2631, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2631  # reuse
        # Topologically Sorted Source Nodes: [mask, y_356], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2636, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2637 = reinterpret_tensor(buf2630, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2630  # reuse
        # Topologically Sorted Source Nodes: [y_356], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg720_1, buf2637, 25165824, grid=grid(25165824), stream=stream0)
        del arg720_1
        buf2638 = reinterpret_tensor(buf2629, (128, 1024, 128), (131072, 128, 1), 0); del buf2629  # reuse
        # Topologically Sorted Source Nodes: [y_356], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2636, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2637, (128, 1536, 128), (196608, 128, 1), 0), out=buf2638)
        buf2639 = buf2610; del buf2610  # reuse
        # Topologically Sorted Source Nodes: [contiguous_89], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2638, buf2639, 16777216, grid=grid(16777216), stream=stream0)
        buf2640 = reinterpret_tensor(buf2626, (16384, 16384), (16384, 1), 0); del buf2626  # reuse
        # Topologically Sorted Source Nodes: [y_358], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2639, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg721_1, (1024, 16384), (1, 1024), 0), out=buf2640)
        del arg721_1
        # Topologically Sorted Source Nodes: [tensor_178], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2640, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_446], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2640, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2645 = buf2586; del buf2586  # reuse
        buf2647 = reinterpret_tensor(buf2532, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2532  # reuse
        # Topologically Sorted Source Nodes: [x_440, x_442, x_445, x_447, float_360, mul_1346, mean_179, add_538, rsqrt_179, mul_1347, output_358, output_359], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2645, buf2591, buf2611, buf2620, buf2640, arg722_1, buf2647, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg722_1
        buf2648 = buf2618; del buf2618  # reuse
        # Topologically Sorted Source Nodes: [x_448], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2647, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg723_1, (16384, 6656), (1, 16384), 0), out=buf2648)
        del arg723_1
        buf2649 = buf2619; del buf2619  # reuse
        # Topologically Sorted Source Nodes: [silu_89, mul_1349], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2648, buf2649, 54525952, grid=grid(54525952), stream=stream0)
        buf2650 = reinterpret_tensor(buf2647, (16384, 16384), (16384, 1), 0); del buf2647  # reuse
        # Topologically Sorted Source Nodes: [y_359], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2649, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg724_1, (3328, 16384), (1, 3328), 0), out=buf2650)
        del arg724_1
        # Topologically Sorted Source Nodes: [tensor_179], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2650, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_449], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2650, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2656 = reinterpret_tensor(buf2640, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2640  # reuse
        # Topologically Sorted Source Nodes: [x_450, float_361, mul_1350, mean_180, add_540, rsqrt_180, mul_1351, output_360, output_361], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2645, buf2650, arg725_1, buf2656, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg725_1
        buf2657 = buf2627; del buf2627  # reuse
        # Topologically Sorted Source Nodes: [linear_360], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2656, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg726_1, (16384, 1280), (1, 16384), 0), out=buf2657)
        del arg726_1
        # Topologically Sorted Source Nodes: [setitem_180, setitem_181], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2657, arg0_1, arg727_1, arg728_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2659 = reinterpret_tensor(buf2638, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2638  # reuse
        # Topologically Sorted Source Nodes: [y_360], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2657, arg2_1, arg0_1, buf2659, 16777216, grid=grid(16777216), stream=stream0)
        buf2660 = reinterpret_tensor(buf2637, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2637  # reuse
        # Topologically Sorted Source Nodes: [y_360], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg727_1, buf2660, 25165824, grid=grid(25165824), stream=stream0)
        del arg727_1
        buf2661 = reinterpret_tensor(buf2636, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2636  # reuse
        # Topologically Sorted Source Nodes: [y_360], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2659, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2660, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2661)
        buf2666 = reinterpret_tensor(buf2661, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2661  # reuse
        # Topologically Sorted Source Nodes: [mask, y_360], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2666, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2667 = reinterpret_tensor(buf2660, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2660  # reuse
        # Topologically Sorted Source Nodes: [y_360], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg728_1, buf2667, 25165824, grid=grid(25165824), stream=stream0)
        del arg728_1
        buf2668 = reinterpret_tensor(buf2659, (128, 1024, 128), (131072, 128, 1), 0); del buf2659  # reuse
        # Topologically Sorted Source Nodes: [y_360], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2666, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2667, (128, 1536, 128), (196608, 128, 1), 0), out=buf2668)
        buf2669 = buf2639; del buf2639  # reuse
        # Topologically Sorted Source Nodes: [contiguous_90], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2668, buf2669, 16777216, grid=grid(16777216), stream=stream0)
        buf2670 = reinterpret_tensor(buf2656, (16384, 16384), (16384, 1), 0); del buf2656  # reuse
        # Topologically Sorted Source Nodes: [y_362], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2669, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg729_1, (1024, 16384), (1, 1024), 0), out=buf2670)
        del arg729_1
        # Topologically Sorted Source Nodes: [tensor_180], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2670, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_451], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2670, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2676 = reinterpret_tensor(buf2620, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2620  # reuse
        # Topologically Sorted Source Nodes: [x_450, x_452, float_364, mul_1361, mean_181, add_544, rsqrt_181, mul_1362, output_362, output_363], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2645, buf2650, buf2670, arg730_1, buf2676, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg730_1
        buf2677 = buf2648; del buf2648  # reuse
        # Topologically Sorted Source Nodes: [x_453], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2676, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg731_1, (16384, 6656), (1, 16384), 0), out=buf2677)
        del arg731_1
        buf2678 = buf2649; del buf2649  # reuse
        # Topologically Sorted Source Nodes: [silu_90, mul_1364], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2677, buf2678, 54525952, grid=grid(54525952), stream=stream0)
        buf2679 = reinterpret_tensor(buf2676, (16384, 16384), (16384, 1), 0); del buf2676  # reuse
        # Topologically Sorted Source Nodes: [y_363], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2678, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg732_1, (3328, 16384), (1, 3328), 0), out=buf2679)
        del arg732_1
        # Topologically Sorted Source Nodes: [tensor_181], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2679, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_454], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2679, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2685 = reinterpret_tensor(buf2611, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2611  # reuse
        # Topologically Sorted Source Nodes: [x_450, x_452, x_455, float_365, mul_1365, mean_182, add_546, rsqrt_182, mul_1366, output_364, output_365], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2645, buf2650, buf2670, buf2679, arg733_1, buf2685, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg733_1
        buf2686 = buf2657; del buf2657  # reuse
        # Topologically Sorted Source Nodes: [linear_364], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2685, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg734_1, (16384, 1280), (1, 16384), 0), out=buf2686)
        del arg734_1
        # Topologically Sorted Source Nodes: [setitem_182, setitem_183], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2686, arg0_1, arg735_1, arg736_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2688 = reinterpret_tensor(buf2668, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2668  # reuse
        # Topologically Sorted Source Nodes: [y_364], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2686, arg2_1, arg0_1, buf2688, 16777216, grid=grid(16777216), stream=stream0)
        buf2689 = reinterpret_tensor(buf2667, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2667  # reuse
        # Topologically Sorted Source Nodes: [y_364], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg735_1, buf2689, 25165824, grid=grid(25165824), stream=stream0)
        del arg735_1
        buf2690 = reinterpret_tensor(buf2666, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2666  # reuse
        # Topologically Sorted Source Nodes: [y_364], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2688, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2689, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2690)
        buf2695 = reinterpret_tensor(buf2690, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2690  # reuse
        # Topologically Sorted Source Nodes: [mask, y_364], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2695, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2696 = reinterpret_tensor(buf2689, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2689  # reuse
        # Topologically Sorted Source Nodes: [y_364], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg736_1, buf2696, 25165824, grid=grid(25165824), stream=stream0)
        del arg736_1
        buf2697 = reinterpret_tensor(buf2688, (128, 1024, 128), (131072, 128, 1), 0); del buf2688  # reuse
        # Topologically Sorted Source Nodes: [y_364], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2695, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2696, (128, 1536, 128), (196608, 128, 1), 0), out=buf2697)
        buf2698 = buf2669; del buf2669  # reuse
        # Topologically Sorted Source Nodes: [contiguous_91], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2697, buf2698, 16777216, grid=grid(16777216), stream=stream0)
        buf2699 = reinterpret_tensor(buf2685, (16384, 16384), (16384, 1), 0); del buf2685  # reuse
        # Topologically Sorted Source Nodes: [y_366], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2698, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg737_1, (1024, 16384), (1, 1024), 0), out=buf2699)
        del arg737_1
        # Topologically Sorted Source Nodes: [tensor_182], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2699, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_456], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2699, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2704 = buf2645; del buf2645  # reuse
        buf2706 = reinterpret_tensor(buf2591, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2591  # reuse
        # Topologically Sorted Source Nodes: [x_450, x_452, x_455, x_457, float_368, mul_1376, mean_183, add_550, rsqrt_183, mul_1377, output_366, output_367], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2704, buf2650, buf2670, buf2679, buf2699, arg738_1, buf2706, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg738_1
        buf2707 = buf2677; del buf2677  # reuse
        # Topologically Sorted Source Nodes: [x_458], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2706, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg739_1, (16384, 6656), (1, 16384), 0), out=buf2707)
        del arg739_1
        buf2708 = buf2678; del buf2678  # reuse
        # Topologically Sorted Source Nodes: [silu_91, mul_1379], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2707, buf2708, 54525952, grid=grid(54525952), stream=stream0)
        buf2709 = reinterpret_tensor(buf2706, (16384, 16384), (16384, 1), 0); del buf2706  # reuse
        # Topologically Sorted Source Nodes: [y_367], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2708, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg740_1, (3328, 16384), (1, 3328), 0), out=buf2709)
        del arg740_1
        # Topologically Sorted Source Nodes: [tensor_183], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2709, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_459], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2709, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2715 = reinterpret_tensor(buf2699, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2699  # reuse
        # Topologically Sorted Source Nodes: [x_460, float_369, mul_1380, mean_184, add_552, rsqrt_184, mul_1381, output_368, output_369], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2704, buf2709, arg741_1, buf2715, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg741_1
        buf2716 = buf2686; del buf2686  # reuse
        # Topologically Sorted Source Nodes: [linear_368], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2715, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg742_1, (16384, 1280), (1, 16384), 0), out=buf2716)
        del arg742_1
        # Topologically Sorted Source Nodes: [setitem_184, setitem_185], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2716, arg0_1, arg743_1, arg744_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2718 = reinterpret_tensor(buf2697, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2697  # reuse
        # Topologically Sorted Source Nodes: [y_368], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2716, arg2_1, arg0_1, buf2718, 16777216, grid=grid(16777216), stream=stream0)
        buf2719 = reinterpret_tensor(buf2696, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2696  # reuse
        # Topologically Sorted Source Nodes: [y_368], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg743_1, buf2719, 25165824, grid=grid(25165824), stream=stream0)
        del arg743_1
        buf2720 = reinterpret_tensor(buf2695, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2695  # reuse
        # Topologically Sorted Source Nodes: [y_368], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2718, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2719, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2720)
        buf2725 = reinterpret_tensor(buf2720, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2720  # reuse
        # Topologically Sorted Source Nodes: [mask, y_368], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2725, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2726 = reinterpret_tensor(buf2719, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2719  # reuse
        # Topologically Sorted Source Nodes: [y_368], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg744_1, buf2726, 25165824, grid=grid(25165824), stream=stream0)
        del arg744_1
        buf2727 = reinterpret_tensor(buf2718, (128, 1024, 128), (131072, 128, 1), 0); del buf2718  # reuse
        # Topologically Sorted Source Nodes: [y_368], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2725, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2726, (128, 1536, 128), (196608, 128, 1), 0), out=buf2727)
        buf2728 = buf2698; del buf2698  # reuse
        # Topologically Sorted Source Nodes: [contiguous_92], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2727, buf2728, 16777216, grid=grid(16777216), stream=stream0)
        buf2729 = reinterpret_tensor(buf2715, (16384, 16384), (16384, 1), 0); del buf2715  # reuse
        # Topologically Sorted Source Nodes: [y_370], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2728, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg745_1, (1024, 16384), (1, 1024), 0), out=buf2729)
        del arg745_1
        # Topologically Sorted Source Nodes: [tensor_184], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2729, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_461], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2729, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2735 = reinterpret_tensor(buf2679, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2679  # reuse
        # Topologically Sorted Source Nodes: [x_460, x_462, float_372, mul_1391, mean_185, add_556, rsqrt_185, mul_1392, output_370, output_371], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2704, buf2709, buf2729, arg746_1, buf2735, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg746_1
        buf2736 = buf2707; del buf2707  # reuse
        # Topologically Sorted Source Nodes: [x_463], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2735, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg747_1, (16384, 6656), (1, 16384), 0), out=buf2736)
        del arg747_1
        buf2737 = buf2708; del buf2708  # reuse
        # Topologically Sorted Source Nodes: [silu_92, mul_1394], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2736, buf2737, 54525952, grid=grid(54525952), stream=stream0)
        buf2738 = reinterpret_tensor(buf2735, (16384, 16384), (16384, 1), 0); del buf2735  # reuse
        # Topologically Sorted Source Nodes: [y_371], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2737, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg748_1, (3328, 16384), (1, 3328), 0), out=buf2738)
        del arg748_1
        # Topologically Sorted Source Nodes: [tensor_185], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2738, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_464], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2738, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2744 = reinterpret_tensor(buf2670, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2670  # reuse
        # Topologically Sorted Source Nodes: [x_460, x_462, x_465, float_373, mul_1395, mean_186, add_558, rsqrt_186, mul_1396, output_372, output_373], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2704, buf2709, buf2729, buf2738, arg749_1, buf2744, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg749_1
        buf2745 = buf2716; del buf2716  # reuse
        # Topologically Sorted Source Nodes: [linear_372], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2744, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg750_1, (16384, 1280), (1, 16384), 0), out=buf2745)
        del arg750_1
        # Topologically Sorted Source Nodes: [setitem_186, setitem_187], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2745, arg0_1, arg751_1, arg752_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2747 = reinterpret_tensor(buf2727, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2727  # reuse
        # Topologically Sorted Source Nodes: [y_372], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2745, arg2_1, arg0_1, buf2747, 16777216, grid=grid(16777216), stream=stream0)
        buf2748 = reinterpret_tensor(buf2726, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2726  # reuse
        # Topologically Sorted Source Nodes: [y_372], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg751_1, buf2748, 25165824, grid=grid(25165824), stream=stream0)
        del arg751_1
        buf2749 = reinterpret_tensor(buf2725, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2725  # reuse
        # Topologically Sorted Source Nodes: [y_372], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2747, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2748, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2749)
        buf2754 = reinterpret_tensor(buf2749, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2749  # reuse
        # Topologically Sorted Source Nodes: [mask, y_372], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2754, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2755 = reinterpret_tensor(buf2748, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2748  # reuse
        # Topologically Sorted Source Nodes: [y_372], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg752_1, buf2755, 25165824, grid=grid(25165824), stream=stream0)
        del arg752_1
        buf2756 = reinterpret_tensor(buf2747, (128, 1024, 128), (131072, 128, 1), 0); del buf2747  # reuse
        # Topologically Sorted Source Nodes: [y_372], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2754, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2755, (128, 1536, 128), (196608, 128, 1), 0), out=buf2756)
        buf2757 = buf2728; del buf2728  # reuse
        # Topologically Sorted Source Nodes: [contiguous_93], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2756, buf2757, 16777216, grid=grid(16777216), stream=stream0)
        buf2758 = reinterpret_tensor(buf2744, (16384, 16384), (16384, 1), 0); del buf2744  # reuse
        # Topologically Sorted Source Nodes: [y_374], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2757, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg753_1, (1024, 16384), (1, 1024), 0), out=buf2758)
        del arg753_1
        # Topologically Sorted Source Nodes: [tensor_186], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2758, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_466], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2758, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2763 = buf2704; del buf2704  # reuse
        buf2765 = reinterpret_tensor(buf2650, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2650  # reuse
        # Topologically Sorted Source Nodes: [x_460, x_462, x_465, x_467, float_376, mul_1406, mean_187, add_562, rsqrt_187, mul_1407, output_374, output_375], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2763, buf2709, buf2729, buf2738, buf2758, arg754_1, buf2765, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg754_1
        buf2766 = buf2736; del buf2736  # reuse
        # Topologically Sorted Source Nodes: [x_468], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2765, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg755_1, (16384, 6656), (1, 16384), 0), out=buf2766)
        del arg755_1
        buf2767 = buf2737; del buf2737  # reuse
        # Topologically Sorted Source Nodes: [silu_93, mul_1409], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2766, buf2767, 54525952, grid=grid(54525952), stream=stream0)
        buf2768 = reinterpret_tensor(buf2765, (16384, 16384), (16384, 1), 0); del buf2765  # reuse
        # Topologically Sorted Source Nodes: [y_375], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2767, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg756_1, (3328, 16384), (1, 3328), 0), out=buf2768)
        del arg756_1
        # Topologically Sorted Source Nodes: [tensor_187], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2768, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_469], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2768, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2774 = reinterpret_tensor(buf2758, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2758  # reuse
        # Topologically Sorted Source Nodes: [x_470, float_377, mul_1410, mean_188, add_564, rsqrt_188, mul_1411, output_376, output_377], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2763, buf2768, arg757_1, buf2774, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg757_1
        buf2775 = buf2745; del buf2745  # reuse
        # Topologically Sorted Source Nodes: [linear_376], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2774, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg758_1, (16384, 1280), (1, 16384), 0), out=buf2775)
        del arg758_1
        # Topologically Sorted Source Nodes: [setitem_188, setitem_189], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2775, arg0_1, arg759_1, arg760_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2777 = reinterpret_tensor(buf2756, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2756  # reuse
        # Topologically Sorted Source Nodes: [y_376], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2775, arg2_1, arg0_1, buf2777, 16777216, grid=grid(16777216), stream=stream0)
        buf2778 = reinterpret_tensor(buf2755, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2755  # reuse
        # Topologically Sorted Source Nodes: [y_376], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg759_1, buf2778, 25165824, grid=grid(25165824), stream=stream0)
        del arg759_1
        buf2779 = reinterpret_tensor(buf2754, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2754  # reuse
        # Topologically Sorted Source Nodes: [y_376], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2777, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2778, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2779)
        buf2784 = reinterpret_tensor(buf2779, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2779  # reuse
        # Topologically Sorted Source Nodes: [mask, y_376], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2784, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2785 = reinterpret_tensor(buf2778, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2778  # reuse
        # Topologically Sorted Source Nodes: [y_376], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg760_1, buf2785, 25165824, grid=grid(25165824), stream=stream0)
        del arg760_1
        buf2786 = reinterpret_tensor(buf2777, (128, 1024, 128), (131072, 128, 1), 0); del buf2777  # reuse
        # Topologically Sorted Source Nodes: [y_376], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2784, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2785, (128, 1536, 128), (196608, 128, 1), 0), out=buf2786)
        buf2787 = buf2757; del buf2757  # reuse
        # Topologically Sorted Source Nodes: [contiguous_94], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2786, buf2787, 16777216, grid=grid(16777216), stream=stream0)
        buf2788 = reinterpret_tensor(buf2774, (16384, 16384), (16384, 1), 0); del buf2774  # reuse
        # Topologically Sorted Source Nodes: [y_378], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2787, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg761_1, (1024, 16384), (1, 1024), 0), out=buf2788)
        del arg761_1
        # Topologically Sorted Source Nodes: [tensor_188], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2788, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_471], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2788, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2794 = reinterpret_tensor(buf2738, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2738  # reuse
        # Topologically Sorted Source Nodes: [x_470, x_472, float_380, mul_1421, mean_189, add_568, rsqrt_189, mul_1422, output_378, output_379], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2763, buf2768, buf2788, arg762_1, buf2794, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg762_1
        buf2795 = buf2766; del buf2766  # reuse
        # Topologically Sorted Source Nodes: [x_473], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2794, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg763_1, (16384, 6656), (1, 16384), 0), out=buf2795)
        del arg763_1
        buf2796 = buf2767; del buf2767  # reuse
        # Topologically Sorted Source Nodes: [silu_94, mul_1424], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2795, buf2796, 54525952, grid=grid(54525952), stream=stream0)
        buf2797 = reinterpret_tensor(buf2794, (16384, 16384), (16384, 1), 0); del buf2794  # reuse
        # Topologically Sorted Source Nodes: [y_379], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2796, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg764_1, (3328, 16384), (1, 3328), 0), out=buf2797)
        del arg764_1
        # Topologically Sorted Source Nodes: [tensor_189], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2797, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_474], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2797, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2803 = reinterpret_tensor(buf2729, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2729  # reuse
        # Topologically Sorted Source Nodes: [x_470, x_472, x_475, float_381, mul_1425, mean_190, add_570, rsqrt_190, mul_1426, output_380, output_381], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2763, buf2768, buf2788, buf2797, arg765_1, buf2803, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg765_1
        buf2804 = buf2775; del buf2775  # reuse
        # Topologically Sorted Source Nodes: [linear_380], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2803, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg766_1, (16384, 1280), (1, 16384), 0), out=buf2804)
        del arg766_1
        # Topologically Sorted Source Nodes: [setitem_190, setitem_191], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2804, arg0_1, arg767_1, arg768_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2806 = reinterpret_tensor(buf2786, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2786  # reuse
        # Topologically Sorted Source Nodes: [y_380], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2804, arg2_1, arg0_1, buf2806, 16777216, grid=grid(16777216), stream=stream0)
        buf2807 = reinterpret_tensor(buf2785, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2785  # reuse
        # Topologically Sorted Source Nodes: [y_380], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg767_1, buf2807, 25165824, grid=grid(25165824), stream=stream0)
        del arg767_1
        buf2808 = reinterpret_tensor(buf2784, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2784  # reuse
        # Topologically Sorted Source Nodes: [y_380], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2806, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2807, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2808)
        buf2813 = reinterpret_tensor(buf2808, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2808  # reuse
        # Topologically Sorted Source Nodes: [mask, y_380], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2813, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2814 = reinterpret_tensor(buf2807, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2807  # reuse
        # Topologically Sorted Source Nodes: [y_380], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg768_1, buf2814, 25165824, grid=grid(25165824), stream=stream0)
        del arg768_1
        buf2815 = reinterpret_tensor(buf2806, (128, 1024, 128), (131072, 128, 1), 0); del buf2806  # reuse
        # Topologically Sorted Source Nodes: [y_380], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2813, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2814, (128, 1536, 128), (196608, 128, 1), 0), out=buf2815)
        buf2816 = buf2787; del buf2787  # reuse
        # Topologically Sorted Source Nodes: [contiguous_95], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2815, buf2816, 16777216, grid=grid(16777216), stream=stream0)
        buf2817 = reinterpret_tensor(buf2803, (16384, 16384), (16384, 1), 0); del buf2803  # reuse
        # Topologically Sorted Source Nodes: [y_382], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2816, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg769_1, (1024, 16384), (1, 1024), 0), out=buf2817)
        del arg769_1
        # Topologically Sorted Source Nodes: [tensor_190], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2817, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_476], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2817, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2822 = buf2763; del buf2763  # reuse
        buf2824 = reinterpret_tensor(buf2709, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2709  # reuse
        # Topologically Sorted Source Nodes: [x_470, x_472, x_475, x_477, float_384, mul_1436, mean_191, add_574, rsqrt_191, mul_1437, output_382, output_383], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2822, buf2768, buf2788, buf2797, buf2817, arg770_1, buf2824, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg770_1
        buf2825 = buf2795; del buf2795  # reuse
        # Topologically Sorted Source Nodes: [x_478], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2824, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg771_1, (16384, 6656), (1, 16384), 0), out=buf2825)
        del arg771_1
        buf2826 = buf2796; del buf2796  # reuse
        # Topologically Sorted Source Nodes: [silu_95, mul_1439], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2825, buf2826, 54525952, grid=grid(54525952), stream=stream0)
        buf2827 = reinterpret_tensor(buf2824, (16384, 16384), (16384, 1), 0); del buf2824  # reuse
        # Topologically Sorted Source Nodes: [y_383], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2826, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg772_1, (3328, 16384), (1, 3328), 0), out=buf2827)
        del arg772_1
        # Topologically Sorted Source Nodes: [tensor_191], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2827, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_479], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2827, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2833 = reinterpret_tensor(buf2817, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2817  # reuse
        # Topologically Sorted Source Nodes: [x_480, float_385, mul_1440, mean_192, add_576, rsqrt_192, mul_1441, output_384, output_385], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2822, buf2827, arg773_1, buf2833, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg773_1
        buf2834 = buf2804; del buf2804  # reuse
        # Topologically Sorted Source Nodes: [linear_384], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2833, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg774_1, (16384, 1280), (1, 16384), 0), out=buf2834)
        del arg774_1
        # Topologically Sorted Source Nodes: [setitem_192, setitem_193], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2834, arg0_1, arg775_1, arg776_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2836 = reinterpret_tensor(buf2815, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2815  # reuse
        # Topologically Sorted Source Nodes: [y_384], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2834, arg2_1, arg0_1, buf2836, 16777216, grid=grid(16777216), stream=stream0)
        buf2837 = reinterpret_tensor(buf2814, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2814  # reuse
        # Topologically Sorted Source Nodes: [y_384], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg775_1, buf2837, 25165824, grid=grid(25165824), stream=stream0)
        del arg775_1
        buf2838 = reinterpret_tensor(buf2813, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2813  # reuse
        # Topologically Sorted Source Nodes: [y_384], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2836, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2837, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2838)
        buf2843 = reinterpret_tensor(buf2838, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2838  # reuse
        # Topologically Sorted Source Nodes: [mask, y_384], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2843, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2844 = reinterpret_tensor(buf2837, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2837  # reuse
        # Topologically Sorted Source Nodes: [y_384], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg776_1, buf2844, 25165824, grid=grid(25165824), stream=stream0)
        del arg776_1
        buf2845 = reinterpret_tensor(buf2836, (128, 1024, 128), (131072, 128, 1), 0); del buf2836  # reuse
        # Topologically Sorted Source Nodes: [y_384], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2843, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2844, (128, 1536, 128), (196608, 128, 1), 0), out=buf2845)
        buf2846 = buf2816; del buf2816  # reuse
        # Topologically Sorted Source Nodes: [contiguous_96], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2845, buf2846, 16777216, grid=grid(16777216), stream=stream0)
        buf2847 = reinterpret_tensor(buf2833, (16384, 16384), (16384, 1), 0); del buf2833  # reuse
        # Topologically Sorted Source Nodes: [y_386], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2846, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg777_1, (1024, 16384), (1, 1024), 0), out=buf2847)
        del arg777_1
        # Topologically Sorted Source Nodes: [tensor_192], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2847, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_481], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2847, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2853 = reinterpret_tensor(buf2797, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2797  # reuse
        # Topologically Sorted Source Nodes: [x_480, x_482, float_388, mul_1451, mean_193, add_580, rsqrt_193, mul_1452, output_386, output_387], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2822, buf2827, buf2847, arg778_1, buf2853, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg778_1
        buf2854 = buf2825; del buf2825  # reuse
        # Topologically Sorted Source Nodes: [x_483], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2853, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg779_1, (16384, 6656), (1, 16384), 0), out=buf2854)
        del arg779_1
        buf2855 = buf2826; del buf2826  # reuse
        # Topologically Sorted Source Nodes: [silu_96, mul_1454], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2854, buf2855, 54525952, grid=grid(54525952), stream=stream0)
        buf2856 = reinterpret_tensor(buf2853, (16384, 16384), (16384, 1), 0); del buf2853  # reuse
        # Topologically Sorted Source Nodes: [y_387], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2855, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg780_1, (3328, 16384), (1, 3328), 0), out=buf2856)
        del arg780_1
        # Topologically Sorted Source Nodes: [tensor_193], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2856, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_484], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2856, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2862 = reinterpret_tensor(buf2788, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2788  # reuse
        # Topologically Sorted Source Nodes: [x_480, x_482, x_485, float_389, mul_1455, mean_194, add_582, rsqrt_194, mul_1456, output_388, output_389], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2822, buf2827, buf2847, buf2856, arg781_1, buf2862, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg781_1
        buf2863 = buf2834; del buf2834  # reuse
        # Topologically Sorted Source Nodes: [linear_388], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2862, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg782_1, (16384, 1280), (1, 16384), 0), out=buf2863)
        del arg782_1
        # Topologically Sorted Source Nodes: [setitem_194, setitem_195], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2863, arg0_1, arg783_1, arg784_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2865 = reinterpret_tensor(buf2845, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2845  # reuse
        # Topologically Sorted Source Nodes: [y_388], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2863, arg2_1, arg0_1, buf2865, 16777216, grid=grid(16777216), stream=stream0)
        buf2866 = reinterpret_tensor(buf2844, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2844  # reuse
        # Topologically Sorted Source Nodes: [y_388], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg783_1, buf2866, 25165824, grid=grid(25165824), stream=stream0)
        del arg783_1
        buf2867 = reinterpret_tensor(buf2843, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2843  # reuse
        # Topologically Sorted Source Nodes: [y_388], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2865, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2866, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2867)
        buf2872 = reinterpret_tensor(buf2867, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2867  # reuse
        # Topologically Sorted Source Nodes: [mask, y_388], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2872, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2873 = reinterpret_tensor(buf2866, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2866  # reuse
        # Topologically Sorted Source Nodes: [y_388], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg784_1, buf2873, 25165824, grid=grid(25165824), stream=stream0)
        del arg784_1
        buf2874 = reinterpret_tensor(buf2865, (128, 1024, 128), (131072, 128, 1), 0); del buf2865  # reuse
        # Topologically Sorted Source Nodes: [y_388], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2872, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2873, (128, 1536, 128), (196608, 128, 1), 0), out=buf2874)
        buf2875 = buf2846; del buf2846  # reuse
        # Topologically Sorted Source Nodes: [contiguous_97], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2874, buf2875, 16777216, grid=grid(16777216), stream=stream0)
        buf2876 = reinterpret_tensor(buf2862, (16384, 16384), (16384, 1), 0); del buf2862  # reuse
        # Topologically Sorted Source Nodes: [y_390], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2875, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg785_1, (1024, 16384), (1, 1024), 0), out=buf2876)
        del arg785_1
        # Topologically Sorted Source Nodes: [tensor_194], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2876, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_486], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2876, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2881 = buf2822; del buf2822  # reuse
        buf2883 = reinterpret_tensor(buf2768, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2768  # reuse
        # Topologically Sorted Source Nodes: [x_480, x_482, x_485, x_487, float_392, mul_1466, mean_195, add_586, rsqrt_195, mul_1467, output_390, output_391], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2881, buf2827, buf2847, buf2856, buf2876, arg786_1, buf2883, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg786_1
        buf2884 = buf2854; del buf2854  # reuse
        # Topologically Sorted Source Nodes: [x_488], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2883, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg787_1, (16384, 6656), (1, 16384), 0), out=buf2884)
        del arg787_1
        buf2885 = buf2855; del buf2855  # reuse
        # Topologically Sorted Source Nodes: [silu_97, mul_1469], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2884, buf2885, 54525952, grid=grid(54525952), stream=stream0)
        buf2886 = reinterpret_tensor(buf2883, (16384, 16384), (16384, 1), 0); del buf2883  # reuse
        # Topologically Sorted Source Nodes: [y_391], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2885, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg788_1, (3328, 16384), (1, 3328), 0), out=buf2886)
        del arg788_1
        # Topologically Sorted Source Nodes: [tensor_195], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2886, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_489], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2886, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2892 = reinterpret_tensor(buf2876, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2876  # reuse
        # Topologically Sorted Source Nodes: [x_490, float_393, mul_1470, mean_196, add_588, rsqrt_196, mul_1471, output_392, output_393], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2881, buf2886, arg789_1, buf2892, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg789_1
        buf2893 = buf2863; del buf2863  # reuse
        # Topologically Sorted Source Nodes: [linear_392], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2892, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg790_1, (16384, 1280), (1, 16384), 0), out=buf2893)
        del arg790_1
        # Topologically Sorted Source Nodes: [setitem_196, setitem_197], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2893, arg0_1, arg791_1, arg792_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2895 = reinterpret_tensor(buf2874, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2874  # reuse
        # Topologically Sorted Source Nodes: [y_392], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2893, arg2_1, arg0_1, buf2895, 16777216, grid=grid(16777216), stream=stream0)
        buf2896 = reinterpret_tensor(buf2873, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2873  # reuse
        # Topologically Sorted Source Nodes: [y_392], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg791_1, buf2896, 25165824, grid=grid(25165824), stream=stream0)
        del arg791_1
        buf2897 = reinterpret_tensor(buf2872, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2872  # reuse
        # Topologically Sorted Source Nodes: [y_392], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2895, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2896, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2897)
        buf2902 = reinterpret_tensor(buf2897, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2897  # reuse
        # Topologically Sorted Source Nodes: [mask, y_392], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2902, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2903 = reinterpret_tensor(buf2896, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2896  # reuse
        # Topologically Sorted Source Nodes: [y_392], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg792_1, buf2903, 25165824, grid=grid(25165824), stream=stream0)
        del arg792_1
        buf2904 = reinterpret_tensor(buf2895, (128, 1024, 128), (131072, 128, 1), 0); del buf2895  # reuse
        # Topologically Sorted Source Nodes: [y_392], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2902, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2903, (128, 1536, 128), (196608, 128, 1), 0), out=buf2904)
        buf2905 = buf2875; del buf2875  # reuse
        # Topologically Sorted Source Nodes: [contiguous_98], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2904, buf2905, 16777216, grid=grid(16777216), stream=stream0)
        buf2906 = reinterpret_tensor(buf2892, (16384, 16384), (16384, 1), 0); del buf2892  # reuse
        # Topologically Sorted Source Nodes: [y_394], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2905, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg793_1, (1024, 16384), (1, 1024), 0), out=buf2906)
        del arg793_1
        # Topologically Sorted Source Nodes: [tensor_196], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2906, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_491], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2906, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2912 = reinterpret_tensor(buf2856, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2856  # reuse
        # Topologically Sorted Source Nodes: [x_490, x_492, float_396, mul_1481, mean_197, add_592, rsqrt_197, mul_1482, output_394, output_395], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2881, buf2886, buf2906, arg794_1, buf2912, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg794_1
        buf2913 = buf2884; del buf2884  # reuse
        # Topologically Sorted Source Nodes: [x_493], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2912, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg795_1, (16384, 6656), (1, 16384), 0), out=buf2913)
        del arg795_1
        buf2914 = buf2885; del buf2885  # reuse
        # Topologically Sorted Source Nodes: [silu_98, mul_1484], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2913, buf2914, 54525952, grid=grid(54525952), stream=stream0)
        buf2915 = reinterpret_tensor(buf2912, (16384, 16384), (16384, 1), 0); del buf2912  # reuse
        # Topologically Sorted Source Nodes: [y_395], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2914, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg796_1, (3328, 16384), (1, 3328), 0), out=buf2915)
        del arg796_1
        # Topologically Sorted Source Nodes: [tensor_197], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2915, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_494], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2915, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2921 = reinterpret_tensor(buf2847, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2847  # reuse
        # Topologically Sorted Source Nodes: [x_490, x_492, x_495, float_397, mul_1485, mean_198, add_594, rsqrt_198, mul_1486, output_396, output_397], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2881, buf2886, buf2906, buf2915, arg797_1, buf2921, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg797_1
        buf2922 = buf2893; del buf2893  # reuse
        # Topologically Sorted Source Nodes: [linear_396], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2921, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg798_1, (16384, 1280), (1, 16384), 0), out=buf2922)
        del arg798_1
        # Topologically Sorted Source Nodes: [setitem_198, setitem_199], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2922, arg0_1, arg799_1, arg800_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2924 = reinterpret_tensor(buf2904, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2904  # reuse
        # Topologically Sorted Source Nodes: [y_396], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2922, arg2_1, arg0_1, buf2924, 16777216, grid=grid(16777216), stream=stream0)
        buf2925 = reinterpret_tensor(buf2903, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2903  # reuse
        # Topologically Sorted Source Nodes: [y_396], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg799_1, buf2925, 25165824, grid=grid(25165824), stream=stream0)
        del arg799_1
        buf2926 = reinterpret_tensor(buf2902, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2902  # reuse
        # Topologically Sorted Source Nodes: [y_396], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2924, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2925, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2926)
        buf2931 = reinterpret_tensor(buf2926, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2926  # reuse
        # Topologically Sorted Source Nodes: [mask, y_396], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2931, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2932 = reinterpret_tensor(buf2925, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2925  # reuse
        # Topologically Sorted Source Nodes: [y_396], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg800_1, buf2932, 25165824, grid=grid(25165824), stream=stream0)
        del arg800_1
        buf2933 = reinterpret_tensor(buf2924, (128, 1024, 128), (131072, 128, 1), 0); del buf2924  # reuse
        # Topologically Sorted Source Nodes: [y_396], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2931, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2932, (128, 1536, 128), (196608, 128, 1), 0), out=buf2933)
        buf2934 = buf2905; del buf2905  # reuse
        # Topologically Sorted Source Nodes: [contiguous_99], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2933, buf2934, 16777216, grid=grid(16777216), stream=stream0)
        buf2935 = reinterpret_tensor(buf2921, (16384, 16384), (16384, 1), 0); del buf2921  # reuse
        # Topologically Sorted Source Nodes: [y_398], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2934, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg801_1, (1024, 16384), (1, 1024), 0), out=buf2935)
        del arg801_1
        # Topologically Sorted Source Nodes: [tensor_198], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2935, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_496], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2935, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2940 = buf2881; del buf2881  # reuse
        buf2942 = reinterpret_tensor(buf2827, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2827  # reuse
        # Topologically Sorted Source Nodes: [x_490, x_492, x_495, x_497, float_400, mul_1496, mean_199, add_598, rsqrt_199, mul_1497, output_398, output_399], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2940, buf2886, buf2906, buf2915, buf2935, arg802_1, buf2942, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg802_1
        buf2943 = buf2913; del buf2913  # reuse
        # Topologically Sorted Source Nodes: [x_498], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2942, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg803_1, (16384, 6656), (1, 16384), 0), out=buf2943)
        del arg803_1
        buf2944 = buf2914; del buf2914  # reuse
        # Topologically Sorted Source Nodes: [silu_99, mul_1499], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2943, buf2944, 54525952, grid=grid(54525952), stream=stream0)
        buf2945 = reinterpret_tensor(buf2942, (16384, 16384), (16384, 1), 0); del buf2942  # reuse
        # Topologically Sorted Source Nodes: [y_399], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2944, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg804_1, (3328, 16384), (1, 3328), 0), out=buf2945)
        del arg804_1
        # Topologically Sorted Source Nodes: [tensor_199], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2945, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_499], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2945, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2951 = reinterpret_tensor(buf2935, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2935  # reuse
        # Topologically Sorted Source Nodes: [x_500, float_401, mul_1500, mean_200, add_600, rsqrt_200, mul_1501, output_400, output_401], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2940, buf2945, arg805_1, buf2951, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg805_1
        buf2952 = buf2922; del buf2922  # reuse
        # Topologically Sorted Source Nodes: [linear_400], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2951, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg806_1, (16384, 1280), (1, 16384), 0), out=buf2952)
        del arg806_1
        # Topologically Sorted Source Nodes: [setitem_200, setitem_201], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2952, arg0_1, arg807_1, arg808_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2954 = reinterpret_tensor(buf2933, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2933  # reuse
        # Topologically Sorted Source Nodes: [y_400], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2952, arg2_1, arg0_1, buf2954, 16777216, grid=grid(16777216), stream=stream0)
        buf2955 = reinterpret_tensor(buf2932, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2932  # reuse
        # Topologically Sorted Source Nodes: [y_400], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg807_1, buf2955, 25165824, grid=grid(25165824), stream=stream0)
        del arg807_1
        buf2956 = reinterpret_tensor(buf2931, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2931  # reuse
        # Topologically Sorted Source Nodes: [y_400], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2954, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2955, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2956)
        buf2961 = reinterpret_tensor(buf2956, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2956  # reuse
        # Topologically Sorted Source Nodes: [mask, y_400], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2961, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2962 = reinterpret_tensor(buf2955, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2955  # reuse
        # Topologically Sorted Source Nodes: [y_400], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg808_1, buf2962, 25165824, grid=grid(25165824), stream=stream0)
        del arg808_1
        buf2963 = reinterpret_tensor(buf2954, (128, 1024, 128), (131072, 128, 1), 0); del buf2954  # reuse
        # Topologically Sorted Source Nodes: [y_400], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2961, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2962, (128, 1536, 128), (196608, 128, 1), 0), out=buf2963)
        buf2964 = buf2934; del buf2934  # reuse
        # Topologically Sorted Source Nodes: [contiguous_100], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2963, buf2964, 16777216, grid=grid(16777216), stream=stream0)
        buf2965 = reinterpret_tensor(buf2951, (16384, 16384), (16384, 1), 0); del buf2951  # reuse
        # Topologically Sorted Source Nodes: [y_402], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2964, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg809_1, (1024, 16384), (1, 1024), 0), out=buf2965)
        del arg809_1
        # Topologically Sorted Source Nodes: [tensor_200], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2965, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_501], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2965, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2971 = reinterpret_tensor(buf2915, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2915  # reuse
        # Topologically Sorted Source Nodes: [x_500, x_502, float_404, mul_1511, mean_201, add_604, rsqrt_201, mul_1512, output_402, output_403], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2940, buf2945, buf2965, arg810_1, buf2971, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg810_1
        buf2972 = buf2943; del buf2943  # reuse
        # Topologically Sorted Source Nodes: [x_503], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2971, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg811_1, (16384, 6656), (1, 16384), 0), out=buf2972)
        del arg811_1
        buf2973 = buf2944; del buf2944  # reuse
        # Topologically Sorted Source Nodes: [silu_100, mul_1514], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf2972, buf2973, 54525952, grid=grid(54525952), stream=stream0)
        buf2974 = reinterpret_tensor(buf2971, (16384, 16384), (16384, 1), 0); del buf2971  # reuse
        # Topologically Sorted Source Nodes: [y_403], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2973, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg812_1, (3328, 16384), (1, 3328), 0), out=buf2974)
        del arg812_1
        # Topologically Sorted Source Nodes: [tensor_201], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2974, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_504], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2974, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2980 = reinterpret_tensor(buf2906, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2906  # reuse
        # Topologically Sorted Source Nodes: [x_500, x_502, x_505, float_405, mul_1515, mean_202, add_606, rsqrt_202, mul_1516, output_404, output_405], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2940, buf2945, buf2965, buf2974, arg813_1, buf2980, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg813_1
        buf2981 = buf2952; del buf2952  # reuse
        # Topologically Sorted Source Nodes: [linear_404], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2980, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg814_1, (16384, 1280), (1, 16384), 0), out=buf2981)
        del arg814_1
        # Topologically Sorted Source Nodes: [setitem_202, setitem_203], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf2981, arg0_1, arg815_1, arg816_1, 2097152, grid=grid(2097152), stream=stream0)
        buf2983 = reinterpret_tensor(buf2963, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2963  # reuse
        # Topologically Sorted Source Nodes: [y_404], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf2981, arg2_1, arg0_1, buf2983, 16777216, grid=grid(16777216), stream=stream0)
        buf2984 = reinterpret_tensor(buf2962, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2962  # reuse
        # Topologically Sorted Source Nodes: [y_404], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg815_1, buf2984, 25165824, grid=grid(25165824), stream=stream0)
        del arg815_1
        buf2985 = reinterpret_tensor(buf2961, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2961  # reuse
        # Topologically Sorted Source Nodes: [y_404], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2983, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf2984, (128, 128, 1536), (196608, 1536, 1), 0), out=buf2985)
        buf2990 = reinterpret_tensor(buf2985, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf2985  # reuse
        # Topologically Sorted Source Nodes: [mask, y_404], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf2990, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf2991 = reinterpret_tensor(buf2984, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf2984  # reuse
        # Topologically Sorted Source Nodes: [y_404], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg816_1, buf2991, 25165824, grid=grid(25165824), stream=stream0)
        del arg816_1
        buf2992 = reinterpret_tensor(buf2983, (128, 1024, 128), (131072, 128, 1), 0); del buf2983  # reuse
        # Topologically Sorted Source Nodes: [y_404], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf2990, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf2991, (128, 1536, 128), (196608, 128, 1), 0), out=buf2992)
        buf2993 = buf2964; del buf2964  # reuse
        # Topologically Sorted Source Nodes: [contiguous_101], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf2992, buf2993, 16777216, grid=grid(16777216), stream=stream0)
        buf2994 = reinterpret_tensor(buf2980, (16384, 16384), (16384, 1), 0); del buf2980  # reuse
        # Topologically Sorted Source Nodes: [y_406], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf2993, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg817_1, (1024, 16384), (1, 1024), 0), out=buf2994)
        del arg817_1
        # Topologically Sorted Source Nodes: [tensor_202], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf2994, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_506], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf2994, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf2999 = buf2940; del buf2940  # reuse
        buf3001 = reinterpret_tensor(buf2886, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2886  # reuse
        # Topologically Sorted Source Nodes: [x_500, x_502, x_505, x_507, float_408, mul_1526, mean_203, add_610, rsqrt_203, mul_1527, output_406, output_407], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf2999, buf2945, buf2965, buf2974, buf2994, arg818_1, buf3001, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg818_1
        buf3002 = buf2972; del buf2972  # reuse
        # Topologically Sorted Source Nodes: [x_508], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3001, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg819_1, (16384, 6656), (1, 16384), 0), out=buf3002)
        del arg819_1
        buf3003 = buf2973; del buf2973  # reuse
        # Topologically Sorted Source Nodes: [silu_101, mul_1529], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3002, buf3003, 54525952, grid=grid(54525952), stream=stream0)
        buf3004 = reinterpret_tensor(buf3001, (16384, 16384), (16384, 1), 0); del buf3001  # reuse
        # Topologically Sorted Source Nodes: [y_407], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3003, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg820_1, (3328, 16384), (1, 3328), 0), out=buf3004)
        del arg820_1
        # Topologically Sorted Source Nodes: [tensor_203], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3004, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_509], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3004, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3010 = reinterpret_tensor(buf2994, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2994  # reuse
        # Topologically Sorted Source Nodes: [x_510, float_409, mul_1530, mean_204, add_612, rsqrt_204, mul_1531, output_408, output_409], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf2999, buf3004, arg821_1, buf3010, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg821_1
        buf3011 = buf2981; del buf2981  # reuse
        # Topologically Sorted Source Nodes: [linear_408], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3010, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg822_1, (16384, 1280), (1, 16384), 0), out=buf3011)
        del arg822_1
        # Topologically Sorted Source Nodes: [setitem_204, setitem_205], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3011, arg0_1, arg823_1, arg824_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3013 = reinterpret_tensor(buf2992, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf2992  # reuse
        # Topologically Sorted Source Nodes: [y_408], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3011, arg2_1, arg0_1, buf3013, 16777216, grid=grid(16777216), stream=stream0)
        buf3014 = reinterpret_tensor(buf2991, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf2991  # reuse
        # Topologically Sorted Source Nodes: [y_408], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg823_1, buf3014, 25165824, grid=grid(25165824), stream=stream0)
        del arg823_1
        buf3015 = reinterpret_tensor(buf2990, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf2990  # reuse
        # Topologically Sorted Source Nodes: [y_408], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3013, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3014, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3015)
        buf3020 = reinterpret_tensor(buf3015, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3015  # reuse
        # Topologically Sorted Source Nodes: [mask, y_408], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3020, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3021 = reinterpret_tensor(buf3014, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3014  # reuse
        # Topologically Sorted Source Nodes: [y_408], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg824_1, buf3021, 25165824, grid=grid(25165824), stream=stream0)
        del arg824_1
        buf3022 = reinterpret_tensor(buf3013, (128, 1024, 128), (131072, 128, 1), 0); del buf3013  # reuse
        # Topologically Sorted Source Nodes: [y_408], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3020, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3021, (128, 1536, 128), (196608, 128, 1), 0), out=buf3022)
        buf3023 = buf2993; del buf2993  # reuse
        # Topologically Sorted Source Nodes: [contiguous_102], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3022, buf3023, 16777216, grid=grid(16777216), stream=stream0)
        buf3024 = reinterpret_tensor(buf3010, (16384, 16384), (16384, 1), 0); del buf3010  # reuse
        # Topologically Sorted Source Nodes: [y_410], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3023, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg825_1, (1024, 16384), (1, 1024), 0), out=buf3024)
        del arg825_1
        # Topologically Sorted Source Nodes: [tensor_204], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3024, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_511], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3024, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3030 = reinterpret_tensor(buf2974, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2974  # reuse
        # Topologically Sorted Source Nodes: [x_510, x_512, float_412, mul_1541, mean_205, add_616, rsqrt_205, mul_1542, output_410, output_411], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf2999, buf3004, buf3024, arg826_1, buf3030, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg826_1
        buf3031 = buf3002; del buf3002  # reuse
        # Topologically Sorted Source Nodes: [x_513], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3030, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg827_1, (16384, 6656), (1, 16384), 0), out=buf3031)
        del arg827_1
        buf3032 = buf3003; del buf3003  # reuse
        # Topologically Sorted Source Nodes: [silu_102, mul_1544], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3031, buf3032, 54525952, grid=grid(54525952), stream=stream0)
        buf3033 = reinterpret_tensor(buf3030, (16384, 16384), (16384, 1), 0); del buf3030  # reuse
        # Topologically Sorted Source Nodes: [y_411], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3032, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg828_1, (3328, 16384), (1, 3328), 0), out=buf3033)
        del arg828_1
        # Topologically Sorted Source Nodes: [tensor_205], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3033, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_514], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3033, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3039 = reinterpret_tensor(buf2965, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2965  # reuse
        # Topologically Sorted Source Nodes: [x_510, x_512, x_515, float_413, mul_1545, mean_206, add_618, rsqrt_206, mul_1546, output_412, output_413], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf2999, buf3004, buf3024, buf3033, arg829_1, buf3039, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg829_1
        buf3040 = buf3011; del buf3011  # reuse
        # Topologically Sorted Source Nodes: [linear_412], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3039, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg830_1, (16384, 1280), (1, 16384), 0), out=buf3040)
        del arg830_1
        # Topologically Sorted Source Nodes: [setitem_206, setitem_207], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3040, arg0_1, arg831_1, arg832_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3042 = reinterpret_tensor(buf3022, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3022  # reuse
        # Topologically Sorted Source Nodes: [y_412], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3040, arg2_1, arg0_1, buf3042, 16777216, grid=grid(16777216), stream=stream0)
        buf3043 = reinterpret_tensor(buf3021, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3021  # reuse
        # Topologically Sorted Source Nodes: [y_412], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg831_1, buf3043, 25165824, grid=grid(25165824), stream=stream0)
        del arg831_1
        buf3044 = reinterpret_tensor(buf3020, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3020  # reuse
        # Topologically Sorted Source Nodes: [y_412], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3042, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3043, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3044)
        buf3049 = reinterpret_tensor(buf3044, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3044  # reuse
        # Topologically Sorted Source Nodes: [mask, y_412], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3049, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3050 = reinterpret_tensor(buf3043, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3043  # reuse
        # Topologically Sorted Source Nodes: [y_412], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg832_1, buf3050, 25165824, grid=grid(25165824), stream=stream0)
        del arg832_1
        buf3051 = reinterpret_tensor(buf3042, (128, 1024, 128), (131072, 128, 1), 0); del buf3042  # reuse
        # Topologically Sorted Source Nodes: [y_412], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3049, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3050, (128, 1536, 128), (196608, 128, 1), 0), out=buf3051)
        buf3052 = buf3023; del buf3023  # reuse
        # Topologically Sorted Source Nodes: [contiguous_103], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3051, buf3052, 16777216, grid=grid(16777216), stream=stream0)
        buf3053 = reinterpret_tensor(buf3039, (16384, 16384), (16384, 1), 0); del buf3039  # reuse
        # Topologically Sorted Source Nodes: [y_414], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3052, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg833_1, (1024, 16384), (1, 1024), 0), out=buf3053)
        del arg833_1
        # Topologically Sorted Source Nodes: [tensor_206], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3053, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_516], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3053, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3058 = buf2999; del buf2999  # reuse
        buf3060 = reinterpret_tensor(buf2945, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf2945  # reuse
        # Topologically Sorted Source Nodes: [x_510, x_512, x_515, x_517, float_416, mul_1556, mean_207, add_622, rsqrt_207, mul_1557, output_414, output_415], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3058, buf3004, buf3024, buf3033, buf3053, arg834_1, buf3060, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg834_1
        buf3061 = buf3031; del buf3031  # reuse
        # Topologically Sorted Source Nodes: [x_518], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3060, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg835_1, (16384, 6656), (1, 16384), 0), out=buf3061)
        del arg835_1
        buf3062 = buf3032; del buf3032  # reuse
        # Topologically Sorted Source Nodes: [silu_103, mul_1559], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3061, buf3062, 54525952, grid=grid(54525952), stream=stream0)
        buf3063 = reinterpret_tensor(buf3060, (16384, 16384), (16384, 1), 0); del buf3060  # reuse
        # Topologically Sorted Source Nodes: [y_415], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3062, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg836_1, (3328, 16384), (1, 3328), 0), out=buf3063)
        del arg836_1
        # Topologically Sorted Source Nodes: [tensor_207], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3063, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_519], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3063, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3069 = reinterpret_tensor(buf3053, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3053  # reuse
        # Topologically Sorted Source Nodes: [x_520, float_417, mul_1560, mean_208, add_624, rsqrt_208, mul_1561, output_416, output_417], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3058, buf3063, arg837_1, buf3069, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg837_1
        buf3070 = buf3040; del buf3040  # reuse
        # Topologically Sorted Source Nodes: [linear_416], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3069, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg838_1, (16384, 1280), (1, 16384), 0), out=buf3070)
        del arg838_1
        # Topologically Sorted Source Nodes: [setitem_208, setitem_209], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3070, arg0_1, arg839_1, arg840_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3072 = reinterpret_tensor(buf3051, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3051  # reuse
        # Topologically Sorted Source Nodes: [y_416], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3070, arg2_1, arg0_1, buf3072, 16777216, grid=grid(16777216), stream=stream0)
        buf3073 = reinterpret_tensor(buf3050, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3050  # reuse
        # Topologically Sorted Source Nodes: [y_416], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg839_1, buf3073, 25165824, grid=grid(25165824), stream=stream0)
        del arg839_1
        buf3074 = reinterpret_tensor(buf3049, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3049  # reuse
        # Topologically Sorted Source Nodes: [y_416], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3072, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3073, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3074)
        buf3079 = reinterpret_tensor(buf3074, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3074  # reuse
        # Topologically Sorted Source Nodes: [mask, y_416], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3079, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3080 = reinterpret_tensor(buf3073, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3073  # reuse
        # Topologically Sorted Source Nodes: [y_416], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg840_1, buf3080, 25165824, grid=grid(25165824), stream=stream0)
        del arg840_1
        buf3081 = reinterpret_tensor(buf3072, (128, 1024, 128), (131072, 128, 1), 0); del buf3072  # reuse
        # Topologically Sorted Source Nodes: [y_416], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3079, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3080, (128, 1536, 128), (196608, 128, 1), 0), out=buf3081)
        buf3082 = buf3052; del buf3052  # reuse
        # Topologically Sorted Source Nodes: [contiguous_104], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3081, buf3082, 16777216, grid=grid(16777216), stream=stream0)
        buf3083 = reinterpret_tensor(buf3069, (16384, 16384), (16384, 1), 0); del buf3069  # reuse
        # Topologically Sorted Source Nodes: [y_418], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3082, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg841_1, (1024, 16384), (1, 1024), 0), out=buf3083)
        del arg841_1
        # Topologically Sorted Source Nodes: [tensor_208], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3083, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_521], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3083, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3089 = reinterpret_tensor(buf3033, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3033  # reuse
        # Topologically Sorted Source Nodes: [x_520, x_522, float_420, mul_1571, mean_209, add_628, rsqrt_209, mul_1572, output_418, output_419], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3058, buf3063, buf3083, arg842_1, buf3089, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg842_1
        buf3090 = buf3061; del buf3061  # reuse
        # Topologically Sorted Source Nodes: [x_523], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3089, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg843_1, (16384, 6656), (1, 16384), 0), out=buf3090)
        del arg843_1
        buf3091 = buf3062; del buf3062  # reuse
        # Topologically Sorted Source Nodes: [silu_104, mul_1574], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3090, buf3091, 54525952, grid=grid(54525952), stream=stream0)
        buf3092 = reinterpret_tensor(buf3089, (16384, 16384), (16384, 1), 0); del buf3089  # reuse
        # Topologically Sorted Source Nodes: [y_419], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3091, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg844_1, (3328, 16384), (1, 3328), 0), out=buf3092)
        del arg844_1
        # Topologically Sorted Source Nodes: [tensor_209], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3092, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_524], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3092, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3098 = reinterpret_tensor(buf3024, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3024  # reuse
        # Topologically Sorted Source Nodes: [x_520, x_522, x_525, float_421, mul_1575, mean_210, add_630, rsqrt_210, mul_1576, output_420, output_421], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3058, buf3063, buf3083, buf3092, arg845_1, buf3098, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg845_1
        buf3099 = buf3070; del buf3070  # reuse
        # Topologically Sorted Source Nodes: [linear_420], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3098, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg846_1, (16384, 1280), (1, 16384), 0), out=buf3099)
        del arg846_1
        # Topologically Sorted Source Nodes: [setitem_210, setitem_211], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3099, arg0_1, arg847_1, arg848_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3101 = reinterpret_tensor(buf3081, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3081  # reuse
        # Topologically Sorted Source Nodes: [y_420], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3099, arg2_1, arg0_1, buf3101, 16777216, grid=grid(16777216), stream=stream0)
        buf3102 = reinterpret_tensor(buf3080, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3080  # reuse
        # Topologically Sorted Source Nodes: [y_420], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg847_1, buf3102, 25165824, grid=grid(25165824), stream=stream0)
        del arg847_1
        buf3103 = reinterpret_tensor(buf3079, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3079  # reuse
        # Topologically Sorted Source Nodes: [y_420], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3101, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3102, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3103)
        buf3108 = reinterpret_tensor(buf3103, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3103  # reuse
        # Topologically Sorted Source Nodes: [mask, y_420], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3108, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3109 = reinterpret_tensor(buf3102, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3102  # reuse
        # Topologically Sorted Source Nodes: [y_420], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg848_1, buf3109, 25165824, grid=grid(25165824), stream=stream0)
        del arg848_1
        buf3110 = reinterpret_tensor(buf3101, (128, 1024, 128), (131072, 128, 1), 0); del buf3101  # reuse
        # Topologically Sorted Source Nodes: [y_420], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3108, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3109, (128, 1536, 128), (196608, 128, 1), 0), out=buf3110)
        buf3111 = buf3082; del buf3082  # reuse
        # Topologically Sorted Source Nodes: [contiguous_105], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3110, buf3111, 16777216, grid=grid(16777216), stream=stream0)
        buf3112 = reinterpret_tensor(buf3098, (16384, 16384), (16384, 1), 0); del buf3098  # reuse
        # Topologically Sorted Source Nodes: [y_422], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3111, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg849_1, (1024, 16384), (1, 1024), 0), out=buf3112)
        del arg849_1
        # Topologically Sorted Source Nodes: [tensor_210], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3112, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_526], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3112, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3117 = buf3058; del buf3058  # reuse
        buf3119 = reinterpret_tensor(buf3004, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3004  # reuse
        # Topologically Sorted Source Nodes: [x_520, x_522, x_525, x_527, float_424, mul_1586, mean_211, add_634, rsqrt_211, mul_1587, output_422, output_423], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3117, buf3063, buf3083, buf3092, buf3112, arg850_1, buf3119, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg850_1
        buf3120 = buf3090; del buf3090  # reuse
        # Topologically Sorted Source Nodes: [x_528], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3119, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg851_1, (16384, 6656), (1, 16384), 0), out=buf3120)
        del arg851_1
        buf3121 = buf3091; del buf3091  # reuse
        # Topologically Sorted Source Nodes: [silu_105, mul_1589], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3120, buf3121, 54525952, grid=grid(54525952), stream=stream0)
        buf3122 = reinterpret_tensor(buf3119, (16384, 16384), (16384, 1), 0); del buf3119  # reuse
        # Topologically Sorted Source Nodes: [y_423], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3121, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg852_1, (3328, 16384), (1, 3328), 0), out=buf3122)
        del arg852_1
        # Topologically Sorted Source Nodes: [tensor_211], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3122, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_529], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3122, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3128 = reinterpret_tensor(buf3112, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3112  # reuse
        # Topologically Sorted Source Nodes: [x_530, float_425, mul_1590, mean_212, add_636, rsqrt_212, mul_1591, output_424, output_425], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3117, buf3122, arg853_1, buf3128, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg853_1
        buf3129 = buf3099; del buf3099  # reuse
        # Topologically Sorted Source Nodes: [linear_424], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3128, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg854_1, (16384, 1280), (1, 16384), 0), out=buf3129)
        del arg854_1
        # Topologically Sorted Source Nodes: [setitem_212, setitem_213], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3129, arg0_1, arg855_1, arg856_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3131 = reinterpret_tensor(buf3110, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3110  # reuse
        # Topologically Sorted Source Nodes: [y_424], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3129, arg2_1, arg0_1, buf3131, 16777216, grid=grid(16777216), stream=stream0)
        buf3132 = reinterpret_tensor(buf3109, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3109  # reuse
        # Topologically Sorted Source Nodes: [y_424], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg855_1, buf3132, 25165824, grid=grid(25165824), stream=stream0)
        del arg855_1
        buf3133 = reinterpret_tensor(buf3108, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3108  # reuse
        # Topologically Sorted Source Nodes: [y_424], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3131, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3132, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3133)
        buf3138 = reinterpret_tensor(buf3133, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3133  # reuse
        # Topologically Sorted Source Nodes: [mask, y_424], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3138, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3139 = reinterpret_tensor(buf3132, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3132  # reuse
        # Topologically Sorted Source Nodes: [y_424], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg856_1, buf3139, 25165824, grid=grid(25165824), stream=stream0)
        del arg856_1
        buf3140 = reinterpret_tensor(buf3131, (128, 1024, 128), (131072, 128, 1), 0); del buf3131  # reuse
        # Topologically Sorted Source Nodes: [y_424], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3138, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3139, (128, 1536, 128), (196608, 128, 1), 0), out=buf3140)
        buf3141 = buf3111; del buf3111  # reuse
        # Topologically Sorted Source Nodes: [contiguous_106], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3140, buf3141, 16777216, grid=grid(16777216), stream=stream0)
        buf3142 = reinterpret_tensor(buf3128, (16384, 16384), (16384, 1), 0); del buf3128  # reuse
        # Topologically Sorted Source Nodes: [y_426], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3141, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg857_1, (1024, 16384), (1, 1024), 0), out=buf3142)
        del arg857_1
        # Topologically Sorted Source Nodes: [tensor_212], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3142, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_531], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3142, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3148 = reinterpret_tensor(buf3092, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3092  # reuse
        # Topologically Sorted Source Nodes: [x_530, x_532, float_428, mul_1601, mean_213, add_640, rsqrt_213, mul_1602, output_426, output_427], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3117, buf3122, buf3142, arg858_1, buf3148, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg858_1
        buf3149 = buf3120; del buf3120  # reuse
        # Topologically Sorted Source Nodes: [x_533], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3148, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg859_1, (16384, 6656), (1, 16384), 0), out=buf3149)
        del arg859_1
        buf3150 = buf3121; del buf3121  # reuse
        # Topologically Sorted Source Nodes: [silu_106, mul_1604], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3149, buf3150, 54525952, grid=grid(54525952), stream=stream0)
        buf3151 = reinterpret_tensor(buf3148, (16384, 16384), (16384, 1), 0); del buf3148  # reuse
        # Topologically Sorted Source Nodes: [y_427], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3150, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg860_1, (3328, 16384), (1, 3328), 0), out=buf3151)
        del arg860_1
        # Topologically Sorted Source Nodes: [tensor_213], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3151, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_534], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3151, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3157 = reinterpret_tensor(buf3083, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3083  # reuse
        # Topologically Sorted Source Nodes: [x_530, x_532, x_535, float_429, mul_1605, mean_214, add_642, rsqrt_214, mul_1606, output_428, output_429], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3117, buf3122, buf3142, buf3151, arg861_1, buf3157, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg861_1
        buf3158 = buf3129; del buf3129  # reuse
        # Topologically Sorted Source Nodes: [linear_428], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3157, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg862_1, (16384, 1280), (1, 16384), 0), out=buf3158)
        del arg862_1
        # Topologically Sorted Source Nodes: [setitem_214, setitem_215], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3158, arg0_1, arg863_1, arg864_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3160 = reinterpret_tensor(buf3140, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3140  # reuse
        # Topologically Sorted Source Nodes: [y_428], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3158, arg2_1, arg0_1, buf3160, 16777216, grid=grid(16777216), stream=stream0)
        buf3161 = reinterpret_tensor(buf3139, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3139  # reuse
        # Topologically Sorted Source Nodes: [y_428], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg863_1, buf3161, 25165824, grid=grid(25165824), stream=stream0)
        del arg863_1
        buf3162 = reinterpret_tensor(buf3138, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3138  # reuse
        # Topologically Sorted Source Nodes: [y_428], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3160, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3161, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3162)
        buf3167 = reinterpret_tensor(buf3162, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3162  # reuse
        # Topologically Sorted Source Nodes: [mask, y_428], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3167, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3168 = reinterpret_tensor(buf3161, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3161  # reuse
        # Topologically Sorted Source Nodes: [y_428], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg864_1, buf3168, 25165824, grid=grid(25165824), stream=stream0)
        del arg864_1
        buf3169 = reinterpret_tensor(buf3160, (128, 1024, 128), (131072, 128, 1), 0); del buf3160  # reuse
        # Topologically Sorted Source Nodes: [y_428], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3167, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3168, (128, 1536, 128), (196608, 128, 1), 0), out=buf3169)
        buf3170 = buf3141; del buf3141  # reuse
        # Topologically Sorted Source Nodes: [contiguous_107], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3169, buf3170, 16777216, grid=grid(16777216), stream=stream0)
        buf3171 = reinterpret_tensor(buf3157, (16384, 16384), (16384, 1), 0); del buf3157  # reuse
        # Topologically Sorted Source Nodes: [y_430], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3170, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg865_1, (1024, 16384), (1, 1024), 0), out=buf3171)
        del arg865_1
        # Topologically Sorted Source Nodes: [tensor_214], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3171, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_536], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3171, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3176 = buf3117; del buf3117  # reuse
        buf3178 = reinterpret_tensor(buf3063, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3063  # reuse
        # Topologically Sorted Source Nodes: [x_530, x_532, x_535, x_537, float_432, mul_1616, mean_215, add_646, rsqrt_215, mul_1617, output_430, output_431], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3176, buf3122, buf3142, buf3151, buf3171, arg866_1, buf3178, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg866_1
        buf3179 = buf3149; del buf3149  # reuse
        # Topologically Sorted Source Nodes: [x_538], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3178, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg867_1, (16384, 6656), (1, 16384), 0), out=buf3179)
        del arg867_1
        buf3180 = buf3150; del buf3150  # reuse
        # Topologically Sorted Source Nodes: [silu_107, mul_1619], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3179, buf3180, 54525952, grid=grid(54525952), stream=stream0)
        buf3181 = reinterpret_tensor(buf3178, (16384, 16384), (16384, 1), 0); del buf3178  # reuse
        # Topologically Sorted Source Nodes: [y_431], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3180, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg868_1, (3328, 16384), (1, 3328), 0), out=buf3181)
        del arg868_1
        # Topologically Sorted Source Nodes: [tensor_215], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3181, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_539], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3181, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3187 = reinterpret_tensor(buf3171, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3171  # reuse
        # Topologically Sorted Source Nodes: [x_540, float_433, mul_1620, mean_216, add_648, rsqrt_216, mul_1621, output_432, output_433], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3176, buf3181, arg869_1, buf3187, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg869_1
        buf3188 = buf3158; del buf3158  # reuse
        # Topologically Sorted Source Nodes: [linear_432], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3187, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg870_1, (16384, 1280), (1, 16384), 0), out=buf3188)
        del arg870_1
        # Topologically Sorted Source Nodes: [setitem_216, setitem_217], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3188, arg0_1, arg871_1, arg872_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3190 = reinterpret_tensor(buf3169, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3169  # reuse
        # Topologically Sorted Source Nodes: [y_432], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3188, arg2_1, arg0_1, buf3190, 16777216, grid=grid(16777216), stream=stream0)
        buf3191 = reinterpret_tensor(buf3168, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3168  # reuse
        # Topologically Sorted Source Nodes: [y_432], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg871_1, buf3191, 25165824, grid=grid(25165824), stream=stream0)
        del arg871_1
        buf3192 = reinterpret_tensor(buf3167, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3167  # reuse
        # Topologically Sorted Source Nodes: [y_432], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3190, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3191, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3192)
        buf3197 = reinterpret_tensor(buf3192, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3192  # reuse
        # Topologically Sorted Source Nodes: [mask, y_432], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3197, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3198 = reinterpret_tensor(buf3191, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3191  # reuse
        # Topologically Sorted Source Nodes: [y_432], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg872_1, buf3198, 25165824, grid=grid(25165824), stream=stream0)
        del arg872_1
        buf3199 = reinterpret_tensor(buf3190, (128, 1024, 128), (131072, 128, 1), 0); del buf3190  # reuse
        # Topologically Sorted Source Nodes: [y_432], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3197, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3198, (128, 1536, 128), (196608, 128, 1), 0), out=buf3199)
        buf3200 = buf3170; del buf3170  # reuse
        # Topologically Sorted Source Nodes: [contiguous_108], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3199, buf3200, 16777216, grid=grid(16777216), stream=stream0)
        buf3201 = reinterpret_tensor(buf3187, (16384, 16384), (16384, 1), 0); del buf3187  # reuse
        # Topologically Sorted Source Nodes: [y_434], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3200, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg873_1, (1024, 16384), (1, 1024), 0), out=buf3201)
        del arg873_1
        # Topologically Sorted Source Nodes: [tensor_216], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3201, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_541], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3201, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3207 = reinterpret_tensor(buf3151, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3151  # reuse
        # Topologically Sorted Source Nodes: [x_540, x_542, float_436, mul_1631, mean_217, add_652, rsqrt_217, mul_1632, output_434, output_435], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3176, buf3181, buf3201, arg874_1, buf3207, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg874_1
        buf3208 = buf3179; del buf3179  # reuse
        # Topologically Sorted Source Nodes: [x_543], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3207, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg875_1, (16384, 6656), (1, 16384), 0), out=buf3208)
        del arg875_1
        buf3209 = buf3180; del buf3180  # reuse
        # Topologically Sorted Source Nodes: [silu_108, mul_1634], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3208, buf3209, 54525952, grid=grid(54525952), stream=stream0)
        buf3210 = reinterpret_tensor(buf3207, (16384, 16384), (16384, 1), 0); del buf3207  # reuse
        # Topologically Sorted Source Nodes: [y_435], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3209, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg876_1, (3328, 16384), (1, 3328), 0), out=buf3210)
        del arg876_1
        # Topologically Sorted Source Nodes: [tensor_217], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3210, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_544], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3210, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3216 = reinterpret_tensor(buf3142, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3142  # reuse
        # Topologically Sorted Source Nodes: [x_540, x_542, x_545, float_437, mul_1635, mean_218, add_654, rsqrt_218, mul_1636, output_436, output_437], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3176, buf3181, buf3201, buf3210, arg877_1, buf3216, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg877_1
        buf3217 = buf3188; del buf3188  # reuse
        # Topologically Sorted Source Nodes: [linear_436], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3216, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg878_1, (16384, 1280), (1, 16384), 0), out=buf3217)
        del arg878_1
        # Topologically Sorted Source Nodes: [setitem_218, setitem_219], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3217, arg0_1, arg879_1, arg880_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3219 = reinterpret_tensor(buf3199, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3199  # reuse
        # Topologically Sorted Source Nodes: [y_436], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3217, arg2_1, arg0_1, buf3219, 16777216, grid=grid(16777216), stream=stream0)
        buf3220 = reinterpret_tensor(buf3198, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3198  # reuse
        # Topologically Sorted Source Nodes: [y_436], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg879_1, buf3220, 25165824, grid=grid(25165824), stream=stream0)
        del arg879_1
        buf3221 = reinterpret_tensor(buf3197, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3197  # reuse
        # Topologically Sorted Source Nodes: [y_436], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3219, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3220, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3221)
        buf3226 = reinterpret_tensor(buf3221, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3221  # reuse
        # Topologically Sorted Source Nodes: [mask, y_436], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3226, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3227 = reinterpret_tensor(buf3220, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3220  # reuse
        # Topologically Sorted Source Nodes: [y_436], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg880_1, buf3227, 25165824, grid=grid(25165824), stream=stream0)
        del arg880_1
        buf3228 = reinterpret_tensor(buf3219, (128, 1024, 128), (131072, 128, 1), 0); del buf3219  # reuse
        # Topologically Sorted Source Nodes: [y_436], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3226, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3227, (128, 1536, 128), (196608, 128, 1), 0), out=buf3228)
        buf3229 = buf3200; del buf3200  # reuse
        # Topologically Sorted Source Nodes: [contiguous_109], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3228, buf3229, 16777216, grid=grid(16777216), stream=stream0)
        buf3230 = reinterpret_tensor(buf3216, (16384, 16384), (16384, 1), 0); del buf3216  # reuse
        # Topologically Sorted Source Nodes: [y_438], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3229, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg881_1, (1024, 16384), (1, 1024), 0), out=buf3230)
        del arg881_1
        # Topologically Sorted Source Nodes: [tensor_218], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3230, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_546], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3230, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3235 = buf3176; del buf3176  # reuse
        buf3237 = reinterpret_tensor(buf3122, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3122  # reuse
        # Topologically Sorted Source Nodes: [x_540, x_542, x_545, x_547, float_440, mul_1646, mean_219, add_658, rsqrt_219, mul_1647, output_438, output_439], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3235, buf3181, buf3201, buf3210, buf3230, arg882_1, buf3237, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg882_1
        buf3238 = buf3208; del buf3208  # reuse
        # Topologically Sorted Source Nodes: [x_548], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3237, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg883_1, (16384, 6656), (1, 16384), 0), out=buf3238)
        del arg883_1
        buf3239 = buf3209; del buf3209  # reuse
        # Topologically Sorted Source Nodes: [silu_109, mul_1649], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3238, buf3239, 54525952, grid=grid(54525952), stream=stream0)
        buf3240 = reinterpret_tensor(buf3237, (16384, 16384), (16384, 1), 0); del buf3237  # reuse
        # Topologically Sorted Source Nodes: [y_439], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3239, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg884_1, (3328, 16384), (1, 3328), 0), out=buf3240)
        del arg884_1
        # Topologically Sorted Source Nodes: [tensor_219], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3240, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_549], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3240, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3246 = reinterpret_tensor(buf3230, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3230  # reuse
        # Topologically Sorted Source Nodes: [x_550, float_441, mul_1650, mean_220, add_660, rsqrt_220, mul_1651, output_440, output_441], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3235, buf3240, arg885_1, buf3246, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg885_1
        buf3247 = buf3217; del buf3217  # reuse
        # Topologically Sorted Source Nodes: [linear_440], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3246, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg886_1, (16384, 1280), (1, 16384), 0), out=buf3247)
        del arg886_1
        # Topologically Sorted Source Nodes: [setitem_220, setitem_221], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3247, arg0_1, arg887_1, arg888_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3249 = reinterpret_tensor(buf3228, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3228  # reuse
        # Topologically Sorted Source Nodes: [y_440], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3247, arg2_1, arg0_1, buf3249, 16777216, grid=grid(16777216), stream=stream0)
        buf3250 = reinterpret_tensor(buf3227, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3227  # reuse
        # Topologically Sorted Source Nodes: [y_440], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg887_1, buf3250, 25165824, grid=grid(25165824), stream=stream0)
        del arg887_1
        buf3251 = reinterpret_tensor(buf3226, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3226  # reuse
        # Topologically Sorted Source Nodes: [y_440], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3249, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3250, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3251)
        buf3256 = reinterpret_tensor(buf3251, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3251  # reuse
        # Topologically Sorted Source Nodes: [mask, y_440], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3256, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3257 = reinterpret_tensor(buf3250, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3250  # reuse
        # Topologically Sorted Source Nodes: [y_440], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg888_1, buf3257, 25165824, grid=grid(25165824), stream=stream0)
        del arg888_1
        buf3258 = reinterpret_tensor(buf3249, (128, 1024, 128), (131072, 128, 1), 0); del buf3249  # reuse
        # Topologically Sorted Source Nodes: [y_440], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3256, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3257, (128, 1536, 128), (196608, 128, 1), 0), out=buf3258)
        buf3259 = buf3229; del buf3229  # reuse
        # Topologically Sorted Source Nodes: [contiguous_110], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3258, buf3259, 16777216, grid=grid(16777216), stream=stream0)
        buf3260 = reinterpret_tensor(buf3246, (16384, 16384), (16384, 1), 0); del buf3246  # reuse
        # Topologically Sorted Source Nodes: [y_442], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3259, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg889_1, (1024, 16384), (1, 1024), 0), out=buf3260)
        del arg889_1
        # Topologically Sorted Source Nodes: [tensor_220], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3260, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_551], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3260, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3266 = reinterpret_tensor(buf3210, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3210  # reuse
        # Topologically Sorted Source Nodes: [x_550, x_552, float_444, mul_1661, mean_221, add_664, rsqrt_221, mul_1662, output_442, output_443], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3235, buf3240, buf3260, arg890_1, buf3266, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg890_1
        buf3267 = buf3238; del buf3238  # reuse
        # Topologically Sorted Source Nodes: [x_553], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3266, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg891_1, (16384, 6656), (1, 16384), 0), out=buf3267)
        del arg891_1
        buf3268 = buf3239; del buf3239  # reuse
        # Topologically Sorted Source Nodes: [silu_110, mul_1664], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3267, buf3268, 54525952, grid=grid(54525952), stream=stream0)
        buf3269 = reinterpret_tensor(buf3266, (16384, 16384), (16384, 1), 0); del buf3266  # reuse
        # Topologically Sorted Source Nodes: [y_443], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3268, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg892_1, (3328, 16384), (1, 3328), 0), out=buf3269)
        del arg892_1
        # Topologically Sorted Source Nodes: [tensor_221], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3269, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_554], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3269, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3275 = reinterpret_tensor(buf3201, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3201  # reuse
        # Topologically Sorted Source Nodes: [x_550, x_552, x_555, float_445, mul_1665, mean_222, add_666, rsqrt_222, mul_1666, output_444, output_445], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3235, buf3240, buf3260, buf3269, arg893_1, buf3275, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg893_1
        buf3276 = buf3247; del buf3247  # reuse
        # Topologically Sorted Source Nodes: [linear_444], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3275, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg894_1, (16384, 1280), (1, 16384), 0), out=buf3276)
        del arg894_1
        # Topologically Sorted Source Nodes: [setitem_222, setitem_223], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3276, arg0_1, arg895_1, arg896_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3278 = reinterpret_tensor(buf3258, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3258  # reuse
        # Topologically Sorted Source Nodes: [y_444], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3276, arg2_1, arg0_1, buf3278, 16777216, grid=grid(16777216), stream=stream0)
        buf3279 = reinterpret_tensor(buf3257, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3257  # reuse
        # Topologically Sorted Source Nodes: [y_444], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg895_1, buf3279, 25165824, grid=grid(25165824), stream=stream0)
        del arg895_1
        buf3280 = reinterpret_tensor(buf3256, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3256  # reuse
        # Topologically Sorted Source Nodes: [y_444], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3278, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3279, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3280)
        buf3285 = reinterpret_tensor(buf3280, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3280  # reuse
        # Topologically Sorted Source Nodes: [mask, y_444], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3285, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3286 = reinterpret_tensor(buf3279, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3279  # reuse
        # Topologically Sorted Source Nodes: [y_444], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg896_1, buf3286, 25165824, grid=grid(25165824), stream=stream0)
        del arg896_1
        buf3287 = reinterpret_tensor(buf3278, (128, 1024, 128), (131072, 128, 1), 0); del buf3278  # reuse
        # Topologically Sorted Source Nodes: [y_444], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3285, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3286, (128, 1536, 128), (196608, 128, 1), 0), out=buf3287)
        buf3288 = buf3259; del buf3259  # reuse
        # Topologically Sorted Source Nodes: [contiguous_111], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3287, buf3288, 16777216, grid=grid(16777216), stream=stream0)
        buf3289 = reinterpret_tensor(buf3275, (16384, 16384), (16384, 1), 0); del buf3275  # reuse
        # Topologically Sorted Source Nodes: [y_446], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3288, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg897_1, (1024, 16384), (1, 1024), 0), out=buf3289)
        del arg897_1
        # Topologically Sorted Source Nodes: [tensor_222], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3289, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_556], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3289, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3294 = buf3235; del buf3235  # reuse
        buf3296 = reinterpret_tensor(buf3181, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3181  # reuse
        # Topologically Sorted Source Nodes: [x_550, x_552, x_555, x_557, float_448, mul_1676, mean_223, add_670, rsqrt_223, mul_1677, output_446, output_447], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3294, buf3240, buf3260, buf3269, buf3289, arg898_1, buf3296, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg898_1
        buf3297 = buf3267; del buf3267  # reuse
        # Topologically Sorted Source Nodes: [x_558], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3296, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg899_1, (16384, 6656), (1, 16384), 0), out=buf3297)
        del arg899_1
        buf3298 = buf3268; del buf3268  # reuse
        # Topologically Sorted Source Nodes: [silu_111, mul_1679], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3297, buf3298, 54525952, grid=grid(54525952), stream=stream0)
        buf3299 = reinterpret_tensor(buf3296, (16384, 16384), (16384, 1), 0); del buf3296  # reuse
        # Topologically Sorted Source Nodes: [y_447], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3298, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg900_1, (3328, 16384), (1, 3328), 0), out=buf3299)
        del arg900_1
        # Topologically Sorted Source Nodes: [tensor_223], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3299, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_559], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3299, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3305 = reinterpret_tensor(buf3289, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3289  # reuse
        # Topologically Sorted Source Nodes: [x_560, float_449, mul_1680, mean_224, add_672, rsqrt_224, mul_1681, output_448, output_449], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3294, buf3299, arg901_1, buf3305, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg901_1
        buf3306 = buf3276; del buf3276  # reuse
        # Topologically Sorted Source Nodes: [linear_448], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3305, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg902_1, (16384, 1280), (1, 16384), 0), out=buf3306)
        del arg902_1
        # Topologically Sorted Source Nodes: [setitem_224, setitem_225], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3306, arg0_1, arg903_1, arg904_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3308 = reinterpret_tensor(buf3287, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3287  # reuse
        # Topologically Sorted Source Nodes: [y_448], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3306, arg2_1, arg0_1, buf3308, 16777216, grid=grid(16777216), stream=stream0)
        buf3309 = reinterpret_tensor(buf3286, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3286  # reuse
        # Topologically Sorted Source Nodes: [y_448], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg903_1, buf3309, 25165824, grid=grid(25165824), stream=stream0)
        del arg903_1
        buf3310 = reinterpret_tensor(buf3285, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3285  # reuse
        # Topologically Sorted Source Nodes: [y_448], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3308, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3309, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3310)
        buf3315 = reinterpret_tensor(buf3310, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3310  # reuse
        # Topologically Sorted Source Nodes: [mask, y_448], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3315, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3316 = reinterpret_tensor(buf3309, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3309  # reuse
        # Topologically Sorted Source Nodes: [y_448], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg904_1, buf3316, 25165824, grid=grid(25165824), stream=stream0)
        del arg904_1
        buf3317 = reinterpret_tensor(buf3308, (128, 1024, 128), (131072, 128, 1), 0); del buf3308  # reuse
        # Topologically Sorted Source Nodes: [y_448], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3315, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3316, (128, 1536, 128), (196608, 128, 1), 0), out=buf3317)
        buf3318 = buf3288; del buf3288  # reuse
        # Topologically Sorted Source Nodes: [contiguous_112], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3317, buf3318, 16777216, grid=grid(16777216), stream=stream0)
        buf3319 = reinterpret_tensor(buf3305, (16384, 16384), (16384, 1), 0); del buf3305  # reuse
        # Topologically Sorted Source Nodes: [y_450], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3318, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg905_1, (1024, 16384), (1, 1024), 0), out=buf3319)
        del arg905_1
        # Topologically Sorted Source Nodes: [tensor_224], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3319, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_561], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3319, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3325 = reinterpret_tensor(buf3269, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3269  # reuse
        # Topologically Sorted Source Nodes: [x_560, x_562, float_452, mul_1691, mean_225, add_676, rsqrt_225, mul_1692, output_450, output_451], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3294, buf3299, buf3319, arg906_1, buf3325, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg906_1
        buf3326 = buf3297; del buf3297  # reuse
        # Topologically Sorted Source Nodes: [x_563], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3325, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg907_1, (16384, 6656), (1, 16384), 0), out=buf3326)
        del arg907_1
        buf3327 = buf3298; del buf3298  # reuse
        # Topologically Sorted Source Nodes: [silu_112, mul_1694], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3326, buf3327, 54525952, grid=grid(54525952), stream=stream0)
        buf3328 = reinterpret_tensor(buf3325, (16384, 16384), (16384, 1), 0); del buf3325  # reuse
        # Topologically Sorted Source Nodes: [y_451], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3327, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg908_1, (3328, 16384), (1, 3328), 0), out=buf3328)
        del arg908_1
        # Topologically Sorted Source Nodes: [tensor_225], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3328, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_564], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3328, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3334 = reinterpret_tensor(buf3260, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3260  # reuse
        # Topologically Sorted Source Nodes: [x_560, x_562, x_565, float_453, mul_1695, mean_226, add_678, rsqrt_226, mul_1696, output_452, output_453], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3294, buf3299, buf3319, buf3328, arg909_1, buf3334, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg909_1
        buf3335 = buf3306; del buf3306  # reuse
        # Topologically Sorted Source Nodes: [linear_452], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3334, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg910_1, (16384, 1280), (1, 16384), 0), out=buf3335)
        del arg910_1
        # Topologically Sorted Source Nodes: [setitem_226, setitem_227], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3335, arg0_1, arg911_1, arg912_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3337 = reinterpret_tensor(buf3317, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3317  # reuse
        # Topologically Sorted Source Nodes: [y_452], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3335, arg2_1, arg0_1, buf3337, 16777216, grid=grid(16777216), stream=stream0)
        buf3338 = reinterpret_tensor(buf3316, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3316  # reuse
        # Topologically Sorted Source Nodes: [y_452], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg911_1, buf3338, 25165824, grid=grid(25165824), stream=stream0)
        del arg911_1
        buf3339 = reinterpret_tensor(buf3315, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3315  # reuse
        # Topologically Sorted Source Nodes: [y_452], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3337, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3338, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3339)
        buf3344 = reinterpret_tensor(buf3339, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3339  # reuse
        # Topologically Sorted Source Nodes: [mask, y_452], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3344, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3345 = reinterpret_tensor(buf3338, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3338  # reuse
        # Topologically Sorted Source Nodes: [y_452], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg912_1, buf3345, 25165824, grid=grid(25165824), stream=stream0)
        del arg912_1
        buf3346 = reinterpret_tensor(buf3337, (128, 1024, 128), (131072, 128, 1), 0); del buf3337  # reuse
        # Topologically Sorted Source Nodes: [y_452], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3344, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3345, (128, 1536, 128), (196608, 128, 1), 0), out=buf3346)
        buf3347 = buf3318; del buf3318  # reuse
        # Topologically Sorted Source Nodes: [contiguous_113], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3346, buf3347, 16777216, grid=grid(16777216), stream=stream0)
        buf3348 = reinterpret_tensor(buf3334, (16384, 16384), (16384, 1), 0); del buf3334  # reuse
        # Topologically Sorted Source Nodes: [y_454], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3347, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg913_1, (1024, 16384), (1, 1024), 0), out=buf3348)
        del arg913_1
        # Topologically Sorted Source Nodes: [tensor_226], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3348, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_566], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3348, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3353 = buf3294; del buf3294  # reuse
        buf3355 = reinterpret_tensor(buf3240, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3240  # reuse
        # Topologically Sorted Source Nodes: [x_560, x_562, x_565, x_567, float_456, mul_1706, mean_227, add_682, rsqrt_227, mul_1707, output_454, output_455], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3353, buf3299, buf3319, buf3328, buf3348, arg914_1, buf3355, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg914_1
        buf3356 = buf3326; del buf3326  # reuse
        # Topologically Sorted Source Nodes: [x_568], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3355, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg915_1, (16384, 6656), (1, 16384), 0), out=buf3356)
        del arg915_1
        buf3357 = buf3327; del buf3327  # reuse
        # Topologically Sorted Source Nodes: [silu_113, mul_1709], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3356, buf3357, 54525952, grid=grid(54525952), stream=stream0)
        buf3358 = reinterpret_tensor(buf3355, (16384, 16384), (16384, 1), 0); del buf3355  # reuse
        # Topologically Sorted Source Nodes: [y_455], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3357, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg916_1, (3328, 16384), (1, 3328), 0), out=buf3358)
        del arg916_1
        # Topologically Sorted Source Nodes: [tensor_227], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3358, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_569], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3358, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3364 = reinterpret_tensor(buf3348, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3348  # reuse
        # Topologically Sorted Source Nodes: [x_570, float_457, mul_1710, mean_228, add_684, rsqrt_228, mul_1711, output_456, output_457], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3353, buf3358, arg917_1, buf3364, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg917_1
        buf3365 = buf3335; del buf3335  # reuse
        # Topologically Sorted Source Nodes: [linear_456], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3364, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg918_1, (16384, 1280), (1, 16384), 0), out=buf3365)
        del arg918_1
        # Topologically Sorted Source Nodes: [setitem_228, setitem_229], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3365, arg0_1, arg919_1, arg920_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3367 = reinterpret_tensor(buf3346, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3346  # reuse
        # Topologically Sorted Source Nodes: [y_456], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3365, arg2_1, arg0_1, buf3367, 16777216, grid=grid(16777216), stream=stream0)
        buf3368 = reinterpret_tensor(buf3345, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3345  # reuse
        # Topologically Sorted Source Nodes: [y_456], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg919_1, buf3368, 25165824, grid=grid(25165824), stream=stream0)
        del arg919_1
        buf3369 = reinterpret_tensor(buf3344, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3344  # reuse
        # Topologically Sorted Source Nodes: [y_456], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3367, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3368, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3369)
        buf3374 = reinterpret_tensor(buf3369, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3369  # reuse
        # Topologically Sorted Source Nodes: [mask, y_456], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3374, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3375 = reinterpret_tensor(buf3368, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3368  # reuse
        # Topologically Sorted Source Nodes: [y_456], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg920_1, buf3375, 25165824, grid=grid(25165824), stream=stream0)
        del arg920_1
        buf3376 = reinterpret_tensor(buf3367, (128, 1024, 128), (131072, 128, 1), 0); del buf3367  # reuse
        # Topologically Sorted Source Nodes: [y_456], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3374, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3375, (128, 1536, 128), (196608, 128, 1), 0), out=buf3376)
        buf3377 = buf3347; del buf3347  # reuse
        # Topologically Sorted Source Nodes: [contiguous_114], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3376, buf3377, 16777216, grid=grid(16777216), stream=stream0)
        buf3378 = reinterpret_tensor(buf3364, (16384, 16384), (16384, 1), 0); del buf3364  # reuse
        # Topologically Sorted Source Nodes: [y_458], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3377, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg921_1, (1024, 16384), (1, 1024), 0), out=buf3378)
        del arg921_1
        # Topologically Sorted Source Nodes: [tensor_228], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3378, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_571], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3378, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3384 = reinterpret_tensor(buf3328, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3328  # reuse
        # Topologically Sorted Source Nodes: [x_570, x_572, float_460, mul_1721, mean_229, add_688, rsqrt_229, mul_1722, output_458, output_459], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3353, buf3358, buf3378, arg922_1, buf3384, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg922_1
        buf3385 = buf3356; del buf3356  # reuse
        # Topologically Sorted Source Nodes: [x_573], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3384, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg923_1, (16384, 6656), (1, 16384), 0), out=buf3385)
        del arg923_1
        buf3386 = buf3357; del buf3357  # reuse
        # Topologically Sorted Source Nodes: [silu_114, mul_1724], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3385, buf3386, 54525952, grid=grid(54525952), stream=stream0)
        buf3387 = reinterpret_tensor(buf3384, (16384, 16384), (16384, 1), 0); del buf3384  # reuse
        # Topologically Sorted Source Nodes: [y_459], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3386, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg924_1, (3328, 16384), (1, 3328), 0), out=buf3387)
        del arg924_1
        # Topologically Sorted Source Nodes: [tensor_229], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3387, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_574], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3387, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3393 = reinterpret_tensor(buf3319, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3319  # reuse
        # Topologically Sorted Source Nodes: [x_570, x_572, x_575, float_461, mul_1725, mean_230, add_690, rsqrt_230, mul_1726, output_460, output_461], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3353, buf3358, buf3378, buf3387, arg925_1, buf3393, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg925_1
        buf3394 = buf3365; del buf3365  # reuse
        # Topologically Sorted Source Nodes: [linear_460], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3393, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg926_1, (16384, 1280), (1, 16384), 0), out=buf3394)
        del arg926_1
        # Topologically Sorted Source Nodes: [setitem_230, setitem_231], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3394, arg0_1, arg927_1, arg928_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3396 = reinterpret_tensor(buf3376, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3376  # reuse
        # Topologically Sorted Source Nodes: [y_460], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3394, arg2_1, arg0_1, buf3396, 16777216, grid=grid(16777216), stream=stream0)
        buf3397 = reinterpret_tensor(buf3375, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3375  # reuse
        # Topologically Sorted Source Nodes: [y_460], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg927_1, buf3397, 25165824, grid=grid(25165824), stream=stream0)
        del arg927_1
        buf3398 = reinterpret_tensor(buf3374, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3374  # reuse
        # Topologically Sorted Source Nodes: [y_460], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3396, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3397, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3398)
        buf3403 = reinterpret_tensor(buf3398, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3398  # reuse
        # Topologically Sorted Source Nodes: [mask, y_460], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3403, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3404 = reinterpret_tensor(buf3397, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3397  # reuse
        # Topologically Sorted Source Nodes: [y_460], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg928_1, buf3404, 25165824, grid=grid(25165824), stream=stream0)
        del arg928_1
        buf3405 = reinterpret_tensor(buf3396, (128, 1024, 128), (131072, 128, 1), 0); del buf3396  # reuse
        # Topologically Sorted Source Nodes: [y_460], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3403, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3404, (128, 1536, 128), (196608, 128, 1), 0), out=buf3405)
        buf3406 = buf3377; del buf3377  # reuse
        # Topologically Sorted Source Nodes: [contiguous_115], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3405, buf3406, 16777216, grid=grid(16777216), stream=stream0)
        buf3407 = reinterpret_tensor(buf3393, (16384, 16384), (16384, 1), 0); del buf3393  # reuse
        # Topologically Sorted Source Nodes: [y_462], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3406, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg929_1, (1024, 16384), (1, 1024), 0), out=buf3407)
        del arg929_1
        # Topologically Sorted Source Nodes: [tensor_230], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3407, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_576], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3407, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3412 = buf3353; del buf3353  # reuse
        buf3414 = reinterpret_tensor(buf3299, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3299  # reuse
        # Topologically Sorted Source Nodes: [x_570, x_572, x_575, x_577, float_464, mul_1736, mean_231, add_694, rsqrt_231, mul_1737, output_462, output_463], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3412, buf3358, buf3378, buf3387, buf3407, arg930_1, buf3414, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg930_1
        buf3415 = buf3385; del buf3385  # reuse
        # Topologically Sorted Source Nodes: [x_578], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3414, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg931_1, (16384, 6656), (1, 16384), 0), out=buf3415)
        del arg931_1
        buf3416 = buf3386; del buf3386  # reuse
        # Topologically Sorted Source Nodes: [silu_115, mul_1739], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3415, buf3416, 54525952, grid=grid(54525952), stream=stream0)
        buf3417 = reinterpret_tensor(buf3414, (16384, 16384), (16384, 1), 0); del buf3414  # reuse
        # Topologically Sorted Source Nodes: [y_463], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3416, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg932_1, (3328, 16384), (1, 3328), 0), out=buf3417)
        del arg932_1
        # Topologically Sorted Source Nodes: [tensor_231], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3417, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_579], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3417, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3423 = reinterpret_tensor(buf3407, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3407  # reuse
        # Topologically Sorted Source Nodes: [x_580, float_465, mul_1740, mean_232, add_696, rsqrt_232, mul_1741, output_464, output_465], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3412, buf3417, arg933_1, buf3423, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg933_1
        buf3424 = buf3394; del buf3394  # reuse
        # Topologically Sorted Source Nodes: [linear_464], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3423, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg934_1, (16384, 1280), (1, 16384), 0), out=buf3424)
        del arg934_1
        # Topologically Sorted Source Nodes: [setitem_232, setitem_233], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3424, arg0_1, arg935_1, arg936_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3426 = reinterpret_tensor(buf3405, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3405  # reuse
        # Topologically Sorted Source Nodes: [y_464], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3424, arg2_1, arg0_1, buf3426, 16777216, grid=grid(16777216), stream=stream0)
        buf3427 = reinterpret_tensor(buf3404, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3404  # reuse
        # Topologically Sorted Source Nodes: [y_464], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg935_1, buf3427, 25165824, grid=grid(25165824), stream=stream0)
        del arg935_1
        buf3428 = reinterpret_tensor(buf3403, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3403  # reuse
        # Topologically Sorted Source Nodes: [y_464], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3426, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3427, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3428)
        buf3433 = reinterpret_tensor(buf3428, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3428  # reuse
        # Topologically Sorted Source Nodes: [mask, y_464], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3433, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3434 = reinterpret_tensor(buf3427, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3427  # reuse
        # Topologically Sorted Source Nodes: [y_464], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg936_1, buf3434, 25165824, grid=grid(25165824), stream=stream0)
        del arg936_1
        buf3435 = reinterpret_tensor(buf3426, (128, 1024, 128), (131072, 128, 1), 0); del buf3426  # reuse
        # Topologically Sorted Source Nodes: [y_464], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3433, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3434, (128, 1536, 128), (196608, 128, 1), 0), out=buf3435)
        buf3436 = buf3406; del buf3406  # reuse
        # Topologically Sorted Source Nodes: [contiguous_116], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3435, buf3436, 16777216, grid=grid(16777216), stream=stream0)
        buf3437 = reinterpret_tensor(buf3423, (16384, 16384), (16384, 1), 0); del buf3423  # reuse
        # Topologically Sorted Source Nodes: [y_466], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3436, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg937_1, (1024, 16384), (1, 1024), 0), out=buf3437)
        del arg937_1
        # Topologically Sorted Source Nodes: [tensor_232], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3437, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_581], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3437, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3443 = reinterpret_tensor(buf3387, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3387  # reuse
        # Topologically Sorted Source Nodes: [x_580, x_582, float_468, mul_1751, mean_233, add_700, rsqrt_233, mul_1752, output_466, output_467], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3412, buf3417, buf3437, arg938_1, buf3443, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg938_1
        buf3444 = buf3415; del buf3415  # reuse
        # Topologically Sorted Source Nodes: [x_583], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3443, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg939_1, (16384, 6656), (1, 16384), 0), out=buf3444)
        del arg939_1
        buf3445 = buf3416; del buf3416  # reuse
        # Topologically Sorted Source Nodes: [silu_116, mul_1754], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3444, buf3445, 54525952, grid=grid(54525952), stream=stream0)
        buf3446 = reinterpret_tensor(buf3443, (16384, 16384), (16384, 1), 0); del buf3443  # reuse
        # Topologically Sorted Source Nodes: [y_467], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3445, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg940_1, (3328, 16384), (1, 3328), 0), out=buf3446)
        del arg940_1
        # Topologically Sorted Source Nodes: [tensor_233], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3446, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_584], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3446, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3452 = reinterpret_tensor(buf3378, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3378  # reuse
        # Topologically Sorted Source Nodes: [x_580, x_582, x_585, float_469, mul_1755, mean_234, add_702, rsqrt_234, mul_1756, output_468, output_469], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3412, buf3417, buf3437, buf3446, arg941_1, buf3452, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg941_1
        buf3453 = buf3424; del buf3424  # reuse
        # Topologically Sorted Source Nodes: [linear_468], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3452, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg942_1, (16384, 1280), (1, 16384), 0), out=buf3453)
        del arg942_1
        # Topologically Sorted Source Nodes: [setitem_234, setitem_235], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3453, arg0_1, arg943_1, arg944_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3455 = reinterpret_tensor(buf3435, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3435  # reuse
        # Topologically Sorted Source Nodes: [y_468], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3453, arg2_1, arg0_1, buf3455, 16777216, grid=grid(16777216), stream=stream0)
        buf3456 = reinterpret_tensor(buf3434, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3434  # reuse
        # Topologically Sorted Source Nodes: [y_468], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg943_1, buf3456, 25165824, grid=grid(25165824), stream=stream0)
        del arg943_1
        buf3457 = reinterpret_tensor(buf3433, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3433  # reuse
        # Topologically Sorted Source Nodes: [y_468], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3455, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3456, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3457)
        buf3462 = reinterpret_tensor(buf3457, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3457  # reuse
        # Topologically Sorted Source Nodes: [mask, y_468], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3462, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3463 = reinterpret_tensor(buf3456, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3456  # reuse
        # Topologically Sorted Source Nodes: [y_468], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg944_1, buf3463, 25165824, grid=grid(25165824), stream=stream0)
        del arg944_1
        buf3464 = reinterpret_tensor(buf3455, (128, 1024, 128), (131072, 128, 1), 0); del buf3455  # reuse
        # Topologically Sorted Source Nodes: [y_468], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3462, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3463, (128, 1536, 128), (196608, 128, 1), 0), out=buf3464)
        buf3465 = buf3436; del buf3436  # reuse
        # Topologically Sorted Source Nodes: [contiguous_117], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3464, buf3465, 16777216, grid=grid(16777216), stream=stream0)
        buf3466 = reinterpret_tensor(buf3452, (16384, 16384), (16384, 1), 0); del buf3452  # reuse
        # Topologically Sorted Source Nodes: [y_470], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3465, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg945_1, (1024, 16384), (1, 1024), 0), out=buf3466)
        del arg945_1
        # Topologically Sorted Source Nodes: [tensor_234], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3466, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_586], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3466, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3471 = buf3412; del buf3412  # reuse
        buf3473 = reinterpret_tensor(buf3358, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3358  # reuse
        # Topologically Sorted Source Nodes: [x_580, x_582, x_585, x_587, float_472, mul_1766, mean_235, add_706, rsqrt_235, mul_1767, output_470, output_471], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3471, buf3417, buf3437, buf3446, buf3466, arg946_1, buf3473, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg946_1
        buf3474 = buf3444; del buf3444  # reuse
        # Topologically Sorted Source Nodes: [x_588], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3473, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg947_1, (16384, 6656), (1, 16384), 0), out=buf3474)
        del arg947_1
        buf3475 = buf3445; del buf3445  # reuse
        # Topologically Sorted Source Nodes: [silu_117, mul_1769], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3474, buf3475, 54525952, grid=grid(54525952), stream=stream0)
        buf3476 = reinterpret_tensor(buf3473, (16384, 16384), (16384, 1), 0); del buf3473  # reuse
        # Topologically Sorted Source Nodes: [y_471], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3475, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg948_1, (3328, 16384), (1, 3328), 0), out=buf3476)
        del arg948_1
        # Topologically Sorted Source Nodes: [tensor_235], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3476, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_589], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3476, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3482 = reinterpret_tensor(buf3466, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3466  # reuse
        # Topologically Sorted Source Nodes: [x_590, float_473, mul_1770, mean_236, add_708, rsqrt_236, mul_1771, output_472, output_473], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3471, buf3476, arg949_1, buf3482, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg949_1
        buf3483 = buf3453; del buf3453  # reuse
        # Topologically Sorted Source Nodes: [linear_472], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3482, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg950_1, (16384, 1280), (1, 16384), 0), out=buf3483)
        del arg950_1
        # Topologically Sorted Source Nodes: [setitem_236, setitem_237], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3483, arg0_1, arg951_1, arg952_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3485 = reinterpret_tensor(buf3464, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3464  # reuse
        # Topologically Sorted Source Nodes: [y_472], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3483, arg2_1, arg0_1, buf3485, 16777216, grid=grid(16777216), stream=stream0)
        buf3486 = reinterpret_tensor(buf3463, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3463  # reuse
        # Topologically Sorted Source Nodes: [y_472], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg951_1, buf3486, 25165824, grid=grid(25165824), stream=stream0)
        del arg951_1
        buf3487 = reinterpret_tensor(buf3462, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3462  # reuse
        # Topologically Sorted Source Nodes: [y_472], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3485, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3486, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3487)
        buf3492 = reinterpret_tensor(buf3487, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3487  # reuse
        # Topologically Sorted Source Nodes: [mask, y_472], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3492, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3493 = reinterpret_tensor(buf3486, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3486  # reuse
        # Topologically Sorted Source Nodes: [y_472], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg952_1, buf3493, 25165824, grid=grid(25165824), stream=stream0)
        del arg952_1
        buf3494 = reinterpret_tensor(buf3485, (128, 1024, 128), (131072, 128, 1), 0); del buf3485  # reuse
        # Topologically Sorted Source Nodes: [y_472], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3492, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3493, (128, 1536, 128), (196608, 128, 1), 0), out=buf3494)
        buf3495 = buf3465; del buf3465  # reuse
        # Topologically Sorted Source Nodes: [contiguous_118], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3494, buf3495, 16777216, grid=grid(16777216), stream=stream0)
        buf3496 = reinterpret_tensor(buf3482, (16384, 16384), (16384, 1), 0); del buf3482  # reuse
        # Topologically Sorted Source Nodes: [y_474], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3495, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg953_1, (1024, 16384), (1, 1024), 0), out=buf3496)
        del arg953_1
        # Topologically Sorted Source Nodes: [tensor_236], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3496, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_591], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3496, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3502 = reinterpret_tensor(buf3446, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3446  # reuse
        # Topologically Sorted Source Nodes: [x_590, x_592, float_476, mul_1781, mean_237, add_712, rsqrt_237, mul_1782, output_474, output_475], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3471, buf3476, buf3496, arg954_1, buf3502, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg954_1
        buf3503 = buf3474; del buf3474  # reuse
        # Topologically Sorted Source Nodes: [x_593], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3502, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg955_1, (16384, 6656), (1, 16384), 0), out=buf3503)
        del arg955_1
        buf3504 = buf3475; del buf3475  # reuse
        # Topologically Sorted Source Nodes: [silu_118, mul_1784], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3503, buf3504, 54525952, grid=grid(54525952), stream=stream0)
        buf3505 = reinterpret_tensor(buf3502, (16384, 16384), (16384, 1), 0); del buf3502  # reuse
        # Topologically Sorted Source Nodes: [y_475], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3504, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg956_1, (3328, 16384), (1, 3328), 0), out=buf3505)
        del arg956_1
        # Topologically Sorted Source Nodes: [tensor_237], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3505, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_594], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3505, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3511 = reinterpret_tensor(buf3437, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3437  # reuse
        # Topologically Sorted Source Nodes: [x_590, x_592, x_595, float_477, mul_1785, mean_238, add_714, rsqrt_238, mul_1786, output_476, output_477], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3471, buf3476, buf3496, buf3505, arg957_1, buf3511, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg957_1
        buf3512 = buf3483; del buf3483  # reuse
        # Topologically Sorted Source Nodes: [linear_476], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3511, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg958_1, (16384, 1280), (1, 16384), 0), out=buf3512)
        del arg958_1
        # Topologically Sorted Source Nodes: [setitem_238, setitem_239], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3512, arg0_1, arg959_1, arg960_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3514 = reinterpret_tensor(buf3494, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3494  # reuse
        # Topologically Sorted Source Nodes: [y_476], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3512, arg2_1, arg0_1, buf3514, 16777216, grid=grid(16777216), stream=stream0)
        buf3515 = reinterpret_tensor(buf3493, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3493  # reuse
        # Topologically Sorted Source Nodes: [y_476], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg959_1, buf3515, 25165824, grid=grid(25165824), stream=stream0)
        del arg959_1
        buf3516 = reinterpret_tensor(buf3492, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3492  # reuse
        # Topologically Sorted Source Nodes: [y_476], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3514, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3515, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3516)
        buf3521 = reinterpret_tensor(buf3516, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3516  # reuse
        # Topologically Sorted Source Nodes: [mask, y_476], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3521, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3522 = reinterpret_tensor(buf3515, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3515  # reuse
        # Topologically Sorted Source Nodes: [y_476], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg960_1, buf3522, 25165824, grid=grid(25165824), stream=stream0)
        del arg960_1
        buf3523 = reinterpret_tensor(buf3514, (128, 1024, 128), (131072, 128, 1), 0); del buf3514  # reuse
        # Topologically Sorted Source Nodes: [y_476], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3521, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3522, (128, 1536, 128), (196608, 128, 1), 0), out=buf3523)
        buf3524 = buf3495; del buf3495  # reuse
        # Topologically Sorted Source Nodes: [contiguous_119], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3523, buf3524, 16777216, grid=grid(16777216), stream=stream0)
        buf3525 = reinterpret_tensor(buf3511, (16384, 16384), (16384, 1), 0); del buf3511  # reuse
        # Topologically Sorted Source Nodes: [y_478], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3524, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg961_1, (1024, 16384), (1, 1024), 0), out=buf3525)
        del arg961_1
        # Topologically Sorted Source Nodes: [tensor_238], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3525, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_596], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3525, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3530 = buf3471; del buf3471  # reuse
        buf3532 = reinterpret_tensor(buf3417, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3417  # reuse
        # Topologically Sorted Source Nodes: [x_590, x_592, x_595, x_597, float_480, mul_1796, mean_239, add_718, rsqrt_239, mul_1797, output_478, output_479], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3530, buf3476, buf3496, buf3505, buf3525, arg962_1, buf3532, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg962_1
        buf3533 = buf3503; del buf3503  # reuse
        # Topologically Sorted Source Nodes: [x_598], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3532, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg963_1, (16384, 6656), (1, 16384), 0), out=buf3533)
        del arg963_1
        buf3534 = buf3504; del buf3504  # reuse
        # Topologically Sorted Source Nodes: [silu_119, mul_1799], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3533, buf3534, 54525952, grid=grid(54525952), stream=stream0)
        buf3535 = reinterpret_tensor(buf3532, (16384, 16384), (16384, 1), 0); del buf3532  # reuse
        # Topologically Sorted Source Nodes: [y_479], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3534, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg964_1, (3328, 16384), (1, 3328), 0), out=buf3535)
        del arg964_1
        # Topologically Sorted Source Nodes: [tensor_239], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3535, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_599], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3535, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3541 = reinterpret_tensor(buf3525, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3525  # reuse
        # Topologically Sorted Source Nodes: [x_600, float_481, mul_1800, mean_240, add_720, rsqrt_240, mul_1801, output_480, output_481], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3530, buf3535, arg965_1, buf3541, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg965_1
        buf3542 = buf3512; del buf3512  # reuse
        # Topologically Sorted Source Nodes: [linear_480], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3541, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg966_1, (16384, 1280), (1, 16384), 0), out=buf3542)
        del arg966_1
        # Topologically Sorted Source Nodes: [setitem_240, setitem_241], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3542, arg0_1, arg967_1, arg968_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3544 = reinterpret_tensor(buf3523, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3523  # reuse
        # Topologically Sorted Source Nodes: [y_480], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3542, arg2_1, arg0_1, buf3544, 16777216, grid=grid(16777216), stream=stream0)
        buf3545 = reinterpret_tensor(buf3522, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3522  # reuse
        # Topologically Sorted Source Nodes: [y_480], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg967_1, buf3545, 25165824, grid=grid(25165824), stream=stream0)
        del arg967_1
        buf3546 = reinterpret_tensor(buf3521, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3521  # reuse
        # Topologically Sorted Source Nodes: [y_480], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3544, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3545, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3546)
        buf3551 = reinterpret_tensor(buf3546, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3546  # reuse
        # Topologically Sorted Source Nodes: [mask, y_480], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3551, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3552 = reinterpret_tensor(buf3545, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3545  # reuse
        # Topologically Sorted Source Nodes: [y_480], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg968_1, buf3552, 25165824, grid=grid(25165824), stream=stream0)
        del arg968_1
        buf3553 = reinterpret_tensor(buf3544, (128, 1024, 128), (131072, 128, 1), 0); del buf3544  # reuse
        # Topologically Sorted Source Nodes: [y_480], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3551, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3552, (128, 1536, 128), (196608, 128, 1), 0), out=buf3553)
        buf3554 = buf3524; del buf3524  # reuse
        # Topologically Sorted Source Nodes: [contiguous_120], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3553, buf3554, 16777216, grid=grid(16777216), stream=stream0)
        buf3555 = reinterpret_tensor(buf3541, (16384, 16384), (16384, 1), 0); del buf3541  # reuse
        # Topologically Sorted Source Nodes: [y_482], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3554, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg969_1, (1024, 16384), (1, 1024), 0), out=buf3555)
        del arg969_1
        # Topologically Sorted Source Nodes: [tensor_240], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3555, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_601], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3555, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3561 = reinterpret_tensor(buf3505, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3505  # reuse
        # Topologically Sorted Source Nodes: [x_600, x_602, float_484, mul_1811, mean_241, add_724, rsqrt_241, mul_1812, output_482, output_483], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3530, buf3535, buf3555, arg970_1, buf3561, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg970_1
        buf3562 = buf3533; del buf3533  # reuse
        # Topologically Sorted Source Nodes: [x_603], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3561, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg971_1, (16384, 6656), (1, 16384), 0), out=buf3562)
        del arg971_1
        buf3563 = buf3534; del buf3534  # reuse
        # Topologically Sorted Source Nodes: [silu_120, mul_1814], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3562, buf3563, 54525952, grid=grid(54525952), stream=stream0)
        buf3564 = reinterpret_tensor(buf3561, (16384, 16384), (16384, 1), 0); del buf3561  # reuse
        # Topologically Sorted Source Nodes: [y_483], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3563, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg972_1, (3328, 16384), (1, 3328), 0), out=buf3564)
        del arg972_1
        # Topologically Sorted Source Nodes: [tensor_241], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3564, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_604], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3564, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3570 = reinterpret_tensor(buf3496, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3496  # reuse
        # Topologically Sorted Source Nodes: [x_600, x_602, x_605, float_485, mul_1815, mean_242, add_726, rsqrt_242, mul_1816, output_484, output_485], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3530, buf3535, buf3555, buf3564, arg973_1, buf3570, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg973_1
        buf3571 = buf3542; del buf3542  # reuse
        # Topologically Sorted Source Nodes: [linear_484], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3570, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg974_1, (16384, 1280), (1, 16384), 0), out=buf3571)
        del arg974_1
        # Topologically Sorted Source Nodes: [setitem_242, setitem_243], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3571, arg0_1, arg975_1, arg976_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3573 = reinterpret_tensor(buf3553, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3553  # reuse
        # Topologically Sorted Source Nodes: [y_484], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3571, arg2_1, arg0_1, buf3573, 16777216, grid=grid(16777216), stream=stream0)
        buf3574 = reinterpret_tensor(buf3552, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3552  # reuse
        # Topologically Sorted Source Nodes: [y_484], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg975_1, buf3574, 25165824, grid=grid(25165824), stream=stream0)
        del arg975_1
        buf3575 = reinterpret_tensor(buf3551, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3551  # reuse
        # Topologically Sorted Source Nodes: [y_484], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3573, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3574, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3575)
        buf3580 = reinterpret_tensor(buf3575, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3575  # reuse
        # Topologically Sorted Source Nodes: [mask, y_484], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3580, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3581 = reinterpret_tensor(buf3574, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3574  # reuse
        # Topologically Sorted Source Nodes: [y_484], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg976_1, buf3581, 25165824, grid=grid(25165824), stream=stream0)
        del arg976_1
        buf3582 = reinterpret_tensor(buf3573, (128, 1024, 128), (131072, 128, 1), 0); del buf3573  # reuse
        # Topologically Sorted Source Nodes: [y_484], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3580, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3581, (128, 1536, 128), (196608, 128, 1), 0), out=buf3582)
        buf3583 = buf3554; del buf3554  # reuse
        # Topologically Sorted Source Nodes: [contiguous_121], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3582, buf3583, 16777216, grid=grid(16777216), stream=stream0)
        buf3584 = reinterpret_tensor(buf3570, (16384, 16384), (16384, 1), 0); del buf3570  # reuse
        # Topologically Sorted Source Nodes: [y_486], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3583, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg977_1, (1024, 16384), (1, 1024), 0), out=buf3584)
        del arg977_1
        # Topologically Sorted Source Nodes: [tensor_242], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3584, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_606], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3584, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3589 = buf3530; del buf3530  # reuse
        buf3591 = reinterpret_tensor(buf3476, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3476  # reuse
        # Topologically Sorted Source Nodes: [x_600, x_602, x_605, x_607, float_488, mul_1826, mean_243, add_730, rsqrt_243, mul_1827, output_486, output_487], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3589, buf3535, buf3555, buf3564, buf3584, arg978_1, buf3591, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg978_1
        buf3592 = buf3562; del buf3562  # reuse
        # Topologically Sorted Source Nodes: [x_608], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3591, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg979_1, (16384, 6656), (1, 16384), 0), out=buf3592)
        del arg979_1
        buf3593 = buf3563; del buf3563  # reuse
        # Topologically Sorted Source Nodes: [silu_121, mul_1829], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3592, buf3593, 54525952, grid=grid(54525952), stream=stream0)
        buf3594 = reinterpret_tensor(buf3591, (16384, 16384), (16384, 1), 0); del buf3591  # reuse
        # Topologically Sorted Source Nodes: [y_487], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3593, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg980_1, (3328, 16384), (1, 3328), 0), out=buf3594)
        del arg980_1
        # Topologically Sorted Source Nodes: [tensor_243], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3594, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_609], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3594, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3600 = reinterpret_tensor(buf3584, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3584  # reuse
        # Topologically Sorted Source Nodes: [x_610, float_489, mul_1830, mean_244, add_732, rsqrt_244, mul_1831, output_488, output_489], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3589, buf3594, arg981_1, buf3600, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg981_1
        buf3601 = buf3571; del buf3571  # reuse
        # Topologically Sorted Source Nodes: [linear_488], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3600, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg982_1, (16384, 1280), (1, 16384), 0), out=buf3601)
        del arg982_1
        # Topologically Sorted Source Nodes: [setitem_244, setitem_245], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3601, arg0_1, arg983_1, arg984_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3603 = reinterpret_tensor(buf3582, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3582  # reuse
        # Topologically Sorted Source Nodes: [y_488], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3601, arg2_1, arg0_1, buf3603, 16777216, grid=grid(16777216), stream=stream0)
        buf3604 = reinterpret_tensor(buf3581, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3581  # reuse
        # Topologically Sorted Source Nodes: [y_488], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg983_1, buf3604, 25165824, grid=grid(25165824), stream=stream0)
        del arg983_1
        buf3605 = reinterpret_tensor(buf3580, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3580  # reuse
        # Topologically Sorted Source Nodes: [y_488], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3603, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3604, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3605)
        buf3610 = reinterpret_tensor(buf3605, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3605  # reuse
        # Topologically Sorted Source Nodes: [mask, y_488], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3610, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3611 = reinterpret_tensor(buf3604, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3604  # reuse
        # Topologically Sorted Source Nodes: [y_488], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg984_1, buf3611, 25165824, grid=grid(25165824), stream=stream0)
        del arg984_1
        buf3612 = reinterpret_tensor(buf3603, (128, 1024, 128), (131072, 128, 1), 0); del buf3603  # reuse
        # Topologically Sorted Source Nodes: [y_488], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3610, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3611, (128, 1536, 128), (196608, 128, 1), 0), out=buf3612)
        buf3613 = buf3583; del buf3583  # reuse
        # Topologically Sorted Source Nodes: [contiguous_122], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3612, buf3613, 16777216, grid=grid(16777216), stream=stream0)
        buf3614 = reinterpret_tensor(buf3600, (16384, 16384), (16384, 1), 0); del buf3600  # reuse
        # Topologically Sorted Source Nodes: [y_490], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3613, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg985_1, (1024, 16384), (1, 1024), 0), out=buf3614)
        del arg985_1
        # Topologically Sorted Source Nodes: [tensor_244], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3614, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_611], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3614, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3620 = reinterpret_tensor(buf3564, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3564  # reuse
        # Topologically Sorted Source Nodes: [x_610, x_612, float_492, mul_1841, mean_245, add_736, rsqrt_245, mul_1842, output_490, output_491], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3589, buf3594, buf3614, arg986_1, buf3620, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg986_1
        buf3621 = buf3592; del buf3592  # reuse
        # Topologically Sorted Source Nodes: [x_613], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3620, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg987_1, (16384, 6656), (1, 16384), 0), out=buf3621)
        del arg987_1
        buf3622 = buf3593; del buf3593  # reuse
        # Topologically Sorted Source Nodes: [silu_122, mul_1844], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3621, buf3622, 54525952, grid=grid(54525952), stream=stream0)
        buf3623 = reinterpret_tensor(buf3620, (16384, 16384), (16384, 1), 0); del buf3620  # reuse
        # Topologically Sorted Source Nodes: [y_491], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3622, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg988_1, (3328, 16384), (1, 3328), 0), out=buf3623)
        del arg988_1
        # Topologically Sorted Source Nodes: [tensor_245], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3623, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_614], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3623, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3629 = reinterpret_tensor(buf3555, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3555  # reuse
        # Topologically Sorted Source Nodes: [x_610, x_612, x_615, float_493, mul_1845, mean_246, add_738, rsqrt_246, mul_1846, output_492, output_493], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3589, buf3594, buf3614, buf3623, arg989_1, buf3629, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg989_1
        buf3630 = buf3601; del buf3601  # reuse
        # Topologically Sorted Source Nodes: [linear_492], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3629, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg990_1, (16384, 1280), (1, 16384), 0), out=buf3630)
        del arg990_1
        # Topologically Sorted Source Nodes: [setitem_246, setitem_247], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3630, arg0_1, arg991_1, arg992_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3632 = reinterpret_tensor(buf3612, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3612  # reuse
        # Topologically Sorted Source Nodes: [y_492], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3630, arg2_1, arg0_1, buf3632, 16777216, grid=grid(16777216), stream=stream0)
        buf3633 = reinterpret_tensor(buf3611, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3611  # reuse
        # Topologically Sorted Source Nodes: [y_492], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg991_1, buf3633, 25165824, grid=grid(25165824), stream=stream0)
        del arg991_1
        buf3634 = reinterpret_tensor(buf3610, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3610  # reuse
        # Topologically Sorted Source Nodes: [y_492], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3632, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3633, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3634)
        buf3639 = reinterpret_tensor(buf3634, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3634  # reuse
        # Topologically Sorted Source Nodes: [mask, y_492], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3639, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3640 = reinterpret_tensor(buf3633, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3633  # reuse
        # Topologically Sorted Source Nodes: [y_492], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg992_1, buf3640, 25165824, grid=grid(25165824), stream=stream0)
        del arg992_1
        buf3641 = reinterpret_tensor(buf3632, (128, 1024, 128), (131072, 128, 1), 0); del buf3632  # reuse
        # Topologically Sorted Source Nodes: [y_492], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3639, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3640, (128, 1536, 128), (196608, 128, 1), 0), out=buf3641)
        buf3642 = buf3613; del buf3613  # reuse
        # Topologically Sorted Source Nodes: [contiguous_123], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3641, buf3642, 16777216, grid=grid(16777216), stream=stream0)
        buf3643 = reinterpret_tensor(buf3629, (16384, 16384), (16384, 1), 0); del buf3629  # reuse
        # Topologically Sorted Source Nodes: [y_494], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3642, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg993_1, (1024, 16384), (1, 1024), 0), out=buf3643)
        del arg993_1
        # Topologically Sorted Source Nodes: [tensor_246], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3643, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_616], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3643, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3648 = buf3589; del buf3589  # reuse
        buf3650 = reinterpret_tensor(buf3535, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3535  # reuse
        # Topologically Sorted Source Nodes: [x_610, x_612, x_615, x_617, float_496, mul_1856, mean_247, add_742, rsqrt_247, mul_1857, output_494, output_495], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3648, buf3594, buf3614, buf3623, buf3643, arg994_1, buf3650, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg994_1
        buf3651 = buf3621; del buf3621  # reuse
        # Topologically Sorted Source Nodes: [x_618], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3650, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg995_1, (16384, 6656), (1, 16384), 0), out=buf3651)
        del arg995_1
        buf3652 = buf3622; del buf3622  # reuse
        # Topologically Sorted Source Nodes: [silu_123, mul_1859], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3651, buf3652, 54525952, grid=grid(54525952), stream=stream0)
        buf3653 = reinterpret_tensor(buf3650, (16384, 16384), (16384, 1), 0); del buf3650  # reuse
        # Topologically Sorted Source Nodes: [y_495], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3652, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg996_1, (3328, 16384), (1, 3328), 0), out=buf3653)
        del arg996_1
        # Topologically Sorted Source Nodes: [tensor_247], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3653, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_619], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3653, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3659 = reinterpret_tensor(buf3643, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3643  # reuse
        # Topologically Sorted Source Nodes: [x_620, float_497, mul_1860, mean_248, add_744, rsqrt_248, mul_1861, output_496, output_497], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_11.run(buf3648, buf3653, arg997_1, buf3659, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg997_1
        buf3660 = buf3630; del buf3630  # reuse
        # Topologically Sorted Source Nodes: [linear_496], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3659, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg998_1, (16384, 1280), (1, 16384), 0), out=buf3660)
        del arg998_1
        # Topologically Sorted Source Nodes: [setitem_248, setitem_249], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3660, arg0_1, arg999_1, arg1000_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3662 = reinterpret_tensor(buf3641, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3641  # reuse
        # Topologically Sorted Source Nodes: [y_496], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3660, arg2_1, arg0_1, buf3662, 16777216, grid=grid(16777216), stream=stream0)
        buf3663 = reinterpret_tensor(buf3640, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3640  # reuse
        # Topologically Sorted Source Nodes: [y_496], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg999_1, buf3663, 25165824, grid=grid(25165824), stream=stream0)
        del arg999_1
        buf3664 = reinterpret_tensor(buf3639, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3639  # reuse
        # Topologically Sorted Source Nodes: [y_496], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3662, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3663, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3664)
        buf3669 = reinterpret_tensor(buf3664, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3664  # reuse
        # Topologically Sorted Source Nodes: [mask, y_496], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3669, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        buf3670 = reinterpret_tensor(buf3663, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3663  # reuse
        # Topologically Sorted Source Nodes: [y_496], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg1000_1, buf3670, 25165824, grid=grid(25165824), stream=stream0)
        del arg1000_1
        buf3671 = reinterpret_tensor(buf3662, (128, 1024, 128), (131072, 128, 1), 0); del buf3662  # reuse
        # Topologically Sorted Source Nodes: [y_496], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3669, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3670, (128, 1536, 128), (196608, 128, 1), 0), out=buf3671)
        buf3672 = buf3642; del buf3642  # reuse
        # Topologically Sorted Source Nodes: [contiguous_124], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3671, buf3672, 16777216, grid=grid(16777216), stream=stream0)
        buf3673 = reinterpret_tensor(buf3659, (16384, 16384), (16384, 1), 0); del buf3659  # reuse
        # Topologically Sorted Source Nodes: [y_498], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3672, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg1001_1, (1024, 16384), (1, 1024), 0), out=buf3673)
        del arg1001_1
        # Topologically Sorted Source Nodes: [tensor_248], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3673, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_621], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3673, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3679 = reinterpret_tensor(buf3623, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3623  # reuse
        # Topologically Sorted Source Nodes: [x_620, x_622, float_500, mul_1871, mean_249, add_748, rsqrt_249, mul_1872, output_498, output_499], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_12.run(buf3648, buf3653, buf3673, arg1002_1, buf3679, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg1002_1
        buf3680 = buf3651; del buf3651  # reuse
        # Topologically Sorted Source Nodes: [x_623], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3679, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg1003_1, (16384, 6656), (1, 16384), 0), out=buf3680)
        del arg1003_1
        buf3681 = buf3652; del buf3652  # reuse
        # Topologically Sorted Source Nodes: [silu_124, mul_1874], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3680, buf3681, 54525952, grid=grid(54525952), stream=stream0)
        buf3682 = reinterpret_tensor(buf3679, (16384, 16384), (16384, 1), 0); del buf3679  # reuse
        # Topologically Sorted Source Nodes: [y_499], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3681, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg1004_1, (3328, 16384), (1, 3328), 0), out=buf3682)
        del arg1004_1
        # Topologically Sorted Source Nodes: [tensor_249], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3682, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_624], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3682, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3688 = reinterpret_tensor(buf3614, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3614  # reuse
        # Topologically Sorted Source Nodes: [x_620, x_622, x_625, float_501, mul_1875, mean_250, add_750, rsqrt_250, mul_1876, output_500, output_501], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_13.run(buf3648, buf3653, buf3673, buf3682, arg1005_1, buf3688, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg1005_1
        buf3689 = buf3660; del buf3660  # reuse
        # Topologically Sorted Source Nodes: [linear_500], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3688, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg1006_1, (16384, 1280), (1, 16384), 0), out=buf3689)
        del arg1006_1
        # Topologically Sorted Source Nodes: [setitem_250, setitem_251], Original ATen: [aten.index_put]
        triton_poi_fused_index_put_1.run(arg2_1, buf3689, arg0_1, arg1007_1, arg1008_1, 2097152, grid=grid(2097152), stream=stream0)
        buf3691 = reinterpret_tensor(buf3671, (16, 8, 1024, 128), (1048576, 131072, 128, 1), 0); del buf3671  # reuse
        # Topologically Sorted Source Nodes: [y_500], Original ATen: [aten._to_copy, aten.mul, aten.clone]
        triton_poi_fused__to_copy_clone_mul_2.run(buf3689, arg2_1, arg0_1, buf3691, 16777216, grid=grid(16777216), stream=stream0)
        del arg0_1
        del buf3689
        buf3692 = reinterpret_tensor(buf3670, (16, 8, 128, 1536), (1572864, 196608, 1536, 1), 0); del buf3670  # reuse
        # Topologically Sorted Source Nodes: [y_500], Original ATen: [aten.mul]
        triton_poi_fused_mul_3.run(arg1007_1, buf3692, 25165824, grid=grid(25165824), stream=stream0)
        del arg1007_1
        buf3693 = reinterpret_tensor(buf3669, (128, 1024, 1536), (1572864, 1536, 1), 0); del buf3669  # reuse
        # Topologically Sorted Source Nodes: [y_500], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3691, (128, 1024, 128), (131072, 128, 1), 0), reinterpret_tensor(buf3692, (128, 128, 1536), (196608, 1536, 1), 0), out=buf3693)
        buf3698 = reinterpret_tensor(buf3693, (16, 8, 1024, 1536), (12582912, 1572864, 1536, 1), 0); del buf3693  # reuse
        # Topologically Sorted Source Nodes: [mask, y_500], Original ATen: [aten.index, aten.scalar_tensor, aten.where, aten.add, aten._safe_softmax]
        triton_red_fused__safe_softmax_add_index_scalar_tensor_where_4.run(buf3698, arg2_1, arg1_1, 131072, 1536, grid=grid(131072), stream=stream0)
        del arg1_1
        del arg2_1
        buf3699 = reinterpret_tensor(buf3692, (16, 8, 1536, 128), (1572864, 196608, 128, 1), 0); del buf3692  # reuse
        # Topologically Sorted Source Nodes: [y_500], Original ATen: [aten._to_copy]
        triton_poi_fused__to_copy_5.run(arg1008_1, buf3699, 25165824, grid=grid(25165824), stream=stream0)
        del arg1008_1
        buf3700 = reinterpret_tensor(buf3691, (128, 1024, 128), (131072, 128, 1), 0); del buf3691  # reuse
        # Topologically Sorted Source Nodes: [y_500], Original ATen: [aten.bmm]
        extern_kernels.bmm(reinterpret_tensor(buf3698, (128, 1024, 1536), (1572864, 1536, 1), 0), reinterpret_tensor(buf3699, (128, 1536, 128), (196608, 128, 1), 0), out=buf3700)
        del buf3698
        del buf3699
        buf3701 = buf3672; del buf3672  # reuse
        # Topologically Sorted Source Nodes: [contiguous_125], Original ATen: [aten.clone]
        triton_poi_fused_clone_6.run(buf3700, buf3701, 16777216, grid=grid(16777216), stream=stream0)
        del buf3700
        buf3702 = reinterpret_tensor(buf3688, (16384, 16384), (16384, 1), 0); del buf3688  # reuse
        # Topologically Sorted Source Nodes: [y_502], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3701, (16384, 1024), (1024, 1), 0), reinterpret_tensor(arg1009_1, (1024, 16384), (1, 1024), 0), out=buf3702)
        del arg1009_1
        del buf3701
        # Topologically Sorted Source Nodes: [tensor_250], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3702, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        # Topologically Sorted Source Nodes: [x_626], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3702, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3707 = buf3648; del buf3648  # reuse
        buf3709 = reinterpret_tensor(buf3594, (16, 1024, 16384), (16777216, 16384, 1), 0); del buf3594  # reuse
        # Topologically Sorted Source Nodes: [x_620, x_622, x_625, x_627, float_504, mul_1886, mean_251, add_754, rsqrt_251, mul_1887, output_502, output_503], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_14.run(buf3707, buf3653, buf3673, buf3682, buf3702, arg1010_1, buf3709, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg1010_1
        del buf3653
        del buf3673
        del buf3682
        buf3710 = buf3680; del buf3680  # reuse
        # Topologically Sorted Source Nodes: [x_628], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3709, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg1011_1, (16384, 6656), (1, 16384), 0), out=buf3710)
        del arg1011_1
        buf3711 = buf3681; del buf3681  # reuse
        # Topologically Sorted Source Nodes: [silu_125, mul_1889], Original ATen: [aten.silu, aten.mul]
        triton_poi_fused_mul_silu_8.run(buf3710, buf3711, 54525952, grid=grid(54525952), stream=stream0)
        del buf3710
        buf3712 = reinterpret_tensor(buf3709, (16384, 16384), (16384, 1), 0); del buf3709  # reuse
        # Topologically Sorted Source Nodes: [y_503], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3711, (16384, 3328), (3328, 1), 0), reinterpret_tensor(arg1012_1, (3328, 16384), (1, 3328), 0), out=buf3712)
        del arg1012_1
        del buf3711
        # Topologically Sorted Source Nodes: [tensor_251], Original ATen: [_c10d_functional.all_reduce]
        torch.ops._c10d_functional.all_reduce_.default(reinterpret_tensor(buf3712, (16, 1024, 16384), (16777216, 16384, 1), 0), 'sum', '0')
        del buf3702
        buf3728 = empty_strided_cuda((1, ), (1, ), torch.int64)
        # Topologically Sorted Source Nodes: [], Original ATen: []
        aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf3728)
        # Topologically Sorted Source Nodes: [x_629], Original ATen: [_c10d_functional.wait_tensor]
        torch.ops._c10d_functional.wait_tensor.default(reinterpret_tensor(buf3712, (16, 1024, 16384), (16777216, 16384, 1), 0))
        buf3718 = buf3707; del buf3707  # reuse
        # Topologically Sorted Source Nodes: [x_630, float_505, mul_1890, mean_252, add_756, rsqrt_252, mul_1891, output_504, output_505], Original ATen: [aten.add, aten._to_copy, aten.mul, aten.mean, aten.rsqrt]
        triton_red_fused__to_copy_add_mean_mul_rsqrt_15.run(buf3718, buf3712, arg1013_1, 16384, 16384, grid=grid(16384), stream=stream0)
        del arg1013_1
        del buf3712
        buf3719 = empty_strided_cuda((16384, 128256), (128256, 1), torch.float16)
        # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.mm]
        extern_kernels.mm(reinterpret_tensor(buf3718, (16384, 16384), (16384, 1), 0), reinterpret_tensor(arg1014_1, (16384, 128256), (1, 16384), 0), out=buf3719)
        del arg1014_1
        del buf3718
        buf3720 = empty_strided_cuda((16, 128256), (128256, 1), torch.float16)
        # Topologically Sorted Source Nodes: [logits_1], Original ATen: [aten.div]
        triton_poi_fused_div_16.run(buf3719, buf3720, 2052096, grid=grid(2052096), stream=stream0)
        del buf3719
        # Topologically Sorted Source Nodes: [logits_1, topk], Original ATen: [aten.div, aten.topk]
        buf3721 = torch.ops.aten.topk.default(buf3720, 200)
        buf3722 = buf3721[0]
        del buf3721
        buf3724 = empty_strided_cuda((16, 1, 16), (16, 256, 1), torch.float32)
        # Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
        triton_red_fused__softmax_lt_scalar_tensor_where_17.run(buf3720, buf3722, buf3724, 256, 8016, grid=grid(256), stream=stream0)
        buf3725 = empty_strided_cuda((16, 1), (1, 16), torch.float32)
        # Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
        triton_per_fused__softmax_lt_scalar_tensor_where_18.run(buf3724, buf3725, 16, 16, grid=grid(16), stream=stream0)
        buf3726 = buf3724; del buf3724  # reuse
        # Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
        triton_red_fused__softmax_lt_scalar_tensor_where_19.run(buf3720, buf3722, buf3725, buf3726, 256, 8016, grid=grid(256), stream=stream0)
        buf3727 = empty_strided_cuda((16, 1), (1, 16), torch.float32)
        # Topologically Sorted Source Nodes: [lt, logits_2, probs], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax]
        triton_per_fused__softmax_lt_scalar_tensor_where_20.run(buf3726, buf3727, 16, 16, grid=grid(16), stream=stream0)
        del buf3726
        buf3731 = empty_strided_cuda((16, 1), (1, 1), torch.int32)
        # Topologically Sorted Source Nodes: [lt, logits_2, probs, q_504, truediv_1, argmax, idx_next], Original ATen: [aten.lt, aten.scalar_tensor, aten.where, aten._softmax, aten.exponential, aten.div, aten.argmax, aten._to_copy]
        triton_red_fused__softmax__to_copy_argmax_div_exponential_lt_scalar_tensor_where_21.run(buf3728, buf3720, buf3722, buf3725, buf3727, buf3731, 0, 16, 128256, grid=grid(16), stream=stream0)
        del buf3720
        del buf3722
        del buf3725
        del buf3727
        del buf3728
    return (buf3731, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    arg0_1 = rand_strided((131072, 64, 2), (128, 2, 1), device='cuda:0', dtype=torch.float16)
    arg1_1 = rand_strided((1536, 1536), (1536, 1), device='cuda:0', dtype=torch.bool)
    arg2_1 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.int64)
    arg3_1 = rand_strided((128256, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg4_1 = rand_strided((16, 1024), (1024, 1), device='cuda:0', dtype=torch.int64)
    arg5_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg6_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg7_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg8_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg9_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg10_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg11_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg12_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg13_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg14_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg15_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg16_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg17_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg18_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg19_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg20_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg21_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg22_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg23_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg24_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg25_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg26_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg27_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg28_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg29_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg30_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg31_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg32_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg33_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg34_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg35_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg36_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg37_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg38_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg39_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg40_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg41_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg42_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg43_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg44_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg45_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg46_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg47_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg48_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg49_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg50_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg51_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg52_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg53_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg54_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg55_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg56_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg57_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg58_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg59_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg60_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg61_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg62_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg63_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg64_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg65_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg66_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg67_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg68_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg69_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg70_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg71_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg72_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg73_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg74_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg75_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg76_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg77_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg78_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg79_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg80_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg81_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg82_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg83_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg84_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg85_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg86_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg87_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg88_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg89_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg90_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg91_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg92_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg93_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg94_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg95_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg96_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg97_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg98_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg99_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg100_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg101_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg102_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg103_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg104_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg105_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg106_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg107_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg108_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg109_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg110_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg111_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg112_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg113_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg114_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg115_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg116_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg117_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg118_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg119_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg120_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg121_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg122_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg123_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg124_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg125_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg126_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg127_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg128_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg129_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg130_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg131_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg132_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg133_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg134_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg135_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg136_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg137_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg138_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg139_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg140_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg141_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg142_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg143_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg144_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg145_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg146_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg147_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg148_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg149_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg150_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg151_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg152_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg153_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg154_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg155_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg156_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg157_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg158_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg159_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg160_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg161_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg162_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg163_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg164_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg165_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg166_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg167_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg168_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg169_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg170_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg171_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg172_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg173_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg174_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg175_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg176_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg177_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg178_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg179_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg180_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg181_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg182_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg183_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg184_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg185_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg186_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg187_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg188_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg189_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg190_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg191_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg192_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg193_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg194_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg195_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg196_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg197_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg198_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg199_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg200_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg201_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg202_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg203_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg204_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg205_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg206_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg207_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg208_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg209_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg210_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg211_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg212_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg213_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg214_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg215_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg216_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg217_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg218_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg219_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg220_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg221_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg222_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg223_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg224_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg225_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg226_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg227_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg228_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg229_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg230_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg231_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg232_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg233_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg234_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg235_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg236_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg237_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg238_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg239_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg240_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg241_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg242_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg243_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg244_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg245_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg246_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg247_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg248_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg249_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg250_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg251_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg252_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg253_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg254_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg255_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg256_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg257_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg258_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg259_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg260_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg261_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg262_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg263_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg264_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg265_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg266_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg267_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg268_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg269_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg270_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg271_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg272_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg273_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg274_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg275_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg276_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg277_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg278_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg279_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg280_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg281_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg282_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg283_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg284_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg285_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg286_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg287_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg288_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg289_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg290_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg291_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg292_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg293_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg294_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg295_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg296_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg297_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg298_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg299_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg300_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg301_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg302_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg303_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg304_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg305_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg306_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg307_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg308_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg309_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg310_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg311_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg312_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg313_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg314_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg315_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg316_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg317_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg318_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg319_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg320_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg321_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg322_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg323_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg324_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg325_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg326_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg327_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg328_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg329_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg330_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg331_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg332_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg333_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg334_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg335_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg336_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg337_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg338_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg339_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg340_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg341_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg342_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg343_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg344_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg345_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg346_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg347_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg348_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg349_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg350_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg351_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg352_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg353_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg354_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg355_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg356_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg357_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg358_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg359_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg360_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg361_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg362_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg363_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg364_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg365_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg366_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg367_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg368_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg369_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg370_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg371_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg372_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg373_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg374_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg375_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg376_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg377_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg378_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg379_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg380_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg381_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg382_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg383_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg384_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg385_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg386_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg387_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg388_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg389_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg390_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg391_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg392_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg393_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg394_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg395_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg396_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg397_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg398_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg399_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg400_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg401_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg402_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg403_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg404_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg405_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg406_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg407_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg408_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg409_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg410_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg411_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg412_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg413_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg414_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg415_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg416_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg417_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg418_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg419_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg420_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg421_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg422_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg423_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg424_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg425_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg426_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg427_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg428_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg429_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg430_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg431_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg432_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg433_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg434_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg435_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg436_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg437_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg438_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg439_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg440_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg441_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg442_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg443_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg444_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg445_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg446_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg447_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg448_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg449_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg450_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg451_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg452_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg453_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg454_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg455_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg456_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg457_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg458_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg459_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg460_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg461_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg462_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg463_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg464_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg465_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg466_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg467_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg468_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg469_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg470_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg471_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg472_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg473_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg474_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg475_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg476_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg477_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg478_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg479_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg480_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg481_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg482_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg483_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg484_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg485_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg486_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg487_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg488_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg489_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg490_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg491_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg492_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg493_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg494_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg495_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg496_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg497_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg498_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg499_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg500_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg501_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg502_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg503_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg504_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg505_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg506_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg507_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg508_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg509_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg510_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg511_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg512_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg513_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg514_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg515_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg516_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg517_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg518_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg519_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg520_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg521_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg522_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg523_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg524_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg525_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg526_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg527_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg528_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg529_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg530_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg531_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg532_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg533_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg534_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg535_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg536_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg537_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg538_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg539_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg540_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg541_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg542_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg543_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg544_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg545_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg546_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg547_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg548_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg549_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg550_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg551_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg552_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg553_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg554_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg555_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg556_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg557_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg558_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg559_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg560_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg561_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg562_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg563_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg564_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg565_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg566_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg567_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg568_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg569_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg570_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg571_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg572_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg573_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg574_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg575_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg576_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg577_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg578_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg579_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg580_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg581_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg582_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg583_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg584_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg585_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg586_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg587_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg588_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg589_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg590_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg591_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg592_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg593_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg594_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg595_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg596_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg597_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg598_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg599_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg600_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg601_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg602_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg603_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg604_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg605_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg606_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg607_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg608_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg609_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg610_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg611_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg612_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg613_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg614_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg615_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg616_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg617_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg618_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg619_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg620_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg621_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg622_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg623_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg624_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg625_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg626_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg627_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg628_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg629_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg630_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg631_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg632_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg633_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg634_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg635_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg636_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg637_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg638_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg639_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg640_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg641_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg642_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg643_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg644_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg645_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg646_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg647_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg648_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg649_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg650_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg651_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg652_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg653_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg654_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg655_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg656_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg657_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg658_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg659_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg660_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg661_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg662_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg663_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg664_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg665_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg666_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg667_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg668_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg669_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg670_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg671_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg672_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg673_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg674_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg675_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg676_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg677_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg678_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg679_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg680_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg681_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg682_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg683_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg684_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg685_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg686_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg687_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg688_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg689_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg690_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg691_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg692_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg693_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg694_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg695_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg696_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg697_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg698_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg699_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg700_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg701_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg702_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg703_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg704_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg705_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg706_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg707_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg708_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg709_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg710_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg711_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg712_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg713_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg714_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg715_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg716_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg717_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg718_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg719_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg720_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg721_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg722_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg723_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg724_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg725_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg726_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg727_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg728_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg729_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg730_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg731_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg732_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg733_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg734_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg735_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg736_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg737_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg738_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg739_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg740_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg741_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg742_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg743_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg744_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg745_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg746_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg747_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg748_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg749_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg750_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg751_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg752_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg753_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg754_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg755_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg756_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg757_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg758_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg759_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg760_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg761_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg762_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg763_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg764_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg765_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg766_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg767_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg768_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg769_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg770_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg771_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg772_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg773_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg774_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg775_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg776_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg777_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg778_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg779_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg780_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg781_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg782_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg783_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg784_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg785_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg786_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg787_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg788_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg789_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg790_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg791_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg792_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg793_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg794_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg795_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg796_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg797_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg798_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg799_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg800_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg801_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg802_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg803_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg804_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg805_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg806_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg807_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg808_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg809_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg810_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg811_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg812_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg813_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg814_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg815_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg816_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg817_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg818_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg819_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg820_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg821_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg822_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg823_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg824_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg825_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg826_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg827_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg828_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg829_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg830_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg831_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg832_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg833_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg834_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg835_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg836_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg837_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg838_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg839_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg840_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg841_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg842_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg843_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg844_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg845_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg846_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg847_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg848_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg849_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg850_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg851_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg852_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg853_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg854_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg855_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg856_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg857_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg858_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg859_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg860_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg861_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg862_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg863_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg864_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg865_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg866_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg867_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg868_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg869_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg870_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg871_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg872_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg873_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg874_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg875_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg876_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg877_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg878_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg879_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg880_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg881_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg882_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg883_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg884_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg885_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg886_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg887_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg888_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg889_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg890_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg891_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg892_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg893_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg894_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg895_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg896_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg897_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg898_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg899_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg900_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg901_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg902_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg903_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg904_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg905_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg906_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg907_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg908_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg909_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg910_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg911_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg912_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg913_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg914_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg915_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg916_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg917_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg918_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg919_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg920_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg921_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg922_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg923_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg924_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg925_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg926_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg927_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg928_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg929_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg930_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg931_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg932_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg933_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg934_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg935_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg936_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg937_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg938_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg939_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg940_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg941_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg942_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg943_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg944_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg945_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg946_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg947_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg948_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg949_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg950_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg951_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg952_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg953_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg954_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg955_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg956_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg957_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg958_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg959_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg960_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg961_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg962_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg963_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg964_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg965_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg966_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg967_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg968_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg969_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg970_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg971_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg972_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg973_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg974_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg975_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg976_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg977_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg978_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg979_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg980_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg981_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg982_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg983_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg984_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg985_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg986_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg987_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg988_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg989_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg990_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg991_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg992_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg993_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg994_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg995_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg996_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg997_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg998_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg999_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg1000_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg1001_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg1002_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg1003_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg1004_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg1005_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg1006_1 = rand_strided((1280, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg1007_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg1008_1 = rand_strided((16, 1, 1536, 128), (196608, 196608, 128, 1), device='cuda:0', dtype=torch.float16)
    arg1009_1 = rand_strided((16384, 1024), (1024, 1), device='cuda:0', dtype=torch.float16)
    arg1010_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg1011_1 = rand_strided((6656, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    arg1012_1 = rand_strided((16384, 3328), (3328, 1), device='cuda:0', dtype=torch.float16)
    arg1013_1 = rand_strided((16384, ), (1, ), device='cuda:0', dtype=torch.float16)
    arg1014_1 = rand_strided((128256, 16384), (16384, 1), device='cuda:0', dtype=torch.float16)
    fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1])
    return print_performance(fn, times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('None', benchmark_compiled_module)
